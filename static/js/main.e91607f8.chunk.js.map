{"version":3,"sources":["component/Img_container.js","component/B_GetCurrentNext.js","page/Landing.js","component/Map.js","component/Contanier.js","component/D_filter.js","component/B_list.js","page/ShowPage.js","page/TestPage.js","App.js","styles/theme.js","styles/global.js","index.js"],"names":["Img","styled","div","ImgStyle1","img","ImgStyle2","ControlMap","MainImage","src","alt","Button","button","Wrap","ImgCon","Header","span","props","theme","mobile","Span","Landing","history","useHistory","useState","Clatitude","setCLatitude","Clongitude","setCLongitude","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","onClick","push","pathname","state","alert","showMap","Container","D_filter","setting","gu","setGu","currentValue","Dropdown","basic","color","options","text","value","key","placeholder","selection","fluid","onChange","e","name","target","textContent","B_list","prevGu","map","all","setAll","locas","i","loca","length","자치구명","도로명","설치위치","Menu_wrapper","Div_area","kakao","window","infowindow","maps","InfoWindow","removable","ShowPage","getLocation","useLocation","location","setLocation","mapContainer","document","getElementById","mapOption","center","LatLng","level","Map","place","bounds","LatLngBounds","current","Marker","data","parseFloat","위도","경도","extend","undefined","services","Geocoder","addressSearch","result","status","Status","OK","y","x","marker","close","setContent","open","setCenter","Icon","id","App","exact","path","component","LandingPage","TestPage","size","mainColor","tablet","laptop","desktop","GlobalStyle","createGlobalStyle","ReactDOM","render"],"mappings":"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","file":"static/js/main.e91607f8.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Img = styled.div`\r\n    width : 100%;\r\n    height : 60vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst ImgStyle1 = styled.img`\r\n    width : 30vh;\r\n    height : 40vh;\r\n    cursor: pointer;\r\n\r\n`\r\n\r\nconst ImgStyle2 = styled.img`\r\n    width : 30vh;\r\n    height : 40vh;\r\n    display: none;\r\n    cursor: pointer;\r\n`\r\n\r\nconst ControlMap = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width : 50%;\r\n    height : 100%;\r\n\r\n    margin: auto;\r\n    &:hover  {\r\n        ${ImgStyle2} {\r\n            display : block;\r\n        }\r\n        ${ImgStyle1} {\r\n            display : none;\r\n        }\r\n    }\r\n`\r\n\r\nfunction MainImage() {\r\n  \r\n    return (\r\n            <Img>\r\n                <ControlMap>\r\n                    <ImgStyle1 src = 'img/2.png' alt =\"can_close\"/>\r\n                    <ImgStyle2 src = 'img/1.png' alt =\"can_open\"/> \r\n                </ControlMap>\r\n            </Img>\r\n          \r\n    )\r\n}\r\n\r\nexport default MainImage\r\n","import styled from \"styled-components\";\r\n\r\n\r\nconst Button = styled.button`\r\n    backGround: white;\r\n    border : none;\r\n    &:hover {\r\n      cursor : pointer;\r\n    }\r\n`\r\n\r\n\r\n\r\nexport default Button\r\n\r\n","import React, {useState,useEffect} from 'react'\r\nimport MainImage from '../component/Img_container'\r\nimport Btn from \"../component/B_GetCurrentNext\"\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router'\r\n\r\n\r\n\r\nconst Wrap = styled.div`\r\n    width : 100%;\r\n    height : 100vh;\r\n    display : flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: auto;\r\n    padding: 3rem;\r\n    background-color: #34558b;\r\n`\r\n\r\nconst ImgCon = styled.div`\r\n    width: 100%;\r\n    height : 100%;\r\n`\r\n\r\nconst Header = styled.span`\r\n    height: 40%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-family: 'BinggraeMelona-Bold';\r\n    font-weight: bold;\r\n    font-size: 5rem;\r\n    line-height: 0.8;\r\n    color: white;\r\n\r\n    @media ${props => props.theme.mobile} {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      font-family: 'BinggraeMelona-Bold';\r\n      font-weight: bold;\r\n      text-align: center;\r\n    }\r\n`\r\n\r\nconst Span = styled.span`\r\n\r\n    @media ${props => props.theme.mobile} {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      font-family: 'BinggraeMelona-Bold';\r\n      font-weight: bold;\r\n      text-align: center;\r\n    }\r\n\r\n`\r\n\r\n\r\n\r\n\r\nfunction Landing(props) {\r\n    const history = useHistory();\r\n    const [Clatitude, setCLatitude] = useState()\r\n    const [Clongitude, setCLongitude] = useState()\r\n\r\n    const getCheck = () => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setCLatitude(position.coords.latitude);\r\n            setCLongitude(position.coords.longitude);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{getCheck()},[Clongitude])\r\n    console.log(Clatitude, Clongitude)\r\n  \r\n    const getLocation = (props) => {\r\n        if (Clongitude >=1 && Clatitude >=1) {\r\n            history.push({\r\n                pathname: \"/PLEA-STREET/map\",\r\n                state: {\r\n                    latitude: Clatitude,\r\n                    longitude : Clongitude\r\n                }\r\n            })\r\n        }else{\r\n            alert(\"페이지 새로 고침 후 사용자 정보 위치 제공권한에 동의 해주세요!\")\r\n        }        \r\n    }\r\n\r\n    return (\r\n        <Wrap>\r\n          <Header>\r\n            <Span>PLEA</Span>\r\n            <Span>-</Span>\r\n            <Span>STREET</Span>\r\n          </Header>\r\n          <ImgCon onClick = {getLocation}>\r\n            <MainImage />\r\n              {/* <Btn onClick = {getLocation}>\r\n                  <MainImage/>\r\n              </Btn> */}\r\n          </ImgCon>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","import styled from \"styled-components\"\r\n\r\nconst showMap = styled.div`\r\n    width : 100%;\r\n    height : 100%;\r\n    /* border : 1px solid blue; */\r\n    z-index: 3;\r\n`\r\n\r\nexport default showMap","import styled from \"styled-components\"\r\n\r\nconst Container = styled.div`\r\n    width : 100%;\r\n    height : 100vh;\r\n    background-color: #34558b;\r\n    /* border : 1px solid black; */\r\n`\r\n\r\nexport default Container","import React, { useState} from 'react'\r\nimport { Dropdown } from 'semantic-ui-react'\r\n\r\nfunction D_filter({setting}) {\r\nconst [gu, setGu] = useState(\"\")\r\nconst gus = [\r\n    {text: \"강동구\", value: \"강동구\", key : 1}, \r\n    {text: \"강남구\", value: \"강남구\", key : 2},\r\n    {text: \"강서구\", value: \"강서구\", key : 3},\r\n    {text: \"강북구\", value: \"강북구\", key : 4},\r\n    {text: \"관악구\", value: \"관악구\", key : 5},\r\n    {text: \"광진구\", value: \"광진구\", key : 6},\r\n    {text: \"구로구\", value: \"구로구\", key : 7},\r\n    {text: \"금천구\", value: \"금천구\", key : 8},\r\n    {text: \"노원구\", value: \"노원구\", key : 9},\r\n    {text: \"동대문구\", value: \"동대문구\", key : 10},\r\n    {text: \"도봉구\", value: \"도봉구\", key : 11},\r\n    {text: \"동작구\", value: \"동작구\", key : 12},\r\n    {text: \"마포구\", value: \"마포구\", key : 13},\r\n    {text: \"서대문구\", value: \"서대문구\", key : 14},\r\n    {text: \"성동구\", value: \"성동구\", key : 15},\r\n    {text: \"성북구\", value: \"성북구\", key : 16},\r\n    {text: \"서초구\", value: \"서초구\", key : 17},\r\n    {text: \"송파구\", value: \"송파구\", key : 18},\r\n    {text: \"영등포구\", value: \"영등포구\", key : 19},\r\n    {text: \"용산구\", value: \"용산구\", key : 20},\r\n    {text: \"양천구\", value: \"양천구\", key : 21},\r\n    {text: \"은평구\", value: \"은평구\", key : 22},\r\n    {text: \"종로구\", value: \"종로구\", key : 23},\r\n    {text: \"중구\", value: \"중구\", key : 24},\r\n    {text: \"중랑구\", value: \"중랑구\", key : 25}\r\n    ]\r\n\r\n    const handleChange = (e, {value}) => {\r\n        let name = e.target.textContent;\r\n        setGu(name)\r\n        setting(name)\r\n    }\r\n    console.log(\"indfilter\",gu)\r\n\r\n    const {currentValue} = gu\r\n\r\n    return (\r\n        <Dropdown basic color='blue'\r\n        options={gus}\r\n        placeholder='구 선택'\r\n        selection\r\n        fluid\r\n        value={currentValue}\r\n        onChange={handleChange}\r\n      />\r\n    )\r\n}\r\n\r\nexport default D_filter\r\n","import React, { useState } from 'react'\r\nimport loca from \"../util/loca.json\"\r\nimport { Dropdown } from 'semantic-ui-react';\r\n\r\n\r\nfunction B_list({setting}) {\r\n\r\n  const [all, setAll] = useState(\"\")\r\n\r\n  // const locas = [{text:loca[1].자치구명+loca[1].설치위치, value:loca[1].자치구명+loca[1].설치위치, key:1}]\r\n\r\n  const locas = []\r\n\r\n  for(var i=0; i<loca.length; i++) {\r\n    \r\n    locas.push({text:loca[i].자치구명 + ' ' + loca[i].도로명 + ' ' + loca[i].설치위치, value:loca[i].자치구명 + ' ' + loca[i].도로명 + ' ' + loca[i].설치위치, key:i})\r\n    // console.log(value)\r\n  }\r\n\r\n  const handleChange = (e, {value}) => {\r\n    let name = e.target.textContent;\r\n    setAll(name)\r\n    setting(name)\r\n  }\r\n  console.log(\"location\",all)\r\n\r\n  const {currentValue} = all\r\n\r\n  return (\r\n    <Dropdown basic color='blue'\r\n      options={locas}\r\n      placeholder='전체'\r\n      selection\r\n      fluid\r\n      value={currentValue}\r\n      onChange={handleChange}\r\n    />\r\n   \r\n  )\r\n}\r\n\r\nexport default B_list\r\n","import React,{ useEffect, useState} from 'react'\r\nimport ContainerMap from \"../component/Map.js\"\r\nimport Container from '../component/Contanier.js';\r\nimport styled from \"styled-components\"\r\nimport {useLocation} from \"react-router-dom\"\r\n\r\n\r\n//버튼 차례데로 현재 로케, 필터링 구, 목록\r\nimport FilterBtn from \"../component/D_filter.js\"\r\nimport ListBtn from \"../component/B_list.js\"\r\n\r\n//local data\r\nimport data from \"../util/loca\"\r\nimport { Button, Icon } from 'semantic-ui-react'\r\n\r\n\r\nconst Menu_wrapper = styled.div`\r\n    width : 100%;\r\n    height : 6vh;\r\n    padding-top: 1.5vh;\r\n    margin-bottom: 1.5vh;\r\n    /* border : 1px solid red; */\r\n    /* display: grid;\r\n    grid-template-columns: 0.3fr 0.05fr 0.5fr 1fr 0.7fr; */\r\n    display: flex;\r\n    justify-content: space-around;\r\n    text-align: center;\r\n    font-family: 'NanumBarunGothic';\r\n\r\n    @media ${props => props.theme.mobile} {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      /* display: grid;\r\n      grid-template-columns: 0.3fr 0.05fr 0.5fr 1fr 0.7fr; */\r\n      font-family: 'NanumBarunGothic';\r\n      text-align: center;\r\n    }\r\n`\r\n\r\nconst Div_area = styled.div`\r\n    /* padding-top : 1.3vh; */\r\n    margin: auto;\r\n    /* border: 2px solid black; */\r\n    height : 8vh;\r\n    width : 100%;\r\n    z-index: 4;\r\n    font-family: 'NanumBarunGothic';\r\n`\r\n\r\nlet prevGu;\r\nlet map;\r\nlet {kakao} = window;\r\nvar infowindow = new kakao.maps.InfoWindow({\r\n    //content: \r\n    removable : true\r\n});\r\nfunction ShowPage() {\r\n\r\n\r\n    const getLocation = useLocation()\r\n    let [location, setLocation] = useState({\r\n        latitude : 0,\r\n        longitude : 0   \r\n})\r\n\r\n\r\n    const[gu, setGu] = useState(\"\")\r\n    console.log(\"바뀐구\", gu)\r\n\r\n    const [all, setAll] = useState(\"\")\r\n    console.log(\"all\", all);\r\n\r\n\r\n//최초 로딩시 현재 위치 및, 전체 휴지통 위치 마커 표시\r\nuseEffect(()=> {\r\n    setLocation(getLocation.state)\r\n\r\n\r\n    let mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n    mapOption = {\r\n        center: new kakao.maps.LatLng(location.latitude, location.longitude), // 지도의 중심좌표\r\n        level: 5 // 지도의 확대 레벨\r\n    }; \r\n\r\n    map = new kakao.maps.Map(mapContainer, mapOption); \r\n    let bounds = new kakao.maps.LatLngBounds();\r\n\r\n    const displayMarker = (place) => {\r\n        let marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: new kakao.maps.LatLng(parseFloat(place.위도), parseFloat(place.경도)) \r\n        });\r\n    }\r\n\r\n    //현재 위치 마커 표시\r\n    const current = new kakao.maps.LatLng(getLocation.state.latitude, getLocation.state.longitude);\r\n    let currentMarker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: current\r\n    })\r\n\r\n    //전체 데이커 마커 표시\r\n    for(let i = 0; i < data.length; i++){\r\n        displayMarker(data[i]);\r\n        bounds.extend(new kakao.maps.LatLng(data[i].위도, data[i].경도))\r\n    }\r\n\r\n},[location])\r\n\r\nuseEffect(() => {\r\n    if (prevGu !== gu && prevGu !== undefined) { \r\n    // 주소-좌표 변환 객체 || 구(드롭다운메뉴 내에서)가 바뀔 때마다 위치 변경.\r\n    var geocoder = new kakao.maps.services.Geocoder();\r\n    // 주소로 좌표를 검색합니다\r\n    geocoder.addressSearch(`${gu}`, function(result, status) {\r\n        // 정상적으로 검색이 완료됐으면 \r\n        if (status === kakao.maps.services.Status.OK) {\r\n            var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n            // 결과값으로 받은 위치를 마커로 표시합니다\r\n            var marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: coords\r\n            });\r\n            // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n\r\n            infowindow.close();\r\n            infowindow.setContent(`<div style=\"width:150px;text-align:center;padding:6px 0;\">${gu}</div>`);\r\n            infowindow.open(map, marker);\r\n            map.setCenter(coords);\r\n        }\r\n    });\r\n    }\r\n    prevGu = gu; \r\n},[gu])\r\n\r\nuseEffect(() => {\r\n        // 주소-좌표 변환 객체 || 구(드롭다운메뉴 내에서)가 바뀔 때마다 위치 변경.\r\n        var geocoder = new kakao.maps.services.Geocoder();\r\n        // 주소로 좌표를 검색합니다\r\n        geocoder.addressSearch(`${all}`, function(result, status) {\r\n            // 정상적으로 검색이 완료됐으면 \r\n            if (status === kakao.maps.services.Status.OK) {\r\n                var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n                // 결과값으로 받은 위치를 마커로 표시합니다\r\n                var marker = new kakao.maps.Marker({\r\n                    map: map,\r\n                    position: coords\r\n                });\r\n                // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n    \r\n                infowindow.close();\r\n                infowindow.setContent(`<div style=\"width:150px;text-align:center;padding:6px 0;\">${all}</div>`);\r\n                infowindow.open(map, marker);\r\n                map.setCenter(coords);\r\n            }\r\n        });\r\n\r\n},[all])\r\n\r\n     \r\n    //현재 위치 조회 버튼\r\n    const setCurrent = () => {\r\n         navigator.geolocation.getCurrentPosition((position) => {\r\n            setLocation(position.coords.latitude, position.coords.longitude)\r\n        })\r\n        console.log(\"onclick\")\r\n    }\r\n\r\n    \r\n\r\n    //구 변경값을 state로 전달 \r\n    const handleGu = (data) => {\r\n        if (gu !== data){\r\n            setGu(data)\r\n        }\r\n        console.log(\"showpage\",data)\r\n    }\r\n\r\n    const handleAll = (data) => {\r\n      if (all !== data){\r\n          setAll(data)\r\n      }\r\n      console.log(\"showpage\",data)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Menu_wrapper>\r\n                <Div_area>\r\n                    <Button fluid color='blue' onClick = {setCurrent}>\r\n                    <Icon name='location arrow' />\r\n                    <span>현위치</span>\r\n                    </Button>\r\n                </Div_area>\r\n\r\n                {/* <Div_area /> */}\r\n\r\n                <Div_area>\r\n                    <FilterBtn setting = {handleGu}/>\r\n                </Div_area>\r\n\r\n                {/* <Div_area /> */}\r\n\r\n                <Div_area>\r\n                    <ListBtn setting = {handleAll}/>\r\n                </Div_area>\r\n            </Menu_wrapper>\r\n        {/* {location.longitude >=1 ? <ContainerMap id = 'map'/> : null} */}\r\n            <ContainerMap id = 'map'/>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default ShowPage;\r\n","import React, {useState,useEffect} from 'react'\r\nimport MainImage from '../component/Img_container'\r\nimport Btn from \"../component/B_GetCurrentNext\"\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router'\r\n\r\n\r\n\r\nconst Wrap = styled.div`\r\n    width : 100%;\r\n    height : 100%;\r\n    margin-top : 10vh;\r\n`\r\n\r\nconst ImgCon = styled.div`\r\n    width: 100%;\r\n    height : 100%;\r\n    text-align:left;\r\n`\r\n\r\nconst Header = styled.span`\r\n    margin-left: 35vh;\r\n    text-align: right;\r\n    font-size: 50px;\r\n`\r\n\r\n\r\n\r\nfunction Landing(props) {\r\n    const history = useHistory();\r\n    const [Clatitude, setCLatitude] = useState()\r\n    const [Clongitude, setCLongitude] = useState()\r\n\r\n    const getCheck = () => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setCLatitude(position.coords.latitude);\r\n            setCLongitude(position.coords.longitude);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{getCheck()},[Clongitude])\r\n    console.log(Clatitude, Clongitude)\r\n  \r\n    const getLocation = (props) => {\r\n        if (Clongitude >=1 && Clatitude >=1) {\r\n            history.push({\r\n                pathname: \"/PLEA-STREET/map\",\r\n                state: {\r\n                    latitude: Clatitude,\r\n                    longitude : Clongitude\r\n                }\r\n            })\r\n        }else{\r\n            alert(\"페이지 새로 고침 후 사용자 정보 위치 제공권한에 동의 해주세요!\")\r\n        }        \r\n    }\r\n\r\n    return (\r\n        <Wrap>\r\n          <Header> 가장 가까운 쓰레기통은 어디일까요?</Header>\r\n            <ImgCon>\r\n                <Btn onClick = {getLocation}>\r\n                    <MainImage/>\r\n                </Btn>\r\n            </ImgCon>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","import React from 'react'\r\nimport { HelmetProvider } from \"react-helmet-async\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport LandingPage from \"./page/Landing.js\"\r\nimport ShowPage from \"./page/ShowPage.js\"\r\nimport './App.css'\r\n\r\n//test\r\nimport TestPage from \"./page/TestPage.js\"\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <HelmetProvider>\r\n      <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path = \"/PLEA-STREET/\" component={LandingPage}/>\r\n            <Route exact path = \"/PLEA-STREET/map\" component={ShowPage}/>\r\n            <Route exact path = \"/PLEA-STREET/test\" component={TestPage}/>\r\n          </Switch>\r\n      </BrowserRouter>\r\n    </HelmetProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const size = {\r\n  mobile: '600px',\r\n  tablet: '900px',\r\n  laptop: '1200px',\r\n  desktop: '1800px',\r\n}\r\n\r\nconst theme = {\r\n  mainColor: '#0a4297',\r\n  mobile: `(max-width: ${size.mobile})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  laptop: `(max-width: ${size.laptop})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n}\r\n\r\nexport default theme","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;  \r\n  }\r\n\r\n  body {\r\n    box-sizing: border-box;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter, BrowserRouter as Router } from \"react-router-dom\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { ThemeProvider } from 'styled-components'\r\nimport theme from './styles/theme'\r\nimport GlobalStyle from './styles/global'\r\n\r\n// <React.StrictMode>\r\n//  </React.StrictMode>,\r\nReactDOM.render(\r\n    \r\n      <ThemeProvider theme={theme}>\r\n        <App />\r\n        <GlobalStyle />\r\n      </ThemeProvider>\r\n, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}