{"version":3,"sources":["component/Img_container.js","component/B_GetCurrentNext.js","page/Landing.js","component/Map.js","component/Contanier.js","component/D_filter.js","component/B_list.js","page/ShowPage.js","page/TestPage.js","App.js","styles/theme.js","styles/global.js","index.js"],"names":["Img","styled","div","ImgStyle1","img","ImgStyle2","ControlMap","MainImage","src","alt","Button","button","Wrap","ImgCon","Header","span","props","theme","mobile","Landing","history","useHistory","useState","Clatitude","setCLatitude","Clongitude","setCLongitude","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","onClick","push","pathname","state","alert","showMap","Container","D_filter","setting","gu","setGu","currentValue","Dropdown","basic","color","options","text","value","key","placeholder","selection","fluid","onChange","e","name","target","textContent","B_list","prevGu","all","setAll","locas","i","loca","length","자치구명","도로명","설치위치","Menu_wrapper","Div_area","ShowPage","kakao","window","getLocation","useLocation","location","setLocation","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","map","Map","place","bounds","LatLngBounds","current","Marker","data","parseFloat","위도","경도","extend","undefined","services","Geocoder","addressSearch","result","status","Status","OK","y","x","marker","InfoWindow","content","open","setCenter","id","App","exact","path","component","LandingPage","TestPage","size","mainColor","tablet","laptop","desktop","GlobalStyle","createGlobalStyle","ReactDOM","render"],"mappings":"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","file":"static/js/main.ce41cf88.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\n\nconst Img = styled.div`\n    width : 100%;\n    height : 60vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst ImgStyle1 = styled.img`\n    width : 30vh;\n    height : 40vh;\n    cursor: pointer;\n\n`\n\nconst ImgStyle2 = styled.img`\n    width : 30vh;\n    height : 40vh;\n    display: none;\n    cursor: pointer;\n`\n\nconst ControlMap = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width : 50%;\n    height : 100%;\n\n    margin: auto;\n    &:hover  {\n        ${ImgStyle2} {\n            display : block;\n        }\n        ${ImgStyle1} {\n            display : none;\n        }\n    }\n`\n\nfunction MainImage() {\n  \n    return (\n            <Img>\n                <ControlMap>\n                    <ImgStyle1 src = 'img/2.png' alt =\"can_close\"/>\n                    <ImgStyle2 src = 'img/1.png' alt =\"can_open\"/> \n                </ControlMap>\n            </Img>\n          \n    )\n}\n\nexport default MainImage\n","import styled from \"styled-components\";\n\n\nconst Button = styled.button`\n    backGround: white;\n    border : none;\n    &:hover {\n      cursor : pointer;\n    }\n`\n\n\n\nexport default Button\n\n","import React, {useState,useEffect} from 'react'\nimport MainImage from '../component/Img_container'\nimport Btn from \"../component/B_GetCurrentNext\"\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router'\n\n\n\nconst Wrap = styled.div`\n    width : 100%;\n    height : 100vh;\n    display : flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin: auto;\n    padding: 3rem;\n    background-color: beige;\n`\n\nconst ImgCon = styled.div`\n    width: 100%;\n    height : 100%;\n`\n\nconst Header = styled.span`\n    height: 40%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: 'NanumBarunGothic';\n    font-weight: bold;\n    font-size: 2rem;\n    line-height: 1.6;\n\n    @media ${props => props.theme.mobile} {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-family: 'NanumBarunGothic';\n      font-weight: bold;\n      text-align: center;\n    }\n\n`\n\n\n\n\nfunction Landing(props) {\n    const history = useHistory();\n    const [Clatitude, setCLatitude] = useState()\n    const [Clongitude, setCLongitude] = useState()\n\n    const getCheck = () => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            setCLatitude(position.coords.latitude);\n            setCLongitude(position.coords.longitude);\n        })\n    }\n\n    useEffect(()=>{getCheck()},[Clongitude])\n    console.log(Clatitude, Clongitude)\n  \n    const getLocation = (props) => {\n        if (Clongitude >=1 && Clatitude >=1) {\n            history.push({\n                pathname: \"/PLEA-STREET/map\",\n                state: {\n                    latitude: Clatitude,\n                    longitude : Clongitude\n                }\n            })\n        }else{\n            alert(\"페이지 새로 고침 후 사용자 정보 위치 제공권한에 동의 해주세요!\")\n        }        \n    }\n\n    return (\n        <Wrap>\n          <Header> 가장 가까운 쓰레기통은 어디일까요?</Header>\n          <ImgCon onClick = {getLocation}>\n            <MainImage />\n              {/* <Btn onClick = {getLocation}>\n                  <MainImage/>\n              </Btn> */}\n          </ImgCon>\n        </Wrap>\n    )\n}\n\nexport default Landing\n","import styled from \"styled-components\"\n\nconst showMap = styled.div`\n    width : 100%;\n    height : 90vh;\n    border : 1px solid blue;\n    z-index: 3;\n`\n\nexport default showMap","import styled from \"styled-components\"\n\nconst Container = styled.div`\n    width : 100%;\n    height : 90vh;\n    border : 1px solid black;\n`\n\nexport default Container","import React, { useState} from 'react'\nimport { Dropdown } from 'semantic-ui-react'\n\nfunction D_filter({setting}) {\nconst [gu, setGu] = useState(\"\")\nconst gus = [\n    {text: \"강동구\", value: \"강동구\", key : 1}, \n    {text: \"강남구\", value: \"강남구\", key : 2},\n    {text: \"강서구\", value: \"강서구\", key : 3},\n    {text: \"강북구\", value: \"강북구\", key : 4},\n    {text: \"관악구\", value: \"관악구\", key : 5},\n    {text: \"광진구\", value: \"광진구\", key : 6},\n    {text: \"구로구\", value: \"구로구\", key : 7},\n    {text: \"금천구\", value: \"금천구\", key : 8},\n    {text: \"노원구\", value: \"노원구\", key : 9},\n    {text: \"동대문구\", value: \"동대문구\", key : 10},\n    {text: \"도봉구\", value: \"도봉구\", key : 11},\n    {text: \"동작구\", value: \"동작구\", key : 12},\n    {text: \"마포구\", value: \"마포구\", key : 13},\n    {text: \"서대문구\", value: \"서대문구\", key : 14},\n    {text: \"성동구\", value: \"성동구\", key : 15},\n    {text: \"성북구\", value: \"성북구\", key : 16},\n    {text: \"서초구\", value: \"서초구\", key : 17},\n    {text: \"송파구\", value: \"송파구\", key : 18},\n    {text: \"영등포구\", value: \"영등포구\", key : 19},\n    {text: \"용산구\", value: \"용산구\", key : 20},\n    {text: \"양천구\", value: \"양천구\", key : 21},\n    {text: \"은평구\", value: \"은평구\", key : 22},\n    {text: \"종로구\", value: \"종로구\", key : 23},\n    {text: \"종구\", value: \"중구\", key : 24},\n    {text: \"중랑구\", value: \"중랑구\", key : 25}\n    ]\n\n    const handleChange = (e, {value}) => {\n        let name = e.target.textContent;\n        setGu(name)\n        setting(name)\n    }\n    console.log(\"indfilter\",gu)\n\n    const {currentValue} = gu\n\n    return (\n        <Dropdown basic color='blue'\n        options={gus}\n        placeholder='Choose Gu'\n        selection\n        fluid\n        value={currentValue}\n        onChange={handleChange}\n      />\n    )\n}\n\nexport default D_filter\n","import React, { useState } from 'react'\nimport loca from \"../util/loca.json\"\nimport { Dropdown } from 'semantic-ui-react';\n\n\nfunction B_list({setting}) {\n\n  const [all, setAll] = useState(\"\")\n\n  // const locas = [{text:loca[1].자치구명+loca[1].설치위치, value:loca[1].자치구명+loca[1].설치위치, key:1}]\n\n  const locas = []\n\n  for(var i=0; i<loca.length; i++) {\n    \n    locas.push({text:loca[i].자치구명 + ' ' + loca[i].도로명 + ' ' + loca[i].설치위치, value:loca[i].자치구명 + ' ' + loca[i].도로명 + ' ' + loca[i].설치위치, key:i})\n    // console.log(value)\n  }\n\n  const handleChange = (e, {value}) => {\n    let name = e.target.textContent;\n    setAll(name)\n    setting(name)\n  }\n  console.log(\"location\",all)\n\n  const {currentValue} = all\n\n  return (\n    <Dropdown basic color='blue'\n      options={locas}\n      placeholder='List'\n      selection\n      fluid\n      value={currentValue}\n      onChange={handleChange}\n    />\n   \n  )\n}\n\nexport default B_list\n","import React,{ useEffect, useState} from 'react'\nimport ContainerMap from \"../component/Map.js\"\nimport Container from '../component/Contanier.js';\nimport styled from \"styled-components\"\nimport {useLocation} from \"react-router-dom\"\n\n\n//버튼 차례데로 현재 로케, 필터링 구, 목록\nimport FilterBtn from \"../component/D_filter.js\"\nimport ListBtn from \"../component/B_list.js\"\n\n//local data\nimport data from \"../util/loca\"\nimport { Button } from 'semantic-ui-react'\n\n\nconst Menu_wrapper = styled.div`\n    width : 100%;\n    height : 8vh;\n    border : 1px solid red;\n    display: grid;\n    grid-template-columns: 0.4fr 0.5fr 1fr 0.6fr;\n    text-align: center;\n    font-family: 'NanumBarunGothic';\n`\n\nconst Div_area = styled.div`\n    padding-top : 1.3vh;\n    border: 2px solid black;\n    height : 8vh;\n    width : 100%;\n    z-index: 4;\n    font-family: 'NanumBarunGothic';\n`\nlet prevGu;\nlet map;\nfunction ShowPage() {\n\n    let {kakao} = window\n    const getLocation = useLocation()\n    let [location, setLocation] = useState({\n        latitude : 0,\n        longitude : 0   \n})\n\n\n    const[gu, setGu] = useState(\"\")\n    console.log(\"바뀐구\", gu)\n\n    const [all, setAll] = useState(\"\")\n    console.log(\"all\", all);\n\n\n//최초 로딩시 현재 위치 및, 전체 휴지통 위치 마커 표시\nuseEffect(()=> {\n    setLocation(getLocation.state)\n\n\n    let mapContainer = document.getElementById('map'), // 지도를 표시할 div \n    mapOption = {\n        center: new kakao.maps.LatLng(location.latitude, location.longitude), // 지도의 중심좌표\n        level: 5 // 지도의 확대 레벨\n    }; \n\n    let map = new kakao.maps.Map(mapContainer, mapOption); \n\n\n    map = new kakao.maps.Map(mapContainer, mapOption); \n\n    let bounds = new kakao.maps.LatLngBounds();\n\n\n\n    const displayMarker = (place) => {\n        let marker = new kakao.maps.Marker({\n                map: map,\n                position: new kakao.maps.LatLng(parseFloat(place.위도), parseFloat(place.경도)) \n        });\n    }\n\n\n\n    //현재 위치 마커 표시\n    const current = new kakao.maps.LatLng(getLocation.state.latitude, getLocation.state.longitude);\n    let currentMarker = new kakao.maps.Marker({\n        map: map,\n        position: current\n    })\n\n    //전체 데이커 마커 표시\n    for(let i = 0; i < data.length; i++){\n        displayMarker(data[i]);\n        bounds.extend(new kakao.maps.LatLng(data[i].위도, data[i].경도))\n    }\n    \n\n\n    if (prevGu !== gu && prevGu !== undefined) { \n    // 주소-좌표 변환 객체 || 구(드롭다운메뉴 내에서)가 바뀔 때마다 위치 변경.\n    var geocoder = new kakao.maps.services.Geocoder();\n    // 주소로 좌표를 검색합니다\n    geocoder.addressSearch(`${gu}`, function(result, status) {\n        // 정상적으로 검색이 완료됐으면 \n        if (status === kakao.maps.services.Status.OK) {\n            var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n            // 결과값으로 받은 위치를 마커로 표시합니다\n            var marker = new kakao.maps.Marker({\n                map: map,\n                position: coords\n            });\n            // 인포윈도우로 장소에 대한 설명을 표시합니다\n            var infowindow = new kakao.maps.InfoWindow({\n                content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${gu}</div>`\n            });\n            infowindow.open(map, marker);\n            map.setCenter(coords);\n        }\n    });\n    }\n    prevGu = gu; \n\n},[location, gu, all])\n\n// useEffect(() => {\n//        //let prevGu = gu;\n//     if (setGu !== gu) { \n//     // 주소-좌표 변환 객체 || 구(드롭다운메뉴 내에서)가 바뀔 때마다 위치 변경.\n//     var geocoder = new kakao.maps.services.Geocoder();\n//     // 주소로 좌표를 검색합니다\n//     geocoder.addressSearch(`${gu}`, function(result, status) {\n//         // 정상적으로 검색이 완료됐으면 \n//         if (status === kakao.maps.services.Status.OK) {\n//             var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n//             // 결과값으로 받은 위치를 마커로 표시합니다\n//             var marker = new kakao.maps.Marker({\n//                 map: map,\n//                 position: coords\n//             });\n//             // 인포윈도우로 장소에 대한 설명을 표시합니다\n//             var infowindow = new kakao.maps.InfoWindow({\n//                 content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${gu}</div>`\n//             });\n//             infowindow.open(map, marker);\n//             map.setCenter(coords);\n//         }\n//     });    \n//     }\n//     console.log(\"dddd\")\n// },[gu])\n\n     \n    //현재 위치 조회 버튼\n    const setCurrent = () => {\n         navigator.geolocation.getCurrentPosition((position) => {\n            setLocation(position.coords.latitude, position.coords.longitude)\n        })\n        console.log(\"onclick\")\n    }\n\n    \n\n    //구 변경값을 state로 전달 \n    const handleGu = (data) => {\n        if (gu !== data){\n            setGu(data)\n        }\n        console.log(\"showpage\",data)\n    }\n\n    const handleAll = (data) => {\n      if (all !== data){\n          setAll(data)\n      }\n      console.log(\"showpage\",data)\n  }\n\n\n\n\n\n    return (\n        <Container>\n            <Menu_wrapper>\n                <Div_area>\n                    <Button basic color='blue' onClick = {setCurrent}>\n                    <span>현재위치조회</span>\n                    </Button>\n                </Div_area>\n\n                <Div_area>\n                    <FilterBtn setting = {handleGu}/>\n                </Div_area>\n\n            <Div_area/>\n\n                <Div_area>\n                    <ListBtn setting = {handleAll}/>\n                </Div_area>\n        </Menu_wrapper>\n        {/* {location.longitude >=1 ? <ContainerMap id = 'map'/> : null} */}\n            <ContainerMap id = 'map'/>\n        </Container>\n\n    )\n}\n\nexport default ShowPage;\n","import React, {useState,useEffect} from 'react'\nimport MainImage from '../component/Img_container'\nimport Btn from \"../component/B_GetCurrentNext\"\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router'\n\n\n\nconst Wrap = styled.div`\n    width : 100%;\n    height : 100%;\n    margin-top : 10vh;\n`\n\nconst ImgCon = styled.div`\n    width: 100%;\n    height : 100%;\n    text-align:left;\n`\n\nconst Header = styled.span`\n    margin-left: 35vh;\n    text-align: right;\n    font-size: 50px;\n`\n\n\n\nfunction Landing(props) {\n    const history = useHistory();\n    const [Clatitude, setCLatitude] = useState()\n    const [Clongitude, setCLongitude] = useState()\n\n    const getCheck = () => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            setCLatitude(position.coords.latitude);\n            setCLongitude(position.coords.longitude);\n        })\n    }\n\n    useEffect(()=>{getCheck()},[Clongitude])\n    console.log(Clatitude, Clongitude)\n  \n    const getLocation = (props) => {\n        if (Clongitude >=1 && Clatitude >=1) {\n            history.push({\n                pathname: \"/PLEA-STREET/map\",\n                state: {\n                    latitude: Clatitude,\n                    longitude : Clongitude\n                }\n            })\n        }else{\n            alert(\"페이지 새로 고침 후 사용자 정보 위치 제공권한에 동의 해주세요!\")\n        }        \n    }\n\n    return (\n        <Wrap>\n          <Header> 가장 가까운 쓰레기통은 어디일까요?</Header>\n            <ImgCon>\n                <Btn onClick = {getLocation}>\n                    <MainImage/>\n                </Btn>\n            </ImgCon>\n        </Wrap>\n    )\n}\n\nexport default Landing\n","import React from 'react'\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport LandingPage from \"./page/Landing.js\"\nimport ShowPage from \"./page/ShowPage.js\"\nimport './App.css'\n\n//test\nimport TestPage from \"./page/TestPage.js\"\n\nfunction App() {\n\n\n  return (\n    <HelmetProvider>\n      <BrowserRouter>\n          <Switch>\n            <Route exact path = \"/PLEA-STREET/\" component={LandingPage}/>\n            <Route exact path = \"/PLEA-STREET/map\" component={ShowPage}/>\n            <Route exact path = \"/PLEA-STREET/test\" component={TestPage}/>\n          </Switch>\n      </BrowserRouter>\n    </HelmetProvider>\n  )\n}\n\nexport default App\n","const size = {\n  mobile: '600px',\n  tablet: '900px',\n  laptop: '1200px',\n  desktop: '1800px',\n}\n\nconst theme = {\n  mainColor: '#0a4297',\n  mobile: `(max-width: ${size.mobile})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  desktop: `(min-width: ${size.desktop})`,\n}\n\nexport default theme","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;  \n  }\n\n  body {\n    box-sizing: border-box;\n  }\n`\n\nexport default GlobalStyle","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, BrowserRouter as Router } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { ThemeProvider } from 'styled-components'\nimport theme from './styles/theme'\nimport GlobalStyle from './styles/global'\n\n// <React.StrictMode>\n//  </React.StrictMode>,\nReactDOM.render(\n    \n      <ThemeProvider theme={theme}>\n        <App />\n        <GlobalStyle />\n      </ThemeProvider>\n, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}