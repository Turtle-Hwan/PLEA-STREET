{"version":3,"sources":["img/2.png","img/1.png","component/Img_container.js","component/B_GetCurrentNext.js","component/Menubar.js","page/Landing.js","component/Map.js","component/Contanier.js","component/D_filter.js","component/B_list.js","page/ShowPage.js","component/PostComponent.js","component/PostListComponent.js","page/CommunityPage.js","page/SignUpPage.js","page/SignInPage.js","page/PostWrite.js","component/CommentDisplay.js","page/PostedPage.js","component/ModalComponent.js","page/RecyclePage.js","component/TestStartPage.js","component/TestOptions.js","component/KakaoShare.js","component/TestResultDetail.js","component/TestResult.js","App.js","styles/theme.js","styles/global.js","index.js"],"names":["Img","styled","div","ImgStyle1","img","ImgStyle2","ControlMap","ImgContainer","MainImage","to","src","closeImg","alt","openImg","button","Wrap","TopMenu","TopBtnWrapper","MenuBtn","TopBtn","Menubar","history","useHistory","useEffect","console","log","useState","Clatitude","setCLatitude","Clongitude","setCLongitude","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","onClick","goBack","Icon","name","style","display","justifyContent","alignItems","color","width","height","pathname","state","Header","span","props","theme","mobile","Span","Landing","showMap","Container","D_filter","setting","gu","setGu","currentValue","Dropdown","basic","options","text","value","key","placeholder","selection","fluid","onChange","e","target","textContent","B_list","map","prevGu","trashMarker_list","all","setAll","locas","i","loca","length","push","자치구명","도로명","설치위치","Menu_wrapper","Div_area","kakao","window","infowindow","maps","InfoWindow","removable","zIndex","customOverlay","CustomOverlay","yAnchor","ShowPage","useLocation","location","setLocation","lat","lon","geo","Promise","resolve","reject","err","maximumAge","timeout","enableHighAccuracy","mapContainer","document","getElementById","mapOption","center","LatLng","level","Map","then","pos","current","Marker","title","clickable","clusterer","MarkerClusterer","averageCenter","minLevel","trashIcon","MarkerImage","Size","shape","data","위도","경도","image","addMarkers","marker","event","addListener","content","getTitle","getPosition","Ma","La","setContent","setPosition","setMap","zoomControl","ZoomControl","addControl","ControlPosition","RIGHT","getLevel","setCenter","undefined","services","Geocoder","addressSearch","result","status","Status","OK","y","x","close","setLevel","animate","duration","trashMarkerL","filter","array","id","useFetch","page","list","setList","hasMore","setHasMore","isLoading","setIsLoading","sendQuery","useCallback","a","URL","axios","get","response","prev","Set","Wrapper","Content","Loading","ListTitle","ListContent","PostListComponent","pageNum","setPageNum","boardId1","setBoardId1","observerRef","useRef","root","rootMargin","threshold","post","idx","prop","boardId","boardTitle","boardContent","ref","ele","disconnect","IntersectionObserver","isIntersecting","observe","PostListWrap","Top","Body","CommunityPage","notlogged","setNotlogged","pageReload","checkTokenHandler","localStorage","getItem","reloadCount","sessionStorage","setItem","String","reload","removeItem","size","token","alert","ContentWrapperId","ContentWrapperPW","ContentWrapperPh","ContentWrapperNa","ContentWrapperBtn","SignUpPage","userId","setUserId","userPwd","setUserPwd","userPhone","setUserPhone","userName","setUserName","onSubmit","preventDefault","body","JSON","stringify","headers","Input","focus","type","SignInPage","accessToken","catch","error","currentTarget","Title","textarea","PostWrite","setTitle","accesstoken","Authorization","withCredentials","res","DisplayName","DisplayContent","CommentDisplay","username","Bottom","BottomDisplay","BottomCreate","BottomLeft","BottomRight","BottomMid","Margin","PostedPage","getLocation","postId","setPostId","setUsername","password","setPassword","comments","setComments","arr","setArr","getData","getComment","settingBoard","strdate","Date","toLocaleDateString","year","month","day","Style","ModalComponent","open","setOpen","header","contents","Modal","onClose","onOpen","trigger","BodyLeft","BodyRight","ModalList","NameList","NameComponent","Recycle","spenamearr","ex","samplejson","j","세부품목","종류","분리배출요령","sample","Middle","h1","TestStartPage","Image","centered","marginTop","Wrap1","Slider","Detail","Counter","QuesDetail","ImageDiv","BtnBox","LoadingContainer","TestOptions","loading","setLoading","num","setNum","currentSlide","setCurrentSlide","score","setScore","slideRef","createRef","oClick","transform","Questions","answer","replaceAll","xClick","selectAnswer","setTimeout","testResult","item","fontWeight","fontSize","question","Loader","active","inline","KakaoShare","createKakaoButton","Kakao","isInitialized","init","Link","createDefaultButton","container","objectType","description","imageUrl","link","mobileWebUrl","href","webUrl","buttons","className","Score","show","Answer","TestResultDetail","toggle","setToggle","tabIndex","Question","index","ResultSocre","ResultType","LinkWrap","TestResult","match","url","params","Result","subhead","head","subject","App","exact","path","component","LandingPage","Community","RecyclePage","mainColor","tablet","laptop","desktop","GlobalStyle","createGlobalStyle","ReactDOM","render"],"mappings":"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","file":"static/js/main.2e698bb2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/2.c9e58f3e.png\";","export default __webpack_public_path__ + \"static/media/1.639467a6.png\";","import React from 'react'\nimport styled from 'styled-components'\n\nimport closeImg from '../img/2.png';\nimport openImg from '../img/1.png';\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst Img = styled.div`\n    width : 100%;\n    height : 50vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst ImgStyle1 = styled.img`\n    width : 30vh;\n    height : 40vh;\n    cursor: pointer;\n\n`\n\nconst ImgStyle2 = styled.img`\n    width : 30vh;\n    height : 40vh;\n    display: none;\n    cursor: pointer;\n`\n\nconst ControlMap = styled.div`\n    flex-direction: column;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width : 50%;\n    height : 100%;\n\n    margin: auto;\n    &:hover  {\n        ${ImgStyle2} {\n            display : block;\n        }\n        ${ImgStyle1} {\n            display : none;\n        }\n    }\n\n    color: black;\n    //width: 5em;\n    //height: 30px;\n    //border-radius: 1em;\n    //margin: 0.5em;\n    transition: all 0.3s;\n    &:hover{\n      transform: scale(1.08);\n      //background-color: #34558b;\n      color: white;\n    }\n    span{\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 100%;\n\n      font-weight: bold;\n    }\n`\n\nconst ImgContainer = styled.div``\n\n\nfunction MainImage() {\n\n    return (\n        <ImgContainer>\n            <Img>\n                <Link to='/PLEA-STREET/mapSearch'>\n                    <ControlMap>\n                        <span>위치검색</span>\n                        <ImgStyle1 src={closeImg} alt=\"can_close\" />\n                        <ImgStyle2 src={openImg} alt=\"can_open\" />\n                    </ControlMap>\n                </Link>\n                <Link to='/PLEA-STREET/cleanTest'>\n                    <ControlMap>\n                        <span>검사</span>\n                        <ImgStyle1 src={closeImg} alt=\"can_close\" />\n                        <ImgStyle2 src={openImg} alt=\"can_open\" />\n                    </ControlMap>\n                </Link>\n            </Img>\n            <Img>\n                <Link to='/PLEA-STREET/community'>\n                    <ControlMap>\n                        <span>커뮤니티</span>\n                        <ImgStyle1 src={closeImg} alt=\"can_close\" />\n                        <ImgStyle2 src={openImg} alt=\"can_open\" />\n                    </ControlMap>\n                </Link>\n                <Link to='/PLEA-STREET/recycle'>\n                    <ControlMap>\n                        <span>교육</span>\n                        <ImgStyle1 src={closeImg} alt=\"can_close\" />\n                        <ImgStyle2 src={openImg} alt=\"can_open\" />\n                    </ControlMap>\n                </Link>\n            </Img>\n        </ImgContainer>\n    )\n}\n\nexport default MainImage\n","import styled from \"styled-components\";\n\n\nconst Button = styled.button`\n    backGround: white;\n    border : none;\n    &:hover {\n      cursor : pointer;\n    }\n`\n\n\n\nexport default Button\n\n","import React, {useEffect, useState} from 'react'\nimport styled from \"styled-components\"\nimport {Icon} from 'semantic-ui-react'\nimport { useHistory, Link } from \"react-router-dom\";\n\n\nconst Wrap = styled.div`\n  max-width: 640px;\n  margin: 0px auto;\n  padding-bottom: 0px;\n`\nconst TopMenu = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 44px;\n  border-bottom: 1px solid rgb(50, 84, 137, 0.1);\n`\nconst TopBtnWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`\nconst MenuBtn = styled.div`\n  width: 5em;\n  height: 30px;\n  border-radius: 1em;\n  margin: 0.5em;\n  transition: all 0.3s;\n  &:hover{\n    transform: scale(1.08);\n    background-color: #34558b;\n    color: white;\n  }\n  span{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n  }\n`\nconst TopBtn = styled.button`\nbackground-color: white;\n  left: 0em;\n  width: 30px;\n  height: 30px;\n  margin-left: 1em;\n  margin-right: 1.8em;\n  padding-top: 10px;\n  border: 0;\n  outline: 0;\n  transition: all 0.3s;\n  &:hover{\n    transform: scale(1.1);\n  }\n`\n\nfunction Menubar() {\n\n  const history = useHistory();\n\n  useEffect(() => {\n    console.log(history)\n  },[])\n\n  const [Clatitude, setCLatitude] = useState()\n  const [Clongitude, setCLongitude] = useState()\n\n  navigator.geolocation.getCurrentPosition((position) => {\n    setCLatitude(position.coords.latitude);\n    setCLongitude(position.coords.longitude);\n  })\n\n  const goBack = () => {\n    history.goBack();\n  }\n\n  return (\n    <Wrap>\n      <TopBtnWrapper>\n        <TopBtn onClick={goBack}>\n          <Icon name='arrow left' style={\n            { display: 'flex', \n              justifyContent: 'center', \n              alignItems: 'center', \n              color: '#34558b', \n              width: '100%', \n              height: '100%'  }} />\n        </TopBtn>\n        <TopBtn>\n          <Link to='/PLEA-STREET/'>\n            <Icon name='home' style={\n              { display: 'flex', \n                justifyContent: 'center', \n                alignItems: 'center', \n                color: '#34558b', \n                width: '100%', \n                height: '100%'  }} />\n          </Link>\n        </TopBtn>\n      </TopBtnWrapper>\n      <TopMenu>\n        <Link to={{\n            pathname: \"/PLEA-STREET/mapSearch\",\n            state: {\n              latitude: Clatitude,\n              longitude: Clongitude\n            }\n        }} style={{ color: 'black' }} >\n          <MenuBtn>\n            <span>위치검색</span>\n          </MenuBtn>\n        </Link>\n        <Link to='/PLEA-STREET/cleanTest' style={{ color: 'black' }}>\n          <MenuBtn>\n            <span>검사</span>\n          </MenuBtn>\n        </Link>\n        <Link to='/PLEA-STREET/community' style={{ color: 'black' }}>\n          <MenuBtn>\n            <span>커뮤니티</span>\n          </MenuBtn>\n        </Link>\n        <Link to='/PLEA-STREET/recycle' style={{ color: 'black' }}>\n          <MenuBtn>\n            <span>교육</span>\n          </MenuBtn>\n        </Link>\n      </TopMenu>\n    </Wrap>\n  )\n}\n\nexport default Menubar\n","import React, {useState,useEffect} from 'react'\nimport MainImage from '../component/Img_container'\nimport Btn from \"../component/B_GetCurrentNext\"\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router'\nimport Menubar from '../component/Menubar'\n\nconst Wrap = styled.div`\n    max-width: 640px;\n    margin: 0px auto;\n    padding-bottom: 0px;\n    height: 100vh;\n`\n\nconst ImgCon = styled.div`\n    width: 100%;\n    height : 100%;\n`\n\nconst Header = styled.span`\n    height: 40%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-family: 'BinggraeMelona-Bold';\n    font-weight: bold;\n    font-size: 5rem;\n    line-height: 0.8;\n    color: black;\n    padding-top: 5rem;\n\n    @media ${props => props.theme.mobile} {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      font-family: 'BinggraeMelona-Bold';\n      font-weight: bold;\n      text-align: center;\n    }\n    @media (max-width: 640px) {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        font-family: 'BinggraeMelona-Bold';\n        font-weight: bold;\n        text-align: center;\n      }\n`\n\nconst Span = styled.span`\n\n    @media ${props => props.theme.mobile} {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      font-family: 'BinggraeMelona-Bold';\n      font-weight: bold;\n      text-align: center;\n    }\n`\n\nfunction Landing(props) {\n    const history = useHistory();\n    const [Clatitude, setCLatitude] = useState()\n    const [Clongitude, setCLongitude] = useState()\n\n    const getCheck = () => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            setCLatitude(position.coords.latitude);\n            setCLongitude(position.coords.longitude);\n        })\n    }\n\n    useEffect(()=>{getCheck()},[Clongitude])\n    console.log(Clatitude, Clongitude)\n  \n    const getLocation = (props) => {\n        //console.log(process.env.PUBLIC_URL)\n        if (Clongitude >=1 && Clatitude >=1) {\n            history.push({\n                pathname: \"/PLEA-STREET/mapSearch\",\n                state: {\n                    latitude: Clatitude,\n                    longitude : Clongitude\n                }\n            })\n        }else{\n            alert(\"페이지 새로 고침 후 사용자 정보 위치 제공권한에 동의 해주세요!\")\n        }        \n    }\n\n    return (\n        <Wrap>\n          <Menubar />\n          <Header>\n            <Span>PLEA</Span>\n            <Span>-</Span>\n            <Span>STREET</Span>\n          </Header>\n          {/* <ImgCon onClick = {getLocation}> */}\n            <MainImage />\n              {/* <Btn onClick = {getLocation}>\n                  <MainImage/>\n              </Btn> */}\n          {/* </ImgCon> */}\n        </Wrap>\n    )\n}\n\nexport default Landing\n","import styled from \"styled-components\"\n\nconst showMap = styled.div`\n    width : 100%;\n    height : 100%;\n    /* border : 1px solid blue; */\n    z-index: 3;\n`\n\nexport default showMap","import styled from \"styled-components\"\n\nconst Container = styled.div`\n    /* width : 100%;\n    height : 100vh;\n    background-color: #34558b; */\n    /* border : 1px solid black; */\n    max-width: 640px;\n    margin: 0px auto;\n    padding-bottom: 0px;\n    height: 78vh;\n`\n\nexport default Container","import React, { useState} from 'react'\nimport { Dropdown } from 'semantic-ui-react'\n\nfunction D_filter({setting}) {\nconst [gu, setGu] = useState(\"\")\nconst gus = [\n    {text: \"강동구\", value: \"강동구\", key : 1}, \n    {text: \"강남구\", value: \"강남구\", key : 2},\n    {text: \"강서구\", value: \"강서구\", key : 3},\n    {text: \"강북구\", value: \"강북구\", key : 4},\n    {text: \"관악구\", value: \"관악구\", key : 5},\n    {text: \"광진구\", value: \"광진구\", key : 6},\n    {text: \"구로구\", value: \"구로구\", key : 7},\n    {text: \"금천구\", value: \"금천구\", key : 8},\n    {text: \"노원구\", value: \"노원구\", key : 9},\n    {text: \"동대문구\", value: \"동대문구\", key : 10},\n    {text: \"도봉구\", value: \"도봉구\", key : 11},\n    {text: \"동작구\", value: \"동작구\", key : 12},\n    {text: \"마포구\", value: \"마포구\", key : 13},\n    {text: \"서대문구\", value: \"서대문구\", key : 14},\n    {text: \"성동구\", value: \"성동구\", key : 15},\n    {text: \"성북구\", value: \"성북구\", key : 16},\n    {text: \"서초구\", value: \"서초구\", key : 17},\n    {text: \"송파구\", value: \"송파구\", key : 18},\n    {text: \"영등포구\", value: \"영등포구\", key : 19},\n    {text: \"용산구\", value: \"용산구\", key : 20},\n    {text: \"양천구\", value: \"양천구\", key : 21},\n    {text: \"은평구\", value: \"은평구\", key : 22},\n    {text: \"종로구\", value: \"종로구\", key : 23},\n    {text: \"중구\", value: \"중구\", key : 24},\n    {text: \"중랑구\", value: \"중랑구\", key : 25}\n    ]\n\n    const handleChange = (e, {value}) => {\n        let name = e.target.textContent;\n        setGu(name)\n        setting(name)\n    }\n    console.log(\"indfilter\",gu)\n\n    const {currentValue} = gu\n\n    return (\n        <Dropdown basic color='blue'\n        options={gus}\n        placeholder='구 선택'\n        selection\n        fluid\n        value={currentValue}\n        onChange={handleChange}\n      />\n    )\n}\n\nexport default D_filter\n","import React, { useState } from 'react'\nimport loca from \"../util/loca.json\"\nimport { Dropdown } from 'semantic-ui-react';\n\n\nfunction B_list({setting}) {\n\n  const [all, setAll] = useState(\"\")\n\n  // const locas = [{text:loca[1].자치구명+loca[1].설치위치, value:loca[1].자치구명+loca[1].설치위치, key:1}]\n\n  const locas = []\n\n  for(var i=0; i<loca.length; i++) {\n    \n    locas.push({text:loca[i].자치구명 + ' ' + loca[i].도로명 + ' ' + loca[i].설치위치, value:loca[i].자치구명 + ' ' + loca[i].도로명 + ' ' + loca[i].설치위치, key:i})\n    // console.log(value)\n  }\n\n  const handleChange = (e, {value}) => {\n    let name = e.target.textContent;\n    setAll(name)\n    setting(name)\n  }\n  console.log(\"location\",all)\n\n  const {currentValue} = all\n\n  return (\n    <Dropdown basic color='blue'\n      options={locas}\n      placeholder='전체'\n      selection\n      fluid\n      value={currentValue}\n      onChange={handleChange}\n    />\n   \n  )\n}\n\nexport default B_list\n","import React, { useEffect, useLayoutEffect, useState } from 'react'\nimport ContainerMap from \"../component/Map.js\"\nimport Container from '../component/Contanier.js';\nimport styled from \"styled-components\"\n\nimport { useLocation } from \"react-router-dom\"\nimport Menubar from '../component/Menubar.js';\n\n\n//버튼 차례데로 현재 로케, 필터링 구, 목록\nimport FilterBtn from \"../component/D_filter.js\"\nimport ListBtn from \"../component/B_list.js\"\n\n//local data\nimport data from \"../util/loca\"\nimport { Button, Icon } from 'semantic-ui-react'\nimport { resolvePlugin } from '@babel/core';\n\nconst Menu_wrapper = styled.div`\n    width : 100%;\n    height : 8vh;\n    /* margin-bottom: 1.4vh; */\n    /* border : 1px solid red; */\n    /* display: grid;\n    grid-template-columns: 0.3fr 0.05fr 0.5fr 1fr 0.7fr; */\n    display: flex;\n    justify-content: space-around;\n    text-align: center;\n    font-family: 'NanumBarunGothic';\n\n    @media ${props => props.theme.mobile} {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      /* display: grid;\n      grid-template-columns: 0.3fr 0.05fr 0.5fr 1fr 0.7fr; */\n      font-family: 'NanumBarunGothic';\n      text-align: center;\n    }\n`\n\nconst Div_area = styled.div`\n    margin: auto;\n    height : 100%;\n    width : 100%;\n    z-index: 4;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    font-family: 'NanumBarunGothic';\n`\n\nlet map;\nlet prevGu;\nlet { kakao } = window;\nlet infowindow = new kakao.maps.InfoWindow({\n    //content: \n    removable: true,\n    zIndex: 5,\n});\nlet customOverlay = new kakao.maps.CustomOverlay({\n    //clickable: true,\n    zIndex: 5,\n    //xAnchor: 0.8,\n    yAnchor: 1.4,\n})\n\nlet trashMarker_list;\nlet currentMarker;\n\nfunction ShowPage() {\n\n    const getLocation = useLocation()\n\n    let [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0\n    });\n\n    const [gu, setGu] = useState(\"\")\n    console.log(\"바뀐구\", gu)\n\n    const [all, setAll] = useState(\"\")\n    console.log(\"all\", all);\n\n    let lat, lon;\n    let geo = new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            lat = position.coords.latitude;\n            lon = position.coords.longitude;\n            resolve({ lat, lon });\n        }, (err) => { console.log(err) }, { maximumAge: 100000, timeout: 5000, enableHighAccuracy: true })\n    })\n\n\n    useEffect(() => {\n        console.log(\"deps[] 렌더링\");\n        \n        // 지도를 표시할 div \n        let mapContainer = document.getElementById('map'),\n            mapOption = {\n                center: new kakao.maps.LatLng(location.latitude, location.longitude), // 지도의 중심좌표\n                level: 7 // 지도의 확대 레벨\n            };\n        map = new kakao.maps.Map(mapContainer, mapOption);\n\n        \n        geo.then((pos) => {\n            setLocation({ latitude: pos.lat, longitude: pos.lon });\n            console.log('navigator에서 현재위치 받아오기 : ', pos.lat, pos.lon);\n\n            //현재 위치 마커 표시\n            const current = new kakao.maps.LatLng(pos.lat, pos.lon);\n            currentMarker = new kakao.maps.Marker({\n                map: map,\n                title: '현재 위치',\n                clickable: true,\n                position: current\n            })\n\n\n            // 마커 클러스터러를 생성합니다 \n            var clusterer = new kakao.maps.MarkerClusterer({\n                map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체 \n                averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정 \n                minLevel: 6 // 클러스터 할 최소 지도 레벨 \n            });\n\n\n            let trashIcon = new kakao.maps.MarkerImage('img/markerImage/trashMarker4.png', new kakao.maps.Size(50, 50), {\n                shape: 'poly',\n                coords: '25,45,12,24,12,16,18,8,32,8,38,16,38,24',\n            })\n            trashMarker_list = data.map((i) => {\n                //console.log(i.위도)\n                return new kakao.maps.Marker({\n                    position: new kakao.maps.LatLng(i.위도, i.경도),\n                    clickable: true,\n                    title: `${i.자치구명} ${i.도로명} ${i.설치위치}`,\n                    image: trashIcon\n                })\n            })\n            clusterer.addMarkers(trashMarker_list);\n\n            let trashMarker_event_list = trashMarker_list.map((marker) => {\n                kakao.maps.event.addListener(marker, 'click', () => {\n                    let content = `\n                    <div style=\"background: rgb(255, 255, 255); \n                                border: 1px solid rgb(118, 129, 168);\n                                padding: 5px;\n                                background-color: #FFFFFF;\n                                box-shadow: 0px 1px 2px #888;\n                                border-radius: 10px;\n                                display: inline-flex;\n                                flex-direction: column;\n                                align-items: center;\n                            \">\n                        <div style=\"\n                            width:150px;\n                            text-align:center;\n                            padding:10px;      \n                        \">\n                            <div style=\"white-space: pre-line; word-break: keep-all;\">${marker.getTitle()}</div>\n                        </div>\n                        <button style=\"margin-bottom:5px;\" class=\"ui primary button\" onclick=\"location.href='https://map.kakao.com/link/to/${marker.getTitle()},${marker.getPosition().Ma},${marker.getPosition().La}/from/현재위치,${pos.lat},${pos.lon}'\">\n                            길찾기\n                        </button>\n                    </div>`;\n\n                    customOverlay.setContent(content);\n                    customOverlay.setPosition(marker.getPosition())\n                    customOverlay.setMap(map);\n\n                    //infowindow.setContent(content);\n                    //infowindow.open(map, marker);\n                    //map.setCenter(marker.getPosition()); //마커 누르면 그 위치로 맵 중심 이동.\n                });\n            })\n        });\n        console.log('location : ', location.latitude, location.longitude);\n        \n        let zoomControl = new kakao.maps.ZoomControl();\n        map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\n        \n        //일정 이상 지도 확대되면 overlay 지워지도록\n        kakao.maps.event.addListener(map, 'zoom_changed', () => {        \n            let level = map.getLevel();\n            if (level >= 6) {\n                customOverlay.setMap(null);\n            }\n        });\n\n    }, [])\n\n\n    useEffect(() => {\n        console.log(\"deps[location] 렌더링\");\n\n        //사용자 현재 위치로 화면 이동\n        const current = new kakao.maps.LatLng(location.latitude, location.longitude);\n        map.setCenter(current);\n\n    }, [location])\n\n\n    useEffect(() => {\n        console.log(\"deps[gu] 렌더링\");\n\n        if (prevGu !== gu && prevGu !== undefined) {\n            // 주소-좌표 변환 객체 || 구(드롭다운메뉴 내에서)가 바뀔 때마다 위치 변경.\n            var geocoder = new kakao.maps.services.Geocoder();\n            // 주소로 좌표를 검색합니다\n            geocoder.addressSearch(`${gu}`, function (result, status) {\n                // 정상적으로 검색이 완료됐으면 \n                if (status === kakao.maps.services.Status.OK) {\n                    var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n                    // // 결과값으로 받은 위치를 마커로 표시합니다\n                    // var marker = new kakao.maps.Marker({\n                    //     map: map,\n                    //     position: coords\n                    // });\n\n                    // 인포윈도우로 장소에 대한 설명을 표시합니다\n                    infowindow.close();\n                    // infowindow.setContent(`<div style=\"width:150px;text-align:center;padding:6px 0;\">${gu}</div>`);\n                    // infowindow.open(map);\n                    map.setCenter(coords);                    \n                    map.setLevel(7, {animate: {duration: 200}});     \n                }\n            });\n        }\n        prevGu = gu;\n\n    }, [gu])\n\n\n    useEffect(() => {\n        console.log(\"deps[all] 렌더링\");\n\n        // 주소-좌표 변환 객체 || 구(드롭다운메뉴 내에서)가 바뀔 때마다 위치 변경.\n        var geocoder = new kakao.maps.services.Geocoder();\n        // 주소로 좌표를 검색합니다\n        geocoder.addressSearch(`${all}`, function (result, status) {\n            // 정상적으로 검색이 완료됐으면 \n            if (status === kakao.maps.services.Status.OK) {\n                var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n                \n                let trashMarkerL = trashMarker_list.filter((marker, i, array) => {\n                    return marker.getTitle() === all;\n                });\n                //console.log(trashMarker_list)\n                //console.log(trashMarkerL[0])\n\n                let content = `\n                <div style=\"background: rgb(255, 255, 255); \n                            border: 1px solid rgb(118, 129, 168);\n                            padding: 5px;\n                            background-color: #FFFFFF;\n                            box-shadow: 0px 1px 2px #888;\n                            border-radius: 10px;\n                            display: inline-flex;\n                            flex-direction: column;\n                            align-items: center;\n                        \">\n                    <div style=\"\n                        width:150px;\n                        text-align:center;\n                        padding:10px;      \n                    \">\n                        <div style=\"white-space: pre-line; word-break: keep-all;\">${all}</div>\n                    </div>\n                    <button style=\"margin-bottom:5px;\" class=\"ui primary button\" onclick=\"location.href='https://map.kakao.com/link/to/${all},${result[0].y},${result[0].x}/from/현재위치,${location.latitude},${location.longitude}'\">\n                        길찾기\n                    </button>\n                </div>`;\n\n                customOverlay.setContent(content);\n                customOverlay.setPosition(trashMarkerL[0].getPosition())\n                customOverlay.setMap(map);\n\n\n                // 인포윈도우로 장소에 대한 설명을 표시합니다\n                // infowindow.close();\n                // infowindow.setContent(`<div style=\"width:150px;text-align:center;padding:10px 15px;\">\n                //         ${all}\n                //         <button style=\"margin:10px 0 0 0; padding:5px;\" onclick=\"location.href='https://map.kakao.com/link/to/${all},${result[0].y},${result[0].x}/from/현재위치,${location.latitude},${location.longitude}'\">길찾기</button>\n                //     </div>`);\n                // infowindow.open(map, trashMarkerL[0]);\n                map.setCenter(coords);\n                map.setLevel(5, {animate: {duration: 200}});\n            }\n        });\n\n    }, [all])\n\n\n    //현재 위치 조회 버튼\n    function setCurrent() {\n        geo.then((pos) => {\n            setLocation({ latitude: pos.lat, longitude: pos.lon });\n            console.log('navigator에서 현재위치 받아오기 : ', pos.lat, pos.lon)\n        });\n\n        console.log(\"click 현재 위치 조회\");\n    }\n\n\n    //구 변경값을 state로 전달 \n    const handleGu = (data) => {\n        if (gu !== data) {\n            setGu(data)\n        }\n        console.log(\"showpage\", data)\n    }\n\n    const handleAll = (data) => {\n        if (all !== data) {\n            setAll(data)\n        }\n        console.log(\"showpage\", data)\n    }\n\n\n\n    return (\n        <Container>\n            <Menubar />\n            <Menu_wrapper>\n                <Div_area>\n                    <Button fluid color='blue' onClick={setCurrent}>\n                        <Icon name='location arrow' />\n                        <span>현위치</span>\n                    </Button>\n                </Div_area>\n\n                <Div_area>\n                    <FilterBtn setting={handleGu} />\n                </Div_area>\n\n                <Div_area>\n                    <ListBtn setting={handleAll} />\n                </Div_area>\n            </Menu_wrapper>\n\n            <ContainerMap id='map' />\n        </Container>\n\n    )\n}\n\nexport default ShowPage;\n","import React, { useState, useCallback, useEffect} from 'react'\nimport axios from 'axios'\n\nconst useFetch = (page) => {\n  const [list, setList] = useState([]);\n  const [hasMore, setHasMore] = useState(false)\n  const [isLoading, setIsLoading] = useState(false);\n\n  const sendQuery = useCallback( async () => {\n      const URL = `http://localhost:8080/PLEA-STREET/board/all?page=${page}`;\n      await axios.get(URL).then(response =>{\n        setList((prev) => [...new Set([...prev, ...response.data.content])]); \n        setHasMore(response.data.content.length > 0); \n        setIsLoading(false)\n      })\n}, [page]);\n\n\n\nuseEffect(() => {\n    sendQuery();\n}, [sendQuery, page]); \n\nreturn {hasMore, list, isLoading};\n};\nexport default useFetch;\n","import React,{useState, useRef, useEffect} from 'react'\nimport useFetch from \"./PostComponent\"\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router';\n\n\nconst Wrapper = styled.div`\n    width : 640px;\n`\n\nconst Content = styled.div`\n  padding-top: 5vh;\n  padding-left: 1vh;\n  height: 200px;\n  width : 100%;\n  overflow: hidden;\n  border-bottom: 4px solid rgb(50, 84, 137, 0.1);\n  &:hover{\n    cursor:pointer;\n  }\n`;\n\nconst Loading = styled.div`\n  fontweight: 600;\n`;\n\nconst ListTitle = styled.span`\n    font-size : xx-large;\n`\n\nconst ListContent = styled.div`\n    padding-top: 5vh;\n`\n\n\nfunction PostListComponent() {\n  const [pageNum, setPageNum] = useState(0);\n  const [boardId1, setBoardId1] = useState();\n  const {list, hasMore, isLoading} = useFetch(pageNum);\n  const history = useHistory();   \n\n  const observerRef = useRef();\n  const options = {\n      root: null,\n      rootMargin:\"10px\",\n      threshold: 1\n  }\n  console.log(\"boardIdcompoennt \", boardId1)\n  \n\n  const pageHandler = (prop) => {\n      setBoardId1(prop)\n      console.log(\"prop\",prop)\n      history.push({\n          pathname: \"/PLEA-STREET/posted\",\n          state: {\n              boardId: prop\n          }\n      })\n  }\n\n\n  const observer = (ele) => {\n      if(isLoading) return;\n      if(observerRef.current) observerRef.current.disconnect();\n      observerRef.current = new IntersectionObserver(([entry]) => {\n          if(entry.isIntersecting && hasMore){\n              setPageNum((page) => page + 1);\n          }\n      }, options);\n      ele && observerRef.current.observe(ele);\n  };\n\n  console.log(list)\n\n    return (\n        <Wrapper>\n            {list?.map((post, idx) =>(\n                <Content \n                key={idx} \n                onClick={() => {\n                            pageHandler(post.boardId);\n                }}>\n                    <ListTitle>{post.boardTitle}</ListTitle>\n                    <ListContent>{post.boardContent}</ListContent>\n                </Content>\n            ))}\n            <div ref ={observer}/>\n            <div>{isLoading ? <Loading /> : \"No More Data\"} </div>\n        </Wrapper>\n    )\n}\n\nexport default PostListComponent\n","import React,{useState} from 'react'\nimport MenuBar from '../component/Menubar'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router'\nimport { useEffect } from 'react/cjs/react.development'\nimport PostList from \"../component/PostListComponent\"\nimport { Button, Icon } from 'semantic-ui-react'\n\nconst Wrapper = styled.div`\n    width: 100%;\n    max-width: 640px;\n    margin: 0px auto;\n    padding-bottom: 0px;\n    height: 78vh;\n`\n\nconst PostListWrap = styled.div`\n    max-width : 640px;\n    height: 70vh;\n`\n\nconst Top = styled.div`\n    width : 100%;\n    height: 7vh;\n    padding-top: 1vh;\n    display: flex;\n    justify-content: space-around;\n`\n\nconst Body = styled.div`\n    width: 100%;\n    height: 80vh;\n    overflow-y: scroll;\n    overflow-x: hidden;\n`\n\n\nfunction CommunityPage() {\n    const history = useHistory();\n    const [notlogged, setNotlogged] = useState(true)\n\n    //새로고침 \n    useEffect(()=>{pageReload()},[])\n\n    //최초 진입시 토큰 확인\n    useEffect(() => {checkTokenHandler()\n    },[])\n\n\n    //토큰 유무로 로그인 여부 확인\n    const checkTokenHandler =() => {\n        if(localStorage.getItem(\"accessToken\")){\n            setNotlogged(false)\n        }\n    }\n\n    //새로고침 컨트롤러\n    const pageReload = () => {\n        const reloadCount = sessionStorage.getItem('reloadCount');\n        if(reloadCount < 2) {\n            sessionStorage.setItem('reloadCount', String(reloadCount + 1));\n            window.location.reload();\n          } else {\n            sessionStorage.removeItem('reloadCount');\n          }\n    }\n\n    //글작성 핸들러\n    const PostHandler = (e) => {\n        if(!localStorage.getItem(\"accessToken\")){\n            alert(\"로그인을 먼저 해주세요!\")\n        }else{\n            history.push({\n                pathname: \"/PLEA-STREET/postwrite\",\n                state: {\n                    token: localStorage.getItem(\"accessToken\")\n                }\n            })\n        }\n    }\n\n    //로그인 핸들러\n    const SignInHandler = (e) => {\n        history.push({\n            pathname: \"/PLEA-STREET/signin\"\n        })\n    }\n\n    //회원가입핸들러\n    const SignUpHandler = (e) => {\n        history.push({\n            pathname: \"/PLEA-STREET/signup\"\n        })\n    }\n\n    return (\n        <Wrapper>\n            <MenuBar/>\n                <PostListWrap> \n                <Top>\n                   {notlogged ? <Button size ='huge' basic color ='blue' onClick={SignInHandler}>로그인</Button> : null }\n                    <Button size ='huge' basic color ='blue' onClick={PostHandler}>글작성</Button>\n                    {notlogged ? <Button size ='huge' basic color ='blue' onClick={SignUpHandler}>회원가입</Button>: null}\n                </Top>\n                <Body>\n                    <PostList/>\n                </Body>\n            </PostListWrap>\n        </Wrapper>\n    )\n}\n\nexport default CommunityPage\n","import React,{useState} from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios';\nimport { useHistory } from 'react-router'\nimport { Button, Input }from 'semantic-ui-react'\n\nconst Container = styled.div`\n  margin : 25%;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n    height: 30vh;\n    width : 40vh;\n    border: 4px dotted skyblue;\n    border-radius: 20px;\n`\n\nconst ContentWrapperId = styled.div`\n      margin:20px;\n`\nconst ContentWrapperPW = styled.div`\n      margin:20px;\n`\nconst ContentWrapperPh = styled.div`\n      margin:20px;\n`\nconst ContentWrapperNa = styled.div`\n      margin:20px;\n`\nconst ContentWrapperBtn = styled.div`\n      margin-left: 25%;\n`\n\nconst StyleP = styled.div`\n    width : 2em;\n`\n\n function SignUpPage() {\n\n    const [userId, setUserId] = useState(\"\")\n    const [userPwd, setUserPwd] = useState(\"\")\n    const [userPhone, setUserPhone] = useState(\"\")\n    const [userName, setUserName] = useState(\"\")\n    const history = useHistory();\n\n    //아이디, 패스워드, 전화번호, 이름 값 인자로 받는 헨들러\n    const onHandlerId = (e) => {\n        setUserId(e.target.value)\n    }\n\n    const onHandlerPwd = (e) => {\n        setUserPwd(e.target.value)\n    }\n\n    const onHandlerPhone = (e) => {\n        setUserPhone(e.target.value)\n    }\n\n    const onHandlerName = (e) => {\n        setUserName(e.target.value)\n    }\n\n\n    //회원가입 요청 헨들러\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let body = {\n            userId: userId,\n            userPwd: userPwd,\n            userPhone: userPhone,\n            userName: userName\n        }\n        axios\n        .post(\"http://localhost:8080/PLEA-STREET/user/signup\", \n        JSON.stringify(body), {\n            headers: { \"Content-Type\": `application/json` },\n            })\n        .then((response) => history.push({\n            pathname:\"/PLEA-STREET/signin\"\n        }));\n    }\n\n\n    return (\n        <Container>\n        <Wrapper>\n            <form onSubmit={handleSubmit}>\n                    <ContentWrapperId>\n                    <label>아이디 입력 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                    <Input focus placeholder='ID' type=\"userId\" value={userId} onChange={onHandlerId}/>\n                    </ContentWrapperId>\n\n                    <ContentWrapperPW>\n                    <label>비밀번호 입력&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                    <Input focus placeholder='Password' type=\"password\" value={userPwd} onChange={onHandlerPwd}/>\n                    </ContentWrapperPW>\n                    \n                    <ContentWrapperPh>\n                    <label>핸드폰 번호 입력&nbsp;</label>\n                    <Input focus placeholder='Phone Number' type=\"userPhone\" value={userPhone} onChange={onHandlerPhone}/>\n                    </ContentWrapperPh>\n\n                    <ContentWrapperNa>\n                    <label>사용자 이름 입력&nbsp;</label>\n                    <Input focus placeholder='Name' type=\"userName\" value={userName} onChange={onHandlerName}/>\n                    </ContentWrapperNa>\n\n                    <ContentWrapperBtn>\n                    <Button basic color = 'blue' type=\"submit\">\n                        눌러서 가입하기\n                    </Button>\n                    </ContentWrapperBtn>\n            \n                </form>\n            </Wrapper>\n        </Container>\n    )\n}\n\nexport default SignUpPage\n","import React,{useState} from 'react'\nimport styled from \"styled-components\"\nimport axios from \"axios\"\nimport { useHistory } from 'react-router'\nimport { Button, Input} from 'semantic-ui-react'\n\nconst Container = styled.div`\n  margin : 25%;\n`;\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n    height: 30vh;\n    width : 40vh;\n    border: 4px dotted skyblue;\n    border-radius: 20px;\n`\n\nconst ContentWrapperId = styled.div`\n      margin:20px;\n`\nconst ContentWrapperPW = styled.div`\n      margin:20px;\n`\nconst ContentWrapperBtn = styled.div`\n      margin-left: 25%;\n`\n\n\n\n\nfunction SignInPage() {\n\n    const [userId, setUserId] = useState(\"\")\n    const [userPwd, setUserPwd] = useState(\"\")\n    const history = useHistory();\n\n\n    const onHandlerId = (e) => {\n        setUserId(e.currentTarget.value)\n    }\n\n    const onHandlerPwd = (e) => {\n        setUserPwd(e.currentTarget.value)\n    }\n\n    console.log(userId, userPwd)\n\n    //로그인 요청 핸들러\n    //인자값으로 id, password 받음\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let body = {\n            userId: userId,\n            userPwd: userPwd\n        }\n        axios\n        .post(\"http://localhost:8080/PLEA-STREET/user/signin\", \n        JSON.stringify(body), {\n            headers: { \"Content-Type\": `application/json` },\n            })\n      \n        .then(response => {\n            const token = response.data.accessToken;\n            console.log(token)\n            if(token.length != null){\n                localStorage.setItem(\"accessToken\", token)\n                alert(\"어서오세요 환영합니다!\")\n                history.push({\n                    pathname: \"/PLEA-STREET/community\"\n                })\n            }\n        }).catch(error => {\n            alert(\"없는 사용자 입니다\");\n        })\n    }\n\n    return (\n        <Container>\n            <Wrapper>\n                <form onSubmit={handleSubmit}>\n                <ContentWrapperId>\n                    <label>아이디 입력&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>\n                    <Input focus placeholder='ID' type=\"userId\" value={userId} onChange={onHandlerId}/>\n                </ContentWrapperId>   \n                <ContentWrapperPW>      \n                    <label>비밀번호 입력&nbsp;&nbsp;</label>\n                    <Input focus placeholder='Password' type=\"password\" value={userPwd} onChange={onHandlerPwd}/>\n                </ContentWrapperPW>\n                <ContentWrapperBtn>  \n                    <Button basic color = 'blue' type=\"submit\">\n                        눌러서 로그인\n                    </Button>\n                </ContentWrapperBtn>\n                </form>\n            </Wrapper>\n        </Container>\n    )\n}\n\nexport default SignInPage\n","import axios from 'axios'\nimport React,{useState} from 'react'\nimport styled from \"styled-components\"\nimport MenuBar from '../component/Menubar'\nimport { useHistory} from 'react-router-dom'\nimport { Button, Input } from 'semantic-ui-react'\n\nconst Wrapper = styled.div`\n    width: 100%;\n    max-width: 640px;\n    margin: 0px auto;\n    padding-bottom: 0px;\n    height: 78vh;\n`\n\nconst Top = styled.div`\n    width : 100%;\n    height: 7vh;\n    padding-top: 1vh;\n    display: flex;\n    justify-content: space-around;\n`\n\nconst Body = styled.div`\n    width: 100%;\n    height: 80vh;\n    overflow-x: hidden;\n    display: inline-block;\n`\n\nconst Title = styled.div`\n    width : 100%;\n    border: 2px solid rgb(50, 84, 137, 0.1);\n`\n\nconst Content = styled.textarea`\n    width : 100%;\n    height: 500px;\n    padding: 1em;\n    border: 2px solid rgb(50, 84, 137, 0.1);\n`\n\n\nfunction PostWrite() {\n\n    const [title, setTitle] = useState(\"\")\n    const [content, setContent] = useState(\"\")\n    const history = useHistory();\n  \n\n    //게시글 제출 핸들러\n    //토큰, 제목, 내용을 같이 보냄\n    const SubmitHandler =(e) =>{\n        const accesstoken = localStorage.getItem(\"accessToken\")\n        console.log(accesstoken)\n        let body = {\n            title: title,\n            content: content,\n            token: localStorage.getItem(\"accessToken\")\n        }\n        axios.post(\"http://localhost:8080/PLEA-STREET/board\", JSON.stringify(body),{\n            headers: {\n                \"Content-Type\":`application/json`,\n                Authorization: \"Bearer \"+ localStorage.getItem(\"accessToken\"),\n                withCredentials:true\n            },\n        }).then(res=> console.log(res),\n            history.push({\n            pathname:\"/PLEA-STREET/community\",\n        })).catch(err => {alert(\"에러발생\")})\n    }\n\n    const titleHandler = (e) =>{\n        setTitle(e.currentTarget.value)\n    }\n\n    const contentHandler = (e) => {\n        setContent(e.currentTarget.value)\n    }\n    \n    return (\n        <Wrapper>\n            <MenuBar/>\n            <form onSubmit={SubmitHandler}>     \n                <Body>\n                <Top/>\n                <Title >\n                    <Input fluid placeholder=\"제목\" onChange={titleHandler}/>\n                </Title>\n                <Content type=\"text\" onChange={contentHandler}>\n                </Content>\n                <Top>\n                    <Button basic color='blue' type=\"submit\">저장하기</Button>\n                </Top>\n                </Body>\n            </form>\n        </Wrapper>\n    )\n}\n\nexport default PostWrite\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    width: 100%;\n    height : 2em;\n    display: inline-block;\n    margin-bottom : 40px;\n   \n`\n\nconst DisplayName = styled.div`\n    font-weight : 400;\n<<<<<<< Updated upstream\n    font-size: 1em;\n    margin-bottom : 0.6em;\n    margin-top: 0.2em;\n=======\n    font-size: 1.4em;\n    margin-bottom : 0.6em;\n    margin-top: 0.2em;\n    padding-left:0.6em;\n>>>>>>> Stashed changes\n   \n`\n\nconst DisplayContent = styled.div`\n<<<<<<< Updated upstream\n    font-size : 1.4em;\n    border-bottom: 2px solid rgb(50, 84, 137, 0.1);\n=======\n    font-size : 1em;\n    border-bottom: 2px solid rgb(50, 84, 137, 0.1);\n    padding-left:1em;\n>>>>>>> Stashed changes\n`\n\nfunction CommentDisplay(props) {\n\n    const {username, content} = props;\n\n    return (\n        <Wrapper>\n                <DisplayName>\n                    {username}\n                </DisplayName>\n                <DisplayContent>\n                    {content}\n                </DisplayContent>\n        </Wrapper>\n    )\n}\n\nexport default CommentDisplay\n","import React,{useState, useEffect} from 'react'\nimport {useLocation, useHistory} from \"react-router-dom\"\nimport axios from \"axios\"\nimport styled from \"styled-components\"\nimport MenuBar from '../component/Menubar'\nimport CommentDisplay from '../component/CommentDisplay'\nimport { Button, Input } from 'semantic-ui-react'\nimport { NUMBER_BINARY_OPERATORS } from '@babel/types'\n\nconst Wrapper = styled.div`\n    width: 100%;\n    max-width: 640px;\n    margin: 0px auto;\n    padding-bottom: 0px;\n    height: 95vh;\n`\n\nconst Top = styled.div`\n    width : 100%;\n    height: 7vh;\n    padding-top: 1vh;\n    display: flex;\n    justify-content: space-around;\n    font-size: 3em;\n    padding-top : 0.6em;\n`\n\nconst Body = styled.div`\n    width: 100%;\n    height: 500px;\n    padding: 1em;\n    border: 2px solid rgb(50, 84, 137, 0.1);\n    overflow-x: hidden;\n    display: inline-block;\n`\nconst Bottom = styled.div`\n    width: 100%;\n    height : 25vh;\n\n`\nconst BottomDisplay = styled.div`\n    width: 100%;\n    min-height : 150px;\n    border: 2px solid rgb(50, 84, 137, 0.1);\n\n`\nconst BottomCreate= styled.div`\n    width : 100%;\n    height: 200px;\n    display:flex;\n`\nconst BottomLeft = styled.div`\n    display: flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n    width : 150px;\n    height: 100px;\n`\n\nconst BottomRight = styled.div`\n    width : 120px;\n    height: 100px;\n    margin : 18px 10px 0px 15px;\n`\n\nconst BottomMid = styled.textarea`\n    width : 350px;\n    height: 70px;\n    margin-top:1em;\n    border: 2px solid rgb(50, 84, 137, 0.1);\n    border-radius: 8px;\n    padding: 1em;\n`\n\nconst Margin = styled.div`\n    margin: 3px;\n`\n\nfunction PostedPage() {\n    const getLocation = useLocation()\n    const [postId, setPostId] = useState()\n    const [title, setTitle] = useState(\"\")\n    const [content, setContent] = useState(\"\")\n\n    //댓글생성관련 \n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [comments, setComments] = useState(\"\")\n    const [date, setDate] = useState(\"\");\n\n    //댓글불러오기관련 \n    const [arr, setArr] = useState([])\n\n    console.log('arr',arr);\n    \n    // console.log(\"check\",getLocation.state.boardId)\n    // console.log(\"postid\",postId)\n\n\n\n   //게시글 아이디를 state저장\n    useEffect(() => {\n        setPostId(getLocation.state.boardId)\n    }, [postId])\n    \n    //저장된 게시글아이디를 바탕으로 백엔드에 요청\n    useEffect(() => {\n        getData()\n        getComment()\n    }, [postId])\n\n\n\n    //토큰 실어서 백엔드에 요청 보냄\n    const getData = () => {\n        const URL = `http://localhost:8080/PLEA-STREET/board/find?postId=${postId}`;\n        axios.get(URL,  \n            {\n                headers: {\n                        \"Content-Type\":`application/json`,\n                        Authorization: \"Bearer \"+ localStorage.getItem(\"accessToken\"),\n                        withCredentials:true\n                        },\n            }).then(res => settingBoard(res))\n        }\n\n    //뎃글 불러오기 \n    const getComment = () => {\n        const URL = `http://localhost:8080/PLEA-STREET/comment?boardId=${postId}`;\n        axios.get(URL).then(res => setArr(res.data))\n    }\n    //댓글 생성하기\n    const createComment = (e) => {\n        e.preventDefault()\n        const URL = `http://localhost:8080/PLEA-STREET/comment`;\n\n        const date = new Date();\n        const strdate = date.toLocaleDateString(\n            'ko-KR', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n            }\n        )\n    \n        let body ={\n            username: username,\n            password: password,\n            content: strdate + \" \" + comments,\n            boardId: postId\n        }\n\n         axios.post(URL, JSON.stringify(body), {\n            headers: { \"Content-Type\": `application/json`},\n            }).then(res => {\n                getComment()\n                setUsername(\"\")\n                setPassword(\"\")\n                setComments(\"\")\n                }            \n            )\n    }\n\n\n    \n    //갖고온 데이터를 세팅(포스트)\n    const settingBoard= (res) => {\n        setTitle(res.data.title)\n        setContent(res.data.content)\n    }\n\n    //댓글 등록\n    const setUsernameHandler = (e) => {\n        setUsername(e.currentTarget.value)\n    }\n\n    const setPassowrdHandler = (e) => {\n        setPassword(e.currentTarget.value)\n    }\n\n    const setCommentHandler = (e) => {\n        setComments(e.currentTarget.value)\n    }\n\n\n    return (\n        <Wrapper>\n        <MenuBar/>\n            <Top>\n                {title}\n            </Top>\n            <Body>\n                {content}\n            </Body>\n            <Bottom>\n                <BottomDisplay>\n                {arr.map(({username,content},idx)=> \n                    <CommentDisplay key={idx} username={username} content={content}/>\n                )}\n                </BottomDisplay>\n\n                <form onSubmit={createComment}>\n                <BottomCreate>\n                        <BottomLeft>\n                            <Input size =\"mini\" placeholder=\"username\" value={username} onChange={setUsernameHandler}/>\n                            <Margin/>\n                            <Input size =\"mini\" placeholder=\"password\" value={password} type=\"password\" onChange={setPassowrdHandler}/>\n                        </BottomLeft>\n                    <BottomMid onChange = {setCommentHandler} value={comments} />\n                        <BottomRight>\n                            <Button fluid basic color =\"blue\" type=\"submit\" size=\"massive\"> 제출 </Button>\n                        </BottomRight>\n                </BottomCreate>\n                </form>\n            </Bottom>\n    </Wrapper>\n    )\n}\nexport default PostedPage","import React,{useState,useEffect} from 'react'\nimport { Button, Header, Image, Modal } from 'semantic-ui-react'\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.div`\n    margin-top:30px;\n    margin-bottom: 7vh;\n    text-align:center;\n`\n\nconst Style = styled.div`\n    line-height: 7em;\n    margin: 2em;\n`\n\nfunction ModalComponent(props) {\n    const [open, setOpen] = useState(false)\n    const{header, content} = props;\n    const [contents, setContents] = useState(\"\")\n    console.log(\"contentsss\",contents)\n  \n    // useEffect(()=>{setContents(content.replaceAll(\"\\n\", \" \"))},[content])\n\n\n    const onCloseHandler = () => {\n        setOpen(false);\n    }\n\n    const onOpenHandler = () => {\n        setOpen(true);\n    }\n\n\n    return (\n        <Wrapper>\n            <Modal\n                onClose={onCloseHandler}\n                onOpen={onOpenHandler}\n                open={open}\n                trigger={<Button basic color='blue'>{header}</Button>}>\n                <Modal.Header>{header}</Modal.Header>\n                <Style>\n                {content.map((content)=><Modal.Content>{content}</Modal.Content>)}\n                </Style>\n            </Modal>\n         </Wrapper>\n    )\n}\n\nexport default ModalComponent\n\n\n","import React,{useState} from 'react'\nimport { Button, Header, Image, Modal } from 'semantic-ui-react'\nimport samplejson from \"../util/sample.json\"\nimport styled from \"styled-components\"\nimport MenuBar from '../component/Menubar'\nimport ModalComponent from '../component/ModalComponent'\n\n\nconst Wrapper = styled.div`\n    width: 100%;\n    max-width: 640px;\n    margin: 0px auto;\n    padding-bottom: 0px;\n    height: 78vh;\n`\n\nconst Top = styled.div`\n    width : 100%;\n    height: 5vh;\n    padding-top: 2vh;\n    display: flex;\n    justify-content: space-around;\n`\n\nconst Body = styled.div`\n    width: 100%;\n    height: 78vh;\n    overflow-y: scroll;\n    overflow-x: hidden;\n    display: flex;\n`\n\nconst BodyLeft = styled.div`\n    width: 400px;\n    height : 78vh;\n`\nconst BodyRight = styled.div`\n    width: 240px;\n    height: 100%;\n`\nconst ModalList = styled.div`\n    display: flex;\n    flex-direction:column;\n    width: 150px;\n    height: 70vh;\n    margin: auto;\n`\n\nconst NameList = styled.div`\n    display: flex;\n    flex-direction:column;\n    width: 400px;\n    height: 78vh;\n`\n\nconst NameComponent = styled.div`\n    font-weight: 600;\n    margin-top:43px;\n    margin-bottom: 7vh;\n    text-align:center;\n`\n\n\nfunction Recycle(props) {\n\n    const spenamearr = []\n    const ex =[]\n    const contents =[]\n    const myobjarr =[]\n    const [open, setOpen] = useState(false)\n    const [current, setCurrent] = useState(\"\")\n\n    //종류(세부품목 갯수만큼 담기)\n    for(let i in samplejson){\n        for(let j in samplejson[i].세부품목){\n            spenamearr.push(samplejson[i].종류);\n        }\n    }\n     console.log(\"arr\",spenamearr)\n\n     //세부품목\n    for(let i in samplejson){\n        for(let j of samplejson[i].세부품목){\n            ex.push(j)\n        }\n    }\n\n    //분리배출요령\n    for(let i in samplejson){\n        for(let j of samplejson[i].분리배출요령){\n            contents.push(j)\n        }\n    }\n\n    // console.log(\"종류\",samplejson[0].종류)\n    // console.log(\"세부품목\",samplejson[0].세부품목)\n    // console.log(\"분리배출요령\",samplejson[0].분리배출요령)\n\n    const onCloseHandler = (prop) => {\n        setOpen(false);\n       \n    }\n\n    const onOpenHandler = () => {\n        setOpen(true);\n    }\n\n    const buttonHandler = (prop) => {\n        setCurrent(prop)\n    }\n\n    console.log(\"myobj\",myobjarr)\n    \n\n    return (\n        <Wrapper>\n            <MenuBar/>\n            <Top/>\n            <Body>\n                <BodyLeft>\n                <NameList>\n                    {ex.map((name, idx) => (\n                        <NameComponent key={idx}>\n                        {name}\n                        {\"\\n\"}\n                        </NameComponent>\n                    ))}\n                </NameList>\n                </BodyLeft>\n                <BodyRight>\n                    <ModalList>\n                        {samplejson?.map((sample,idx)=>(\n                          <ModalComponent key={idx} header={sample.종류} content={sample.분리배출요령}/>\n                        ))}\n                    </ModalList>\n                </BodyRight>\n            </Body>\n        </Wrapper>\n    )\n}\n\nexport default Recycle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nimport Menubar from './Menubar'\n\nconst Wrap = styled.div`\n    max-width: 640px;\n    margin: 0px auto;\n    padding-bottom: 0px;\n`\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 80vh;\n  img {\n    height: 30vh;\n  }\n`\nconst Middle = styled.div`\n  text-align: center;\n  margin: 2rem;\n  span {\n    font-size: 1.2rem;\n    line-height: 1.6;\n  }\n  font-family: 'TmoneyRoundWindRegular';\n`\nconst Title = styled.h1`\n  font-family: 'TmoneyRoundWindExtraBold';\n  text-align: center;\n  margin: 0 auto;  \n  padding: 2rem;\n`\n\n\nfunction TestStartPage() {\n  return (\n    <Wrap>\n      <Menubar />\n      <Content>\n        <Title>\n          \"분리배출 바로알기\" <br />\n          OX Quiz\n        </Title>\n        \n        <Image src='img/resultImage/graduate.png' \n               centered\n               style={{\n                 marginTop: '2rem'\n               }} />\n\n        <Middle>\n          <span>나의 환경에 대한 지식은 어느 정도일까?</span> <br />\n          <span>분리배출 학력퀴즈로 알아보자!</span>\n        </Middle>\n\n        <Link to='/PLEA-STREET/options'>\n          <Button size='big' color='blue'>퀴즈 시작!</Button>\n        </Link>\n      </Content>\n    </Wrap>\n\n  )\n}\n\nexport default TestStartPage\n\n","import React, { createRef, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Questions from '../util/question.json'\nimport styled from 'styled-components';\nimport Menubar from './Menubar';\nimport {  Loader, Image, Button } from 'semantic-ui-react';\n\n\n\nconst Wrap1 = styled.div`\n  width: 640px;\n  margin: 0px auto;\n  padding-bottom: 0px; \n  @media ${props => props.theme.mobile} {\n    width: 100vw;\n  }\n`\nconst Wrap = styled.div`\n  max-width: 100%;\n  overflow-x: hidden;\n  overflow-y: auto;\n`\nconst Content = styled.div`\n\n`\nconst Slider = styled.div`\n  width: 1000vw;\n`\nconst Detail = styled.div`\n  width: 100vw;\n  float: left;\n  /* background-color: skyblue; */\n`\nconst Top = styled.div`\n  width: 640px;\n  height: 20vh;\n  padding: 2rem;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  display: flex;\n  @media ${props => props.theme.mobile} {\n    width: 100vw;\n  }\n`\nconst Counter = styled.div`\n  /* font-size: 1.8rem;\n  font-weight: bold; */\n  padding-right: 84%;\n  padding-top: 10px;\n`\nconst QuesDetail = styled.div`\n  h2 {\n    margin-top: 2rem;\n    word-break: keep-all;\n  }\n`\nconst ImageDiv = styled.div`\n  width: 640px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  display: flex;\n  @media ${props => props.theme.mobile} {\n    width: 100vw;\n  }\n`\nconst BtnBox = styled.div`\n  width: 640px;\n  height: 20vh;\n  padding-top: 1rem;\n  padding-bottom: 0px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  display: flex;\n  cursor: pointer;\n  @media ${props => props.theme.mobile} {\n    width: 100vw;\n  }\n  \n`\nconst LoadingContainer = styled.div`\n  max-width: 640px;\n  margin: 0px auto;\n  padding-bottom: 0px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 80vh;\n`\n\n\nconst TestOptions = () => {\n    const [loading, setLoading] = useState(false);\n    const [num, setNum] = useState(0);\n    const [currentSlide, setCurrentSlide] = useState(1);\n    const [score, setScore] = useState(0);\n    const slideRef = createRef(null);\n    const TOTAL_SLIDES = 10;\n    const history = useHistory();\n    \n    const oClick = (e) => {\n        setNum(num + 1);\n        setCurrentSlide(currentSlide + 1);\n        slideRef.current.style.transform += 'translateX(-100vw)';\n\n        const selectAnswer = e.target.value\n        const answer = JSON.stringify(Questions[num].answer).replaceAll(\"\\\"\", \"\")\n\n        if(selectAnswer === answer) {\n          setScore(score => score+1)\n        }\n    };\n    const xClick = (e) => {\n        setNum(num + 1);\n        setCurrentSlide(currentSlide + 1);\n        slideRef.current.style.transform += 'translateX(-100vw)';\n\n        const selectAnswer = e.target.value\n        const answer = JSON.stringify(Questions[num].answer).replaceAll(\"\\\"\", \"\")\n\n        console.log(answer)\n\n        if(selectAnswer === answer) {\n          setScore(score => score+1)\n        }\n    };\n\n    const resultChecker = () => {\n        setLoading(true);\n\n        setTimeout(() => {\n            const testResult = score\n            history.push(`/PLEA-STREET/result/${testResult}`);\n        }, 3000);\n    };\n    useEffect(() => {\n        currentSlide > TOTAL_SLIDES && resultChecker();\n    }, [currentSlide]);\n\n    return (\n      <>\n      <Menubar />\n      <Wrap1>\n          <Wrap>\n            <Content>\n              {!loading && (\n                          <Slider ref={slideRef}>\n                            {Questions.map((item) => {\n                                    return (\n                                          <Detail key={item.id}>\n                                            <Top>\n                                              <Counter>\n                                                <span style={{ color: '#34558b', \n                                                               fontWeight: 'bold',\n                                                               fontSize: '3rem',\n                                                                 }}>\n                                                  {currentSlide}\n                                                </span>\n                                                <span>\n                                                  /{TOTAL_SLIDES}\n                                                </span>\n                                              </Counter>\n                                              <QuesDetail>\n                                                <h2>{item.question}</h2>\n                                              </QuesDetail>\n                                            </Top>\n                                            <ImageDiv>\n                                              <Image src={item.img} \n                                                     centered\n                                                     style={{\n                                                       height: '30vh'\n                                                     }} />\n                                            </ImageDiv>\n                                            <BtnBox>\n                                              <Button onClick={oClick} value='O'>O</Button>\n                                              <Button onClick={xClick} value='X'>X</Button>\n                                            </BtnBox>\n                                          </Detail>\n                                    );\n                                })}\n                          </Slider>\n              )}\n              {loading && (\n                  <LoadingContainer>\n                    <Image src='img/questionImage/searching.png' size='small' />\n                    <h2>쓰래기 분리수거 하는 중...</h2>\n                    <Loader active inline />\n                  </LoadingContainer>\n              )}\n            </Content>\n          </Wrap>\n          </Wrap1>\n          </>\n    );\n};\n\nexport default TestOptions;\n","import React, { useEffect } from 'react'\nimport { Image } from 'semantic-ui-react'\n\n\nconst KakaoShare = () => {\n\n  useEffect(() => {\n    createKakaoButton()\n  }, [])\n  const createKakaoButton = () => {\n    // kakao sdk script이 정상적으로 불러와졌으면 window.Kakao로 접근이 가능합니다\n    if (window.Kakao) {\n      const kakao = window.Kakao\n\n      // 중복 initialization 방지\n      if (!kakao.isInitialized()) {\n        // 두번째 step 에서 가져온 javascript key 를 이용하여 initialize\n        kakao.init('d3035583277a70970a431991f3967f92')\n      }\n      kakao.Link.createDefaultButton({\n        // Render 부분 id=kakao-link-btn 을 찾아 그부분에 렌더링을 합니다\n        container: '#kakao-link-btn',\n        objectType: 'feed',\n        content: {\n          title: '\"분리배출 바로알기\" OX Quiz',\n          description: '쓰레기 버릴 때 어떻게 버리시나요?',\n          imageUrl: '../img/1.png', // i.e. process.env.FETCH_URL + '/logo.png'\n          link: {\n            mobileWebUrl: window.location.href,\n            webUrl: window.location.href\n          },\n        },\n        buttons: [\n          {\n            title: '결과 확인하기',\n            link: {\n              // mobileWebUrl: window.location.href,\n              mobileWebUrl: window.location.href,\n              webUrl: window.location.href\n            },\n          }\n        ],\n      })\n    }\n  }\n  return (\n    <div className=\"kakao-share-button\">\n      {/* Kakao share button */}\n      {/* <button id=\"kakao-link-btn\">\n        <img src=\"/icons/kakao.png\" alt=\"kakao-share-icon\" />\n        ㅏ하하\n      </button> */}\n      <Image src='../img/resultImage/kakao.png' \n             alt='kakaoIcon' id='kakao-link-btn' \n             style={{\n               width: '48px',\n               height: '48px'\n             }} />\n    </div>\n  )\n}\nexport default KakaoShare","import styled from \"styled-components\"\nimport { useState } from \"react\";\nimport { Image } from \"semantic-ui-react\";\n\nimport Question from '../util/question.json';\n\n\nconst Wrap = styled.div`\n  max-width: 640px;\n  margin: 0px auto;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  div{\n    padding: 0.4em;\n    text-align: center;\n  }\n`\nconst Score = styled.div`\n  display: ${props => props.show ? \"none\" : \"block\"};\n\n  div{\n    font-family: 'TmoneyRoundWindRegular';\n    font-size: 1.1em;\n    word-break: keep-all;\n    line-height: 1.4;\n\n  }\n`\nconst Answer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border: 1px solid black;\n  span {\n    font-family: 'TmoneyRoundWindRegular';\n    font-weight: bold;\n  }\n  img {\n    width: 22px;\n    height: 22px;\n    margin: 4px;\n  }\n`\n\n\nfunction TestResultDetail( props ) {\n\n  const [toggle, setToggle] = useState(true);\n\n  const toggleBtn = () => {\n    setToggle(!toggle)\n    document.getElementById('toggleDiv').focus()\n  }\n\n  return (\n    <Wrap>\n      <Answer onClick={toggleBtn}>\n        <span>정답이 궁금하다면?</span>\n        <Image src='../img/resultImage/click.png' />\n      </Answer>\n      \n      <Score show={toggle} id='toggleDiv' tabIndex='1'>\n\n        <h3>OX퀴즈 정답</h3>\n        {Question.map((question, index) => (\n          <div key={index}>\n            <div>\n              {question.id}. {question.question}\n            </div>\n            <div>\n              정답 :  {question.answer}\n            </div>\n          </div>\n        ))}\n      </Score>\n\n    </Wrap>\n\n\n  )\n}\n\nexport default TestResultDetail\n","import { CopyToClipboard } from 'react-copy-to-clipboard';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Image, Button, Icon } from 'semantic-ui-react';\n\nimport Result from '../util/result.json';\nimport Menubar from './Menubar';\nimport KakaoShare from './KakaoShare';\nimport TestResultDetail from './TestResultDetail';\n\nconst Wrap = styled.div`\n  max-width: 640px;\n  margin: 0px auto;\n  padding-bottom: 0px;\n`\nconst Content = styled.div`\n  padding-top: 4vh;\n`\nconst ResultSocre = styled.div`\n  p{\n      font-family: 'TmoneyRoundWindExtraBold';\n      font-size: 1.6rem;\n      font-weight: 900;\n      margin: 0;\n      text-align: center;\n    }\n`\nconst ResultType = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n  span, p {\n    font-family: 'TmoneyRoundWindRegular';\n    font-size: 1.1rem;\n    line-height: 1.6;\n    word-break: keep-all;\n  }\n\n`\n\nconst LinkWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  img{\n    margin-left: 1.2rem;\n    margin-right: 1.2rem;\n    cursor: pointer;\n  }\n`\n\nconst TestResult = ({ match }) => {\n    const url = window.location.href;\n    const { score } = match.params;\n    const result = Result[score];\n\n    console.log(match)\n    console.log(result.img)\n\n    const copyAlert = () => {\n        alert('링크 복사완료!');\n    };\n\n\n    return (\n        <>\n          <Menubar />\n          <Wrap key={result.id}>\n            <Content>\n              <ResultSocre>\n              <p>당신의 점수는?</p>\n              <p style={{ \n                color: '#34558b',\n                fontSize: '2rem'\n               }}>\n                 {score * 10}점!\n              </p>\n              </ResultSocre>\n              {/* 이미지 */}\n              <Image src={result.img} centered style={{ height: '42vh'}} />\n              <ResultType>\n                <div>\n                  <span>{result.subhead[0].head}</span> {/* 당신은 진정한 환경지킴이! 지구의 */}\n                  <span>{result.id}</span>              {/* 히어로 */}\n                  <span>{result.subhead[1].head}</span> {/* 시군요! */}\n                </div>\n                <p>{result.subject}</p>         {/* 앞으로도 쭉 지금같이 노력해주세요! */}\n              </ResultType>\n\n              <LinkWrap>\n                {/* 다시하기 */}\n                <Link to=\"/PLEA-STREET/cleanTest\"> \n                  <Image src='../img/resultImage/reset.png'\n                         style={{\n                           width: '54px',\n                           height: '54px'\n                         }} />\n                </Link> \n                {/* 카카오톡 공유 */}\n                <KakaoShare />\n                {/* 링크 공유 */}\n                <CopyToClipboard text={url}>\n                  <Image src='../img/resultImage/link.png'\n                         onClick={copyAlert}\n                         style={{\n                           width: '44px',\n                           height: '44px'\n                         }} />\n                </CopyToClipboard>\n              </LinkWrap>\n              {/* 정답 */}        \n              <TestResultDetail score={score} />\n            </Content>\n          </Wrap>\n        </>\n    );\n};\n\nexport default TestResult;\n","import React from 'react'\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport LandingPage from \"./page/Landing.js\"\nimport ShowPage from \"./page/ShowPage.js\"\nimport Community from './page/CommunityPage.js';\nimport SignUpPage from './page/SignUpPage.js';\nimport SignInPage from './page/SignInPage.js'\nimport PostWrite from './page/PostWrite.js';\nimport PostedPage from './page/PostedPage.js'\nimport RecyclePage from './page/RecyclePage'\nimport TestStartPage from './component/TestStartPage.js';\nimport TestOptions from './component/TestOptions.js'\nimport TestResult from './component/TestResult.js';\n\n\nimport './App.css'\n\n\nfunction App() {\n\n  return (\n    <HelmetProvider>\n      <BrowserRouter>\n          <Switch>\n            {/* 랜딩페이지 */}\n            <Route exact path = \"/PLEA-STREET/\" component={LandingPage}/>\n            {/* 지도검색 페이지 */}\n            <Route exact path = \"/PLEA-STREET/mapSearch\" component={ShowPage}/>\n            {/* 커뮤니티페이지 */}\n            <Route exact path = \"/PLEA-STREET/community\" component={Community}/>\n            <Route exact path = \"/PLEA-STREET/signUp\" component={SignUpPage}/>\n            <Route exact path = \"/PLEA-STREET/signIn\" component={SignInPage}/>\n            <Route exact path = \"/PLEA-STREET/postwrite\" component={PostWrite}/>\n            <Route exact path = \"/PLEA-STREET/posted\" component={PostedPage}/>\n            {/* 테스트페이지 */}\n            <Route exact path = \"/PLEA-STREET/cleanTest\" component={TestStartPage}/>\n            <Route exact path = \"/PLEA-STREET/options\" component={TestOptions}/>\n            <Route exact path = \"/PLEA-STREET/result/:score\" component={TestResult}/>\n            {/* 교육페이지 */}\n            <Route exact path = \"/PLEA-STREET/recycle\" component={RecyclePage}/>\n\n          </Switch>\n      </BrowserRouter>\n    </HelmetProvider>\n  )\n}\n\nexport default App\n","const size = {\n  mobile: '360px',\n  tablet: '900px',\n  laptop: '1200px',\n  desktop: '1800px',\n}\n\nconst theme = {\n  mainColor: '#0a4297',\n  mobile: `(max-width: ${size.mobile})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  desktop: `(min-width: ${size.desktop})`,\n}\n\nexport default theme","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;  \n  }\n\n  body {\n    box-sizing: border-box;\n  }\n`\n\nexport default GlobalStyle","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, BrowserRouter as Router } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { ThemeProvider } from 'styled-components'\nimport theme from './styles/theme'\nimport GlobalStyle from './styles/global'\n\n// <React.StrictMode>\n//  </React.StrictMode>,\nReactDOM.render(\n    \n      <ThemeProvider theme={theme}>\n        <App />\n        <GlobalStyle />\n      </ThemeProvider>\n, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}