{"version":3,"sources":["component/Img_container.js","component/B_GetCurrentNext.js","component/Menubar.js","page/Landing.js","component/Map.js","component/Contanier.js","component/D_filter.js","component/B_list.js","page/ShowPage.js","component/PostComponent.js","component/PostListComponent.js","page/CommunityPage.js","page/SignUpPage.js","page/SignInPage.js","page/PostWrite.js","page/PostedPage.js","component/TestStartPage.js","component/TestOptions.js","component/TestResult.js","App.js","styles/theme.js","styles/global.js","index.js"],"names":["Img","styled","div","ImgStyle1","img","ImgStyle2","ControlMap","MainImage","src","alt","button","Wrap","TopMenu","TopBtnWrapper","MenuBtn","TopBtn","Menubar","history","useHistory","useEffect","console","log","useState","Clatitude","setCLatitude","Clongitude","setCLongitude","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Icon","name","style","display","justifyContent","alignItems","color","width","height","to","pathname","state","ImgCon","Header","span","props","theme","mobile","Span","Landing","onClick","push","alert","showMap","Container","D_filter","setting","gu","setGu","currentValue","Dropdown","basic","options","text","value","key","placeholder","selection","fluid","onChange","e","target","textContent","B_list","map","prevGu","trashMarker_list","all","setAll","locas","i","loca","length","자치구명","도로명","설치위치","Menu_wrapper","Div_area","kakao","window","infowindow","maps","InfoWindow","removable","zIndex","ShowPage","useLocation","location","setLocation","lat","lon","geo","Promise","resolve","reject","err","maximumAge","timeout","enableHighAccuracy","mapContainer","document","getElementById","mapOption","center","LatLng","level","Map","then","pos","current","Marker","title","clickable","clusterer","MarkerClusterer","averageCenter","minLevel","trashIcon","MarkerImage","Size","shape","data","위도","경도","image","addMarkers","marker","event","addListener","setContent","getTitle","getPosition","Ma","La","open","setCenter","undefined","services","Geocoder","addressSearch","result","status","Status","OK","y","x","close","setLevel","animate","duration","trashMarkerL","filter","array","id","useFetch","page","list","setList","hasMore","setHasMore","isLoading","setIsLoading","sendQuery","useCallback","a","URL","axios","get","response","prev","Set","content","Wrapper","Content","Loading","ListTitle","ListContent","PostListComponent","pageNum","setPageNum","boardId1","setBoardId1","observerRef","useRef","root","rootMargin","threshold","post","idx","prop","boardId","boardTitle","boardContent","ref","ele","disconnect","IntersectionObserver","isIntersecting","observe","PostListWrap","Btn","Top","Body","CommunityPage","notlogged","setNotlogged","checkTokenHandler","localStorage","getItem","token","Input","input","SignUpPage","userId","setUserId","userPwd","setUserPwd","userPhone","setUserPhone","userName","setUserName","onSubmit","preventDefault","body","JSON","stringify","headers","type","SignInPage","accessToken","setItem","catch","error","currentTarget","Title","PostWrite","setTitle","accesstoken","Authorization","withCredentials","res","PostedPage","getLocation","postId","setPostId","getData","Middle","TestStartPage","size","Wrap1","Slider","Detail","Counter","BtnBox","LoadingContainer","TestOptions","loading","setLoading","num","setNum","currentSlide","setCurrentSlide","slideRef","createRef","mbti","setMbti","nextSlideFir","Questions","answers","transform","nextSlideSec","count","setTimeout","examResult","join","mbtiChecker","item","question","Loader","active","inline","ResultType","ResultTitle","TestResult","match","countryName","href","params","nation","Countries","subject","App","exact","path","component","LandingPage","Community","mainColor","tablet","laptop","desktop","GlobalStyle","createGlobalStyle","ReactDOM","render"],"mappings":"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","file":"static/js/main.5671d319.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Img = styled.div`\r\n    width : 100%;\r\n    height : 60vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst ImgStyle1 = styled.img`\r\n    width : 30vh;\r\n    height : 40vh;\r\n    cursor: pointer;\r\n\r\n`\r\n\r\nconst ImgStyle2 = styled.img`\r\n    width : 30vh;\r\n    height : 40vh;\r\n    display: none;\r\n    cursor: pointer;\r\n`\r\n\r\nconst ControlMap = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width : 50%;\r\n    height : 100%;\r\n\r\n    margin: auto;\r\n    &:hover  {\r\n        ${ImgStyle2} {\r\n            display : block;\r\n        }\r\n        ${ImgStyle1} {\r\n            display : none;\r\n        }\r\n    }\r\n`\r\n\r\nfunction MainImage() {\r\n  \r\n    return (\r\n            <Img>\r\n                <ControlMap>\r\n                    <ImgStyle1 src = 'img/2.png' alt =\"can_close\"/>\r\n                    <ImgStyle2 src = 'img/1.png' alt =\"can_open\"/> \r\n                </ControlMap>\r\n            </Img>\r\n          \r\n    )\r\n}\r\n\r\nexport default MainImage\r\n","import styled from \"styled-components\";\r\n\r\n\r\nconst Button = styled.button`\r\n    backGround: white;\r\n    border : none;\r\n    &:hover {\r\n      cursor : pointer;\r\n    }\r\n`\r\n\r\n\r\n\r\nexport default Button\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport styled from \"styled-components\"\r\nimport {Icon} from 'semantic-ui-react'\r\nimport { useHistory, Link } from \"react-router-dom\";\r\n\r\n\r\nconst Wrap = styled.div`\r\n  max-width: 640px;\r\n  margin: 0px auto;\r\n  padding-bottom: 0px;\r\n`\r\nconst TopMenu = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  height: 44px;\r\n  border-bottom: 1px solid rgb(50, 84, 137, 0.1);\r\n`\r\nconst TopBtnWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`\r\nconst MenuBtn = styled.div`\r\n  width: 5em;\r\n  height: 30px;\r\n  border-radius: 1em;\r\n  margin: 0.5em;\r\n  transition: all 0.3s;\r\n  &:hover{\r\n    transform: scale(1.08);\r\n    background-color: #34558b;\r\n    color: white;\r\n  }\r\n  span{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n  }\r\n`\r\nconst TopBtn = styled.button`\r\nbackground-color: white;\r\n  left: 0em;\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-left: 1em;\r\n  margin-right: 1.8em;\r\n  padding-top: 10px;\r\n  border: 0;\r\n  outline: 0;\r\n  transition: all 0.3s;\r\n  &:hover{\r\n    transform: scale(1.1);\r\n  }\r\n`\r\n\r\nfunction Menubar() {\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    console.log(history)\r\n  },[])\r\n\r\n  const [Clatitude, setCLatitude] = useState()\r\n  const [Clongitude, setCLongitude] = useState()\r\n\r\n  navigator.geolocation.getCurrentPosition((position) => {\r\n    setCLatitude(position.coords.latitude);\r\n    setCLongitude(position.coords.longitude);\r\n  })\r\n\r\n  return (\r\n    <Wrap>\r\n      <TopBtnWrapper>\r\n        <TopBtn>\r\n          <Icon name='arrow left' style={\r\n            { display: 'flex', \r\n              justifyContent: 'center', \r\n              alignItems: 'center', \r\n              color: '#34558b', \r\n              width: '100%', \r\n              height: '100%'  }} />\r\n        </TopBtn>\r\n        <TopBtn>\r\n          <Link to='/PLEA-STREET/'>\r\n            <Icon name='home' style={\r\n              { display: 'flex', \r\n                justifyContent: 'center', \r\n                alignItems: 'center', \r\n                color: '#34558b', \r\n                width: '100%', \r\n                height: '100%'  }} />\r\n          </Link>\r\n        </TopBtn>\r\n      </TopBtnWrapper>\r\n      <TopMenu>\r\n        <Link to={{\r\n            pathname: \"/PLEA-STREET/mapSearch\",\r\n            state: {\r\n              latitude: Clatitude,\r\n              longitude: Clongitude\r\n            }\r\n        }} style={{ color: 'black' }} >\r\n          <MenuBtn>\r\n            <span>위치검색</span>\r\n          </MenuBtn>\r\n        </Link>\r\n        <Link to='/PLEA-STREET/cleanTest' style={{ color: 'black' }}>\r\n          <MenuBtn>\r\n            <span>검사</span>\r\n          </MenuBtn>\r\n        </Link>\r\n        <Link to='/PLEA-STREET/community' style={{ color: 'black' }}>\r\n          <MenuBtn>\r\n            <span>커뮤니티</span>\r\n          </MenuBtn>\r\n        </Link>\r\n        <Link to='/PLEA-STREET/' style={{ color: 'black' }}>\r\n          <MenuBtn>\r\n            <span>교육</span>\r\n          </MenuBtn>\r\n        </Link>\r\n      </TopMenu>\r\n    </Wrap>\r\n  )\r\n}\r\n\r\nexport default Menubar\r\n","import React, {useState,useEffect} from 'react'\r\nimport MainImage from '../component/Img_container'\r\nimport Btn from \"../component/B_GetCurrentNext\"\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router'\r\nimport Menubar from '../component/Menubar'\r\n\r\nconst Wrap = styled.div`\r\n    max-width: 640px;\r\n    margin: 0px auto;\r\n    padding-bottom: 0px;\r\n    height: 100vh;\r\n`\r\n\r\nconst ImgCon = styled.div`\r\n    width: 100%;\r\n    height : 100%;\r\n`\r\n\r\nconst Header = styled.span`\r\n    height: 40%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-family: 'BinggraeMelona-Bold';\r\n    font-weight: bold;\r\n    font-size: 5rem;\r\n    line-height: 0.8;\r\n    color: black;\r\n    padding-top: 5rem;\r\n\r\n    @media ${props => props.theme.mobile} {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      font-family: 'BinggraeMelona-Bold';\r\n      font-weight: bold;\r\n      text-align: center;\r\n    }\r\n`\r\n\r\nconst Span = styled.span`\r\n\r\n    @media ${props => props.theme.mobile} {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      font-family: 'BinggraeMelona-Bold';\r\n      font-weight: bold;\r\n      text-align: center;\r\n    }\r\n`\r\n\r\nfunction Landing(props) {\r\n    const history = useHistory();\r\n    const [Clatitude, setCLatitude] = useState()\r\n    const [Clongitude, setCLongitude] = useState()\r\n\r\n    const getCheck = () => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setCLatitude(position.coords.latitude);\r\n            setCLongitude(position.coords.longitude);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{getCheck()},[Clongitude])\r\n    console.log(Clatitude, Clongitude)\r\n  \r\n    const getLocation = (props) => {\r\n        if (Clongitude >=1 && Clatitude >=1) {\r\n            history.push({\r\n                pathname: \"/PLEA-STREET/mapSearch\",\r\n                state: {\r\n                    latitude: Clatitude,\r\n                    longitude : Clongitude\r\n                }\r\n            })\r\n        }else{\r\n            alert(\"페이지 새로 고침 후 사용자 정보 위치 제공권한에 동의 해주세요!\")\r\n        }        \r\n    }\r\n\r\n    return (\r\n        <Wrap>\r\n          <Menubar />\r\n          <Header>\r\n            <Span>PLEA</Span>\r\n            <Span>-</Span>\r\n            <Span>STREET</Span>\r\n          </Header>\r\n          <ImgCon onClick = {getLocation}>\r\n            <MainImage />\r\n              {/* <Btn onClick = {getLocation}>\r\n                  <MainImage/>\r\n              </Btn> */}\r\n          </ImgCon>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","import styled from \"styled-components\"\r\n\r\nconst showMap = styled.div`\r\n    width : 100%;\r\n    height : 100%;\r\n    /* border : 1px solid blue; */\r\n    z-index: 3;\r\n`\r\n\r\nexport default showMap","import styled from \"styled-components\"\r\n\r\nconst Container = styled.div`\r\n    /* width : 100%;\r\n    height : 100vh;\r\n    background-color: #34558b; */\r\n    /* border : 1px solid black; */\r\n    max-width: 640px;\r\n    margin: 0px auto;\r\n    padding-bottom: 0px;\r\n    height: 78vh;\r\n`\r\n\r\nexport default Container","import React, { useState} from 'react'\r\nimport { Dropdown } from 'semantic-ui-react'\r\n\r\nfunction D_filter({setting}) {\r\nconst [gu, setGu] = useState(\"\")\r\nconst gus = [\r\n    {text: \"강동구\", value: \"강동구\", key : 1}, \r\n    {text: \"강남구\", value: \"강남구\", key : 2},\r\n    {text: \"강서구\", value: \"강서구\", key : 3},\r\n    {text: \"강북구\", value: \"강북구\", key : 4},\r\n    {text: \"관악구\", value: \"관악구\", key : 5},\r\n    {text: \"광진구\", value: \"광진구\", key : 6},\r\n    {text: \"구로구\", value: \"구로구\", key : 7},\r\n    {text: \"금천구\", value: \"금천구\", key : 8},\r\n    {text: \"노원구\", value: \"노원구\", key : 9},\r\n    {text: \"동대문구\", value: \"동대문구\", key : 10},\r\n    {text: \"도봉구\", value: \"도봉구\", key : 11},\r\n    {text: \"동작구\", value: \"동작구\", key : 12},\r\n    {text: \"마포구\", value: \"마포구\", key : 13},\r\n    {text: \"서대문구\", value: \"서대문구\", key : 14},\r\n    {text: \"성동구\", value: \"성동구\", key : 15},\r\n    {text: \"성북구\", value: \"성북구\", key : 16},\r\n    {text: \"서초구\", value: \"서초구\", key : 17},\r\n    {text: \"송파구\", value: \"송파구\", key : 18},\r\n    {text: \"영등포구\", value: \"영등포구\", key : 19},\r\n    {text: \"용산구\", value: \"용산구\", key : 20},\r\n    {text: \"양천구\", value: \"양천구\", key : 21},\r\n    {text: \"은평구\", value: \"은평구\", key : 22},\r\n    {text: \"종로구\", value: \"종로구\", key : 23},\r\n    {text: \"중구\", value: \"중구\", key : 24},\r\n    {text: \"중랑구\", value: \"중랑구\", key : 25}\r\n    ]\r\n\r\n    const handleChange = (e, {value}) => {\r\n        let name = e.target.textContent;\r\n        setGu(name)\r\n        setting(name)\r\n    }\r\n    console.log(\"indfilter\",gu)\r\n\r\n    const {currentValue} = gu\r\n\r\n    return (\r\n        <Dropdown basic color='blue'\r\n        options={gus}\r\n        placeholder='구 선택'\r\n        selection\r\n        fluid\r\n        value={currentValue}\r\n        onChange={handleChange}\r\n      />\r\n    )\r\n}\r\n\r\nexport default D_filter\r\n","import React, { useState } from 'react'\r\nimport loca from \"../util/loca.json\"\r\nimport { Dropdown } from 'semantic-ui-react';\r\n\r\n\r\nfunction B_list({setting}) {\r\n\r\n  const [all, setAll] = useState(\"\")\r\n\r\n  // const locas = [{text:loca[1].자치구명+loca[1].설치위치, value:loca[1].자치구명+loca[1].설치위치, key:1}]\r\n\r\n  const locas = []\r\n\r\n  for(var i=0; i<loca.length; i++) {\r\n    \r\n    locas.push({text:loca[i].자치구명 + ' ' + loca[i].도로명 + ' ' + loca[i].설치위치, value:loca[i].자치구명 + ' ' + loca[i].도로명 + ' ' + loca[i].설치위치, key:i})\r\n    // console.log(value)\r\n  }\r\n\r\n  const handleChange = (e, {value}) => {\r\n    let name = e.target.textContent;\r\n    setAll(name)\r\n    setting(name)\r\n  }\r\n  console.log(\"location\",all)\r\n\r\n  const {currentValue} = all\r\n\r\n  return (\r\n    <Dropdown basic color='blue'\r\n      options={locas}\r\n      placeholder='전체'\r\n      selection\r\n      fluid\r\n      value={currentValue}\r\n      onChange={handleChange}\r\n    />\r\n   \r\n  )\r\n}\r\n\r\nexport default B_list\r\n","import React, { useEffect, useLayoutEffect, useState } from 'react'\r\nimport ContainerMap from \"../component/Map.js\"\r\nimport Container from '../component/Contanier.js';\r\nimport styled from \"styled-components\"\r\n\r\nimport { useLocation } from \"react-router-dom\"\r\nimport Menubar from '../component/Menubar.js';\r\n\r\n\r\n//버튼 차례데로 현재 로케, 필터링 구, 목록\r\nimport FilterBtn from \"../component/D_filter.js\"\r\nimport ListBtn from \"../component/B_list.js\"\r\n\r\n//local data\r\nimport data from \"../util/loca\"\r\nimport { Button, Icon } from 'semantic-ui-react'\r\nimport { resolvePlugin } from '@babel/core';\r\n\r\nconst Menu_wrapper = styled.div`\r\n    width : 100%;\r\n    height : 8vh;\r\n    /* margin-bottom: 1.4vh; */\r\n    /* border : 1px solid red; */\r\n    /* display: grid;\r\n    grid-template-columns: 0.3fr 0.05fr 0.5fr 1fr 0.7fr; */\r\n    display: flex;\r\n    justify-content: space-around;\r\n    text-align: center;\r\n    font-family: 'NanumBarunGothic';\r\n\r\n    @media ${props => props.theme.mobile} {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      /* display: grid;\r\n      grid-template-columns: 0.3fr 0.05fr 0.5fr 1fr 0.7fr; */\r\n      font-family: 'NanumBarunGothic';\r\n      text-align: center;\r\n    }\r\n`\r\n\r\nconst Div_area = styled.div`\r\n    margin: auto;\r\n    height : 100%;\r\n    width : 100%;\r\n    z-index: 4;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-family: 'NanumBarunGothic';\r\n`\r\n\r\nlet map;\r\nlet prevGu;\r\nlet { kakao } = window;\r\nvar infowindow = new kakao.maps.InfoWindow({\r\n    //content: \r\n    removable: true,\r\n    zIndex: 5,\r\n});\r\nlet trashMarker_list;\r\nlet currentMarker;\r\n\r\nfunction ShowPage() {\r\n\r\n    const getLocation = useLocation()\r\n\r\n    let [location, setLocation] = useState({\r\n        latitude: 0,\r\n        longitude: 0\r\n    });\r\n\r\n    const [gu, setGu] = useState(\"\")\r\n    console.log(\"바뀐구\", gu)\r\n\r\n    const [all, setAll] = useState(\"\")\r\n    console.log(\"all\", all);\r\n\r\n    let lat, lon;\r\n    let geo = new Promise((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            lat = position.coords.latitude;\r\n            lon = position.coords.longitude;\r\n            resolve({ lat, lon });\r\n        }, (err) => { console.log(err) }, { maximumAge: 100000, timeout: 5000, enableHighAccuracy: true })\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"deps[] 렌더링\");\r\n        \r\n        // 지도를 표시할 div \r\n        let mapContainer = document.getElementById('map'),\r\n            mapOption = {\r\n                center: new kakao.maps.LatLng(location.latitude, location.longitude), // 지도의 중심좌표\r\n                level: 7 // 지도의 확대 레벨\r\n            };\r\n        map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n        \r\n        geo.then((pos) => {\r\n            setLocation({ latitude: pos.lat, longitude: pos.lon });\r\n            console.log('navigator에서 현재위치 받아오기 : ', pos.lat, pos.lon);\r\n\r\n            //현재 위치 마커 표시\r\n            const current = new kakao.maps.LatLng(pos.lat, pos.lon);\r\n            currentMarker = new kakao.maps.Marker({\r\n                map: map,\r\n                title: '현재 위치',\r\n                clickable: true,\r\n                position: current\r\n            })\r\n\r\n\r\n            // 마커 클러스터러를 생성합니다 \r\n            var clusterer = new kakao.maps.MarkerClusterer({\r\n                map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체 \r\n                averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정 \r\n                minLevel: 6 // 클러스터 할 최소 지도 레벨 \r\n            });\r\n\r\n\r\n            let trashIcon = new kakao.maps.MarkerImage('img/markerImage/trashMarker.png', new kakao.maps.Size(50, 50), {\r\n                shape: 'poly',\r\n                coords: '25,45,12,24,12,16,18,8,32,8,38,16,38,24',\r\n            })\r\n            trashMarker_list = data.map((i) => {\r\n                //console.log(i.위도)\r\n                return new kakao.maps.Marker({\r\n                    position: new kakao.maps.LatLng(i.위도, i.경도),\r\n                    clickable: true,\r\n                    title: `${i.자치구명} ${i.도로명} ${i.설치위치}`,\r\n                    image: trashIcon\r\n                })\r\n            })\r\n            clusterer.addMarkers(trashMarker_list);\r\n\r\n            let trashMarker_event_list = trashMarker_list.map((marker) => {\r\n                kakao.maps.event.addListener(marker, 'click', () => {\r\n                    infowindow.setContent(`<div style=\"width:150px;text-align:center;padding:10px 15px;\">\r\n                            ${marker.getTitle()}\r\n                        <button style=\"margin:10px 0 0 0; padding:5px;\" onclick=\"location.href='https://map.kakao.com/link/to/${marker.getTitle()},${marker.getPosition().Ma},${marker.getPosition().La}/from/현재위치,${pos.lat},${pos.lon}'\">길찾기</button></div>`);\r\n                    infowindow.open(map, marker);\r\n                    //map.setCenter(marker.getPosition()); //마커 누르면 그 위치로 맵 중심 이동.\r\n                })\r\n            })\r\n        });\r\n        console.log('location : ', location.latitude, location.longitude);\r\n\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"deps[location] 렌더링\");\r\n\r\n        //사용자 현재 위치로 화면 이동\r\n        const current = new kakao.maps.LatLng(location.latitude, location.longitude);\r\n        map.setCenter(current);\r\n\r\n    }, [location])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"deps[gu] 렌더링\");\r\n\r\n        if (prevGu !== gu && prevGu !== undefined) {\r\n            // 주소-좌표 변환 객체 || 구(드롭다운메뉴 내에서)가 바뀔 때마다 위치 변경.\r\n            var geocoder = new kakao.maps.services.Geocoder();\r\n            // 주소로 좌표를 검색합니다\r\n            geocoder.addressSearch(`${gu}`, function (result, status) {\r\n                // 정상적으로 검색이 완료됐으면 \r\n                if (status === kakao.maps.services.Status.OK) {\r\n                    var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n\r\n                    // // 결과값으로 받은 위치를 마커로 표시합니다\r\n                    // var marker = new kakao.maps.Marker({\r\n                    //     map: map,\r\n                    //     position: coords\r\n                    // });\r\n\r\n                    // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n                    infowindow.close();\r\n                    infowindow.setContent(`<div style=\"width:150px;text-align:center;padding:6px 0;\">${gu}</div>`);\r\n                    infowindow.open(map);\r\n                    map.setCenter(coords);                    \r\n                    map.setLevel(7, {animate: {duration: 200}});     \r\n                }\r\n            });\r\n        }\r\n        prevGu = gu;\r\n\r\n    }, [gu])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"deps[all] 렌더링\");\r\n\r\n        // 주소-좌표 변환 객체 || 구(드롭다운메뉴 내에서)가 바뀔 때마다 위치 변경.\r\n        var geocoder = new kakao.maps.services.Geocoder();\r\n        // 주소로 좌표를 검색합니다\r\n        geocoder.addressSearch(`${all}`, function (result, status) {\r\n            // 정상적으로 검색이 완료됐으면 \r\n            if (status === kakao.maps.services.Status.OK) {\r\n                var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n                \r\n                let trashMarkerL = trashMarker_list.filter((marker, i, array) => {\r\n                    return marker.getTitle() === all;\r\n                });\r\n                //console.log(trashMarker_list)\r\n                //console.log(trashMarkerL)\r\n\r\n                // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n                infowindow.close();\r\n                infowindow.setContent(`<div style=\"width:150px;text-align:center;padding:10px 15px;\">\r\n                        ${all}\r\n                        <button style=\"margin:10px 0 0 0; padding:5px;\" onclick=\"location.href='https://map.kakao.com/link/to/${all},${result[0].y},${result[0].x}/from/현재위치,${location.latitude},${location.longitude}'\">길찾기</button>\r\n                    </div>`);\r\n                infowindow.open(map, trashMarkerL[0]);\r\n                map.setCenter(coords);\r\n                map.setLevel(5, {animate: {duration: 200}});\r\n            }\r\n        });\r\n\r\n    }, [all])\r\n\r\n\r\n    //현재 위치 조회 버튼\r\n    function setCurrent() {\r\n        geo.then((pos) => {\r\n            setLocation({ latitude: pos.lat, longitude: pos.lon });\r\n            console.log('navigator에서 현재위치 받아오기 : ', pos.lat, pos.lon)\r\n        });\r\n\r\n        console.log(\"click 현재 위치 조회\");\r\n    }\r\n\r\n\r\n    //구 변경값을 state로 전달 \r\n    const handleGu = (data) => {\r\n        if (gu !== data) {\r\n            setGu(data)\r\n        }\r\n        console.log(\"showpage\", data)\r\n    }\r\n\r\n    const handleAll = (data) => {\r\n        if (all !== data) {\r\n            setAll(data)\r\n        }\r\n        console.log(\"showpage\", data)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Menubar />\r\n            <Menu_wrapper>\r\n                <Div_area>\r\n                    <Button fluid color='blue' onClick={setCurrent}>\r\n                        <Icon name='location arrow' />\r\n                        <span>현위치</span>\r\n                    </Button>\r\n                </Div_area>\r\n\r\n                <Div_area>\r\n                    <FilterBtn setting={handleGu} />\r\n                </Div_area>\r\n\r\n                <Div_area>\r\n                    <ListBtn setting={handleAll} />\r\n                </Div_area>\r\n            </Menu_wrapper>\r\n\r\n            <ContainerMap id='map' />\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default ShowPage;\r\n","import React, { useState, useCallback, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst useFetch = (page) => {\r\n  const [list, setList] = useState([]);\r\n  const [hasMore, setHasMore] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const sendQuery = useCallback( async () => {\r\n      const URL = `http://localhost:8080/PLEA-STREET/board/all?page=${page}`;\r\n      await axios.get(URL).then(response =>{\r\n        setList((prev) => [...new Set([...prev, ...response.data.content])]); \r\n        setHasMore(response.data.content.length > 0); \r\n        setIsLoading(false)\r\n      })\r\n}, [page]);\r\n\r\n\r\n\r\nuseEffect(() => {\r\n    sendQuery();\r\n}, [sendQuery, page]); \r\n\r\nreturn {hasMore, list, isLoading};\r\n};\r\nexport default useFetch;\r\n","import React,{useState, useRef, useEffect} from 'react'\r\nimport useFetch from \"./PostComponent\"\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    width : 640px;\r\n`\r\n\r\nconst Content = styled.div`\r\n  padding-top: 5vh;\r\n  padding-left: 1vh;\r\n  height: 200px;\r\n  width : 100%;\r\n  border : 1px solid black;\r\n  &:hover{\r\n    cursor:pointer;\r\n  }\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  fontweight: 600;\r\n`;\r\n\r\nconst ListTitle = styled.span`\r\n    font-size : xx-large;\r\n`\r\n\r\nconst ListContent = styled.div`\r\n    padding-top: 5vh;\r\n`\r\n\r\n\r\nfunction PostListComponent() {\r\n  const [pageNum, setPageNum] = useState(0);\r\n  const [boardId1, setBoardId1] = useState();\r\n  const {list, hasMore, isLoading} = useFetch(pageNum);\r\n  const history = useHistory();   \r\n\r\n  const observerRef = useRef();\r\n  const options = {\r\n      root: null,\r\n      rootMargin:\"10px\",\r\n      threshold: 1\r\n  }\r\n  console.log(\"boardIdcompoennt \", boardId1)\r\n  \r\n\r\n  const pageHandler = (prop) => {\r\n      setBoardId1(prop)\r\n      console.log(\"prop\",prop)\r\n      history.push({\r\n          pathname: \"/PLEA-STREET/posted\",\r\n          state: {\r\n              boardId: prop\r\n          }\r\n      })\r\n  }\r\n\r\n\r\n  const observer = (ele) => {\r\n      if(isLoading) return;\r\n      if(observerRef.current) observerRef.current.disconnect();\r\n      observerRef.current = new IntersectionObserver(([entry]) => {\r\n          if(entry.isIntersecting && hasMore){\r\n              setPageNum((page) => page + 1);\r\n          }\r\n      }, options);\r\n      ele && observerRef.current.observe(ele);\r\n  };\r\n\r\n  console.log(list)\r\n\r\n    return (\r\n        <Wrapper>\r\n            {list?.map((post, idx) =>(\r\n                <Content \r\n                key={idx} \r\n                onClick={() => {\r\n                            pageHandler(post.boardId);\r\n                }}>\r\n                    <ListTitle>{post.boardTitle}</ListTitle>\r\n                    <ListContent>{post.boardContent}</ListContent>\r\n                </Content>\r\n            ))}\r\n            <div ref ={observer}/>\r\n            <div>{isLoading ? <Loading /> : \"No More Data\"} </div>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default PostListComponent\r\n","import React,{useState} from 'react'\r\nimport MenuBar from '../component/Menubar'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router'\r\nimport { useEffect } from 'react/cjs/react.development'\r\nimport PostList from \"../component/PostListComponent\"\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    max-width: 640px;\r\n    margin: 0px auto;\r\n    padding-bottom: 0px;\r\n    height: 78vh;\r\n`\r\n\r\nconst PostListWrap = styled.div`\r\n    max-width : 640px;\r\n    height: 70vh;\r\n`\r\n\r\nconst Btn = styled.button`\r\n    width : 150px;\r\n    height: 50px;\r\n`\r\n\r\nconst Top = styled.div`\r\n    width : 100%;\r\n    height: 10vh;\r\n    border: 1px solid black;\r\n    padding-top: 2vh;\r\n \r\n    display: flex;\r\n    justify-content: space-around;\r\n`\r\n\r\nconst Body = styled.div`\r\n    width: 100%;\r\n    height: 80vh;\r\n    border: 2px solid red;\r\n    overflow-y: scroll;\r\n    overflow-x: hidden;\r\n`\r\n\r\n\r\nfunction CommunityPage() {\r\n    const history = useHistory();\r\n    const [notlogged, setNotlogged] = useState(true)\r\n\r\n    //최초 진입시 토큰 확인\r\n    useEffect(() => {checkTokenHandler()},[])\r\n\r\n\r\n    //토큰 유무로 로그인 여부 확인\r\n    const checkTokenHandler =() => {\r\n        if(localStorage.getItem(\"accessToken\")){\r\n            setNotlogged(false)\r\n        }\r\n    }\r\n\r\n    //글작성 핸들러\r\n    const PostHandler = (e) => {\r\n        if(!localStorage.getItem(\"accessToken\")){\r\n            alert(\"로그인을 먼저 해주세요!\")\r\n        }else{\r\n            history.push({\r\n                pathname: \"/PLEA-STREET/postwrite\",\r\n                state: {\r\n                    token: localStorage.getItem(\"accessToken\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    //로그인 핸들러\r\n    const SignInHandler = (e) => {\r\n        history.push({\r\n            pathname: \"/PLEA-STREET/signin\"\r\n        })\r\n    }\r\n\r\n    //회원가입핸들러\r\n    const SignUpHandler = (e) => {\r\n        history.push({\r\n            pathname: \"/PLEA-STREET/signup\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <MenuBar/>\r\n                <PostListWrap> \r\n                <Top>\r\n                   {notlogged ? <Btn onClick={SignInHandler}>로그인</Btn> : null }\r\n                    <Btn onClick={PostHandler}>글작성</Btn>\r\n                    {notlogged ? <Btn onClick={SignUpHandler}>회원가입</Btn> : null}\r\n                </Top>\r\n                <Body>\r\n                    <PostList/>\r\n                </Body>\r\n            </PostListWrap>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default CommunityPage\r\n","import React,{useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  border: solid 1px black;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width : 100px;\r\n    height : 50px;\r\n`\r\n\r\nconst Btn = styled.button`\r\n    padding : 20px;\r\n`\r\n\r\n function SignUpPage() {\r\n\r\n    const [userId, setUserId] = useState(\"\")\r\n    const [userPwd, setUserPwd] = useState(\"\")\r\n    const [userPhone, setUserPhone] = useState(\"\")\r\n    const [userName, setUserName] = useState(\"\")\r\n    const history = useHistory();\r\n\r\n    //아이디, 패스워드, 전화번호, 이름 값 인자로 받는 헨들러\r\n    const onHandlerId = (e) => {\r\n        setUserId(e.target.value)\r\n    }\r\n\r\n    const onHandlerPwd = (e) => {\r\n        setUserPwd(e.target.value)\r\n    }\r\n\r\n    const onHandlerPhone = (e) => {\r\n        setUserPhone(e.target.value)\r\n    }\r\n\r\n    const onHandlerName = (e) => {\r\n        setUserName(e.target.value)\r\n    }\r\n\r\n\r\n    //회원가입 요청 헨들러\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId: userId,\r\n            userPwd: userPwd,\r\n            userPhone: userPhone,\r\n            userName: userName\r\n        }\r\n        axios\r\n        .post(\"http://localhost:8080/PLEA-STREET/user/signup\", \r\n        JSON.stringify(body), {\r\n            headers: { \"Content-Type\": `application/json` },\r\n            })\r\n        .then((response) => history.push({\r\n            pathname:\"/PLEA-STREET/signin\"\r\n        }));\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n        <form onSubmit={handleSubmit}>\r\n                <label>아이디 입력</label>\r\n                <Input type=\"userId\" value={userId} onChange={onHandlerId}/>\r\n                    \r\n                <label>비밀번호 입력</label>\r\n                <Input type=\"userPwd\" value={userPwd} onChange={onHandlerPwd}/>\r\n\r\n                <label>핸드폰 번호 입력</label>\r\n                <Input type=\"userPhone\" value={userPhone} onChange={onHandlerPhone}/>\r\n     \r\n                <label>사용자 이름 입력</label>\r\n                <Input type=\"userName\" value={userName} onChange={onHandlerName}/>\r\n                 \r\n                <Btn type=\"submit\">\r\n                    눌러서 가입하기\r\n                </Btn>\r\n        \r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SignUpPage\r\n","import React,{useState} from 'react'\r\nimport styled from \"styled-components\"\r\nimport axios from \"axios\"\r\nimport { useHistory } from 'react-router'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  border: solid 1px black;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width : 100px;\r\n    height : 50px;\r\n`\r\n\r\nconst Btn = styled.button`\r\n    padding : 20px;\r\n`\r\n\r\nfunction SignInPage() {\r\n\r\n    const [userId, setUserId] = useState(\"\")\r\n    const [userPwd, setUserPwd] = useState(\"\")\r\n    const history = useHistory();\r\n\r\n\r\n    const onHandlerId = (e) => {\r\n        setUserId(e.currentTarget.value)\r\n    }\r\n\r\n    const onHandlerPwd = (e) => {\r\n        setUserPwd(e.currentTarget.value)\r\n    }\r\n\r\n    console.log(userId, userPwd)\r\n\r\n    //로그인 요청 핸들러\r\n    //인자값으로 id, password 받음\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let body = {\r\n            userId: userId,\r\n            userPwd: userPwd\r\n        }\r\n        axios\r\n        .post(\"http://localhost:8080/PLEA-STREET/user/signin\", \r\n        JSON.stringify(body), {\r\n            headers: { \"Content-Type\": `application/json` },\r\n            })\r\n      \r\n        .then(response => {\r\n            const token = response.data.accessToken;\r\n            console.log(token)\r\n            if(token.length != null){\r\n                localStorage.setItem(\"accessToken\", token)\r\n                alert(\"어서오세요 환영합니다!\")\r\n                history.push({\r\n                    pathname: \"/PLEA-STREET/community\"\r\n                })\r\n            }\r\n        }).catch(error => {\r\n            alert(\"없는 사용자 입니다\");\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n        <form onSubmit={handleSubmit}>\r\n                <label>아이디 입력</label>\r\n                <Input type=\"userId\" value={userId} onChange={onHandlerId}/>\r\n                    \r\n                <label>비밀번호 입력</label>\r\n                <Input type=\"userPwd\" value={userPwd} onChange={onHandlerPwd}/>\r\n                 \r\n                <Btn type=\"submit\">\r\n                    눌러서 로그인\r\n                </Btn>\r\n        \r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SignInPage\r\n","import axios from 'axios'\r\nimport React,{useState} from 'react'\r\nimport styled from \"styled-components\"\r\nimport MenuBar from '../component/Menubar'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    max-width: 640px;\r\n    margin: 0px auto;\r\n    padding-bottom: 0px;\r\n    height: 78vh;\r\n`\r\n\r\nconst Top = styled.div`\r\n    width : 100%;\r\n    height: 10vh;\r\n    border: 1px solid black;\r\n    padding-top: 2vh;\r\n    display: flex;\r\n    justify-content: space-around;\r\n`\r\n\r\n\r\nconst Body = styled.div`\r\n    width: 100%;\r\n    height: 80vh;\r\n    border: 2px solid red;\r\n    overflow-x: hidden;\r\n    display: inline-block;\r\n`\r\nconst Btn = styled.button`\r\n    width : 150px;\r\n    height: 50px;\r\n`\r\n\r\nconst Title = styled.input`\r\n    width: 400px;\r\n    height : 20px;\r\n    border: 1px solid blue;\r\n`\r\n\r\nconst Content = styled.input`\r\n    width : 400px;\r\n    height: 500px;\r\n    border: 1px solid green;\r\n`\r\n\r\n\r\n\r\nfunction PostWrite() {\r\n\r\n    const [title, setTitle] = useState(\"\")\r\n    const [content, setContent] = useState(\"\")\r\n    const history = useHistory();\r\n\r\n    //게시글 제출 핸들러\r\n    //토큰, 제목, 내용을 같이 보냄\r\n    const SubmitHandler =(e) =>{\r\n        const accesstoken = localStorage.getItem(\"accessToken\")\r\n        console.log(accesstoken)\r\n        let body = {\r\n            title: title,\r\n            content: content,\r\n            token: localStorage.getItem(\"accessToken\")\r\n        }\r\n        axios.post(\"http://localhost:8080/PLEA-STREET/board\", JSON.stringify(body),{\r\n            headers: {\r\n                \"Content-Type\":`application/json`,\r\n                Authorization: \"Bearer \"+ localStorage.getItem(\"accessToken\"),\r\n                withCredentials:true\r\n            },\r\n        }).then(res=> console.log(res),\r\n            history.push({\r\n            pathname:\"/PLEA-STREET/community\"\r\n        })).catch(err => {alert(\"에러발생\")})\r\n    }\r\n\r\n    const titleHandler = (e) =>{\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const contentHandler = (e) => {\r\n        setContent(e.currentTarget.value)\r\n    }\r\n    \r\n    return (\r\n        <Wrapper>\r\n            <MenuBar/>\r\n            <form onSubmit={SubmitHandler}>\r\n                <Top>\r\n                    <Btn type=\"submit\">글작성</Btn>\r\n                </Top>\r\n                <Body>\r\n                    <Title onChange={titleHandler}/>\r\n                    <Content onChange={contentHandler}/>\r\n                </Body>\r\n            </form>\r\n\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default PostWrite\r\n","import React,{useState, useEffect} from 'react'\r\nimport {useLocation} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport styled from \"styled-components\"\r\nimport MenuBar from '../component/Menubar'\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    max-width: 640px;\r\n    margin: 0px auto;\r\n    padding-bottom: 0px;\r\n    height: 78vh;\r\n`\r\n\r\nconst Top = styled.div`\r\n    width : 100%;\r\n    height: 10vh;\r\n    border: 1px solid black;\r\n    padding-top: 2vh;\r\n    display: flex;\r\n    justify-content: space-around;\r\n`\r\n\r\nconst Body = styled.div`\r\n    width: 100%;\r\n    height: 80vh;\r\n    border: 2px solid red;\r\n    overflow-x: hidden;\r\n    display: inline-block;\r\n`\r\nconst Title = styled.div`\r\n    width: 400px;\r\n    height : 20px;\r\n    border: 1px solid blue;\r\n`\r\n\r\nconst Content = styled.div`\r\n    width : 400px;\r\n    height: 500px;\r\n    border: 1px solid green;\r\n`\r\n\r\n\r\n\r\nfunction PostedPage() {\r\n    const getLocation = useLocation()\r\n    const [postId, setPostId] = useState()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [content, setContent] = useState(\"\")\r\n    \r\n    console.log(\"check\",getLocation.state.boardId)\r\n    console.log(\"postid\",postId)\r\n\r\n   //게시글 아이디를 state저장\r\n    useEffect(() => {\r\n        setPostId(getLocation.state.boardId)\r\n    }, [postId])\r\n    \r\n    //저장된 게시글아이디를 바탕으로 백엔드에 요청\r\n    useEffect(() => {\r\n        getData()\r\n    }, [postId])\r\n\r\n    //토큰 실어서 백엔드에 요청 보냄\r\n    const getData = () => {\r\n        const URL = `http://localhost:8080/PLEA-STREET/board/find?postId=${postId}`;\r\n        axios.get(URL,  \r\n            {\r\n                headers: {\r\n                        \"Content-Type\":`application/json`,\r\n                        Authorization: \"Bearer \"+ localStorage.getItem(\"accessToken\"),\r\n                        withCredentials:true\r\n                        },\r\n            }).then(res => setting(res))\r\n        }\r\n\r\n    //갖고온 데이터를 세팅\r\n    const setting= (res) => {\r\n        setTitle(res.data.title)\r\n        setContent(res.data.content)\r\n    }\r\n\r\n    console.log(title, content)\r\n    \r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n        <MenuBar/>\r\n            <Top>\r\n                {title}\r\n            </Top>\r\n            <Body>\r\n                {content}\r\n            </Body>\r\n     \r\n    </Wrapper>\r\n    )\r\n}\r\nexport default PostedPage\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Icon, Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Menubar from './Menubar'\r\n\r\nconst Wrap = styled.div`\r\n    max-width: 640px;\r\n    margin: 0px auto;\r\n    padding-bottom: 0px;\r\n`\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 87vh;\r\n`\r\nconst Middle = styled.div`\r\n  text-align: center;\r\n  height: 20%;\r\n`\r\n\r\nfunction TestStartPage() {\r\n  return (\r\n    <Wrap>\r\n      <Menubar />\r\n      <Content>\r\n        <Icon name='question' size='massive' style={{ width: '50%', height: '30%' }} />\r\n        <Middle>\r\n          <h2>당신은 쓰레기를 어디에 버리시나요?</h2>\r\n          <p>10개의 질문으로</p>\r\n          <p>환경캐릭터를 알려드려요!</p>\r\n        </Middle>\r\n        <Link to='/PLEA-STREET/options'>\r\n          <Button size='big'>검사 시작!</Button>\r\n        </Link>\r\n        \r\n      </Content>\r\n    </Wrap>\r\n\r\n  )\r\n}\r\n\r\nexport default TestStartPage\r\n\r\n// import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import styles from '../home/home.module.css';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import {\r\n//     faCopy,\r\n//     faArrowAltCircleRight,\r\n// } from '@fortawesome/free-solid-svg-icons';\r\n// import { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n// const Home = () => {\r\n//     const url = window.location.href; // url 복사\r\n//     const copyAlert = () => {\r\n//         alert('링크 생성!');\r\n//     };\r\n//     return (\r\n//         <>\r\n//             <div className={styles.wrapper}>\r\n//                 <div className={styles.container}>\r\n//                     <div className={styles.top}>\r\n//                         <img\r\n//                             className={styles.logo}\r\n//                             src=\"img/FelizLogo.png\"\r\n//                             alt=\"로고\"\r\n//                         />\r\n//                     </div>\r\n//                     <div className={styles.middle}>\r\n//                         <h2 className={styles.header}>올해는 어디로 갈까?</h2>\r\n//                         <p>총 16개의 유형의 MBTI성향을 기반으로</p>\r\n//                         <p>가장 잘 어울리는 여행지를 추천해드려요.</p>\r\n//                     </div>\r\n//                     <div className={styles.bottom}>\r\n//                         <Link to=\"/tripMBTI\" className={styles.start__button}>\r\n//                             테스트 하기\r\n//                             <FontAwesomeIcon\r\n//                                 icon={faArrowAltCircleRight}\r\n//                                 className={styles.icon}\r\n//                             />\r\n//                         </Link>\r\n//                         <CopyToClipboard text={url}>\r\n//                             <button\r\n//                                 className={styles.start__button}\r\n//                                 onClick={copyAlert}\r\n//                             >\r\n//                                 링크복사\r\n//                                 <FontAwesomeIcon\r\n//                                     icon={faCopy}\r\n//                                     className={styles.icon}\r\n//                                 />\r\n//                             </button>\r\n//                         </CopyToClipboard>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default Home;\r\n","import React, { createRef, useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Questions from '../util/question.json'\r\nimport styled from 'styled-components';\r\nimport Menubar from './Menubar';\r\nimport { Button, Loader } from 'semantic-ui-react';\r\n\r\n\r\nconst Wrap1 = styled.div`\r\n  width: 640px;\r\n  margin: 0px auto;\r\n  padding-bottom: 0px; \r\n`\r\nconst Wrap = styled.div`\r\n  max-width: 100%;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n`\r\nconst Content = styled.div`\r\n\r\n`\r\nconst Slider = styled.div`\r\n  width: 1000vw;\r\n`\r\nconst Detail = styled.div`\r\n  margin-top: 15vh;\r\n  width: 100vw;\r\n  float: left;\r\n  background-color: skyblue;\r\n`\r\nconst Top = styled.div`\r\n  display: inline-flex;\r\n  width: 640px;\r\n  height: 20vh;\r\n  padding: 2rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  @media ${props => props.theme.mobile} {\r\n    width: 100vw;\r\n  }\r\n`\r\nconst Counter = styled.div`\r\n  font-size: 2rem;\r\n  font-weight: bold;\r\n`\r\nconst BtnBox = styled.div`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 640px;\r\n  height: 45vh;\r\n  margin: 0 auto;\r\n  @media ${props => props.theme.mobile} {\r\n    width: 100vw;\r\n  }\r\n`\r\nconst LoadingContainer = styled.div`\r\n  max-width: 640px;\r\n  margin: 0px auto;\r\n  /* padding-bottom: 0px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column; */\r\n`\r\n\r\n\r\nconst TestOptions = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [num, setNum] = useState(0);\r\n    const [currentSlide, setCurrentSlide] = useState(1);\r\n    const slideRef = createRef(null);\r\n    const TOTAL_SLIDES = 10;\r\n    const history = useHistory();\r\n    const [mbti, setMbti] = useState([]);\r\n\r\n    const nextSlideFir = () => {\r\n        setMbti(mbti + Questions[num].answers[0].type);\r\n        setNum(num + 1);\r\n        setCurrentSlide(currentSlide + 1);\r\n        slideRef.current.style.transform += 'translateX(-100vw)';\r\n    };\r\n    const nextSlideSec = () => {\r\n        setMbti(mbti + Questions[num].answers[1].type);\r\n        setNum(num + 1);\r\n        setCurrentSlide(currentSlide + 1);\r\n        slideRef.current.style.transform += 'translateX(-100vw)';\r\n    };\r\n\r\n    const mbtiChecker = () => {\r\n        setLoading(true);\r\n        let map = {};\r\n        let result = [];\r\n        for (let i = 0; i < mbti.length; i++) {\r\n            if (mbti[i] in map) {\r\n                map[mbti[i]] += 1;\r\n            } else {\r\n                map[mbti[i]] = 1;\r\n            }\r\n        }\r\n        for (let count in map) {\r\n            if (map[count] >= 2) {\r\n                result.push(count);\r\n            }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            const examResult = result.join('');\r\n            history.push(`/PLEA-STREET/result/${examResult}`);\r\n        }, 3000);\r\n    };\r\n    useEffect(() => {\r\n        currentSlide > TOTAL_SLIDES && mbtiChecker();\r\n    }, [currentSlide]);\r\n\r\n    return (\r\n      <>\r\n      <Menubar />\r\n      <Wrap1>\r\n        \r\n          <Wrap>\r\n            \r\n            옵션페이지!\r\n            <Content>\r\n              {!loading && (\r\n                          <Slider ref={slideRef}>\r\n                            {Questions.map((item) => {\r\n                                    return (\r\n                                          <Detail key={item.id}>\r\n                                            <Top>\r\n                                              <Counter>\r\n                                                <span>\r\n                                                  {currentSlide}\r\n                                                </span>\r\n                                                <span>\r\n                                                  /{TOTAL_SLIDES}\r\n                                                </span>\r\n                                              </Counter>\r\n                                              <h1>\r\n                                                {item.question}\r\n                                              </h1>\r\n                                            </Top>\r\n                                            <BtnBox>\r\n                                              <Button onClick={nextSlideFir}>\r\n                                                {item.answers[0].content}\r\n                                              </Button>\r\n                                              <Button onClick={nextSlideSec}>\r\n                                                {item.answers[1].content}\r\n                                              </Button>\r\n                                            </BtnBox>\r\n                                          </Detail>\r\n                                    );\r\n                                })}\r\n                          </Slider>\r\n              )}\r\n              {loading && (\r\n                  <LoadingContainer>\r\n                    <div>image</div>\r\n                    <h2>환경 점수 계산하는 중...</h2>\r\n                    <Loader active inline  />\r\n                  </LoadingContainer>\r\n              )}\r\n            </Content>\r\n          </Wrap>\r\n          </Wrap1>\r\n          </>\r\n    );\r\n};\r\n\r\nexport default TestOptions;\r\n","import { Link } from 'react-router-dom';\r\nimport Countries from '../util/result.json';\r\n// import { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport styled from 'styled-components';\r\nimport Menubar from './Menubar';\r\n// import KakaoBtn from '../shareSNS/kakaoShareButton';\r\n// import FacebookBtn from '../shareSNS/facebookShareButton';\r\n// import TwitterBtn from '../shareSNS/twitterShareButton';\r\n\r\nconst Wrap = styled.div`\r\n  max-width: 640px;\r\n  margin: 0px auto;\r\n  padding-bottom: 0px;\r\n`\r\nconst Content = styled.div`\r\n\r\n`\r\nconst Header = styled.div`\r\n\r\n`\r\nconst ResultType = styled.div`\r\n\r\n`\r\nconst ResultTitle = styled.div`\r\n\r\n`\r\n\r\nconst TestResult = ({ match }) => {\r\n    const url = window.location.href;\r\n    const { countryName } = match.params;\r\n    const nation = Countries[countryName];\r\n\r\n    if (!nation) {\r\n        return (\r\n                <Wrap>\r\n                  <Menubar />\r\n                존재하지 않는 결과입니다.\r\n                </Wrap>\r\n        );\r\n    }\r\n    const copyAlert = () => {\r\n        alert('링크 복사완료!');\r\n    };\r\n    return (\r\n        <>\r\n            <Menubar />\r\n            {/* <div className={styles.wrapper} key={nation.id}> */}\r\n            <Wrap key={nation.id}>\r\n              <Content>\r\n                <Header>\r\n                  <Link to='/'>\r\n                    <div>아이콘</div>\r\n                  </Link>\r\n                </Header>\r\n                <div>이미지 자리{nation.img}</div>\r\n                <ResultType>\r\n                  <h1>{nation.subject}</h1>\r\n                  <br />\r\n                </ResultType>\r\n                <ResultTitle>\r\n                  <h2>{nation.id}의 여행 특징은?</h2>\r\n                </ResultTitle>\r\n              </Content>\r\n            </Wrap>\r\n                {/* <div className={styles.container}>\r\n                    <div className={styles.header}>\r\n                        <>\r\n                            <Link to=\"/\">\r\n                                <FontAwesomeIcon\r\n                                    icon={faEarlybirds}\r\n                                    className={styles.birds}\r\n                                />\r\n                            </Link>\r\n                        </>\r\n                    </div>\r\n                    <img\r\n                        src={nation.img}\r\n                        alt=\"img\"\r\n                        className={styles.main__img}\r\n                    />\r\n                    <div className={styles.result__type}>\r\n                        <h1 className={styles.result__city}>\r\n                            {nation.subject}\r\n                        </h1>\r\n                        <br />\r\n                    </div>\r\n                    <div className={styles.reust__title}>\r\n                        <h2>{nation.id}의 여행특징은?</h2>\r\n                    </div>\r\n                    <ul className={styles.result__style__wrapper}>\r\n                        {nation.description.map((item) => {\r\n                            return (\r\n                                <li\r\n                                    className={styles.result__style__detail}\r\n                                    key={item.des}\r\n                                >\r\n                                    {item.des}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                    <div className={styles.result__advice__box}>\r\n                        <div className={styles.result__advice}>\r\n                            <a href={`${/result/}${nation.duo[0].subhead}`}>\r\n                                <img\r\n                                    src={nation.duo[0].img}\r\n                                    alt=\"mbti캐릭터\"\r\n                                    Link=\"/\"\r\n                                />\r\n                            </a>\r\n                            <div>\r\n                                <h4>함께하면 좋아요!</h4>\r\n                                <p className={styles.advice__strong}>\r\n                                    찰떡궁합 그 자체 {nation.duo[0].subhead}\r\n                                </p>\r\n                                <p>{nation.duo[0].des}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.result__advice}>\r\n                            <Link\r\n                                to={`${/result/}${nation.counter[0].subhead}`}\r\n                            >\r\n                                <img\r\n                                    src={nation.counter[0].img}\r\n                                    alt=\"mbti캐릭터\"\r\n                                />\r\n                            </Link>\r\n\r\n                            <div>\r\n                                <h4>가능하면 피하는게 좋겠어요!</h4>\r\n                                <p className={styles.advice__strong}>\r\n                                    도망가세요 {nation.counter[0].subhead}\r\n                                </p>\r\n                                <p>{nation.counter[0].des}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.shareBox}>\r\n                        <KakaoBtn />\r\n                        <FacebookBtn />\r\n                        <TwitterBtn />\r\n                    </div>\r\n                    <div className={styles.button__box}>\r\n                        <Link to=\"/\" className={styles.button}>\r\n                            다시하기\r\n                            <FontAwesomeIcon\r\n                                icon={faSignOutAlt}\r\n                                className={styles.icon}\r\n                            />\r\n                        </Link>\r\n                        <CopyToClipboard text={url}>\r\n                            <button\r\n                                className={styles.copy__button}\r\n                                onClick={copyAlert}\r\n                            >\r\n                                링크복사\r\n                                <FontAwesomeIcon\r\n                                    icon={faCopy}\r\n                                    className={styles.icon}\r\n                                />\r\n                            </button>\r\n                        </CopyToClipboard>\r\n                    </div>\r\n                </div>\r\n            </div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TestResult;\r\n","import React from 'react'\r\nimport { HelmetProvider } from \"react-helmet-async\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport LandingPage from \"./page/Landing.js\"\r\nimport ShowPage from \"./page/ShowPage.js\"\r\nimport Community from './page/CommunityPage.js';\r\nimport SignUpPage from './page/SignUpPage.js';\r\nimport SignInPage from './page/SignInPage.js'\r\nimport PostWrite from './page/PostWrite.js';\r\nimport PostedPage from './page/PostedPage.js'\r\nimport TestStartPage from './component/TestStartPage.js';\r\nimport TestOptions from './component/TestOptions.js'\r\nimport TestResult from './component/TestResult.js';\r\n\r\nimport './App.css'\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <HelmetProvider>\r\n      <BrowserRouter>\r\n          <Switch>\r\n            {/* 랜딩페이지 */}\r\n            <Route exact path = \"/PLEA-STREET/\" component={LandingPage}/>\r\n            {/* 지도검색 페이지 */}\r\n            <Route exact path = \"/PLEA-STREET/mapSearch\" component={ShowPage}/>\r\n            {/* 커뮤니티페이지 */}\r\n            <Route exact path = \"/PLEA-STREET/community\" component={Community}/>\r\n            <Route exact path = \"/PLEA-STREET/signUp\" component={SignUpPage}/>\r\n            <Route exact path = \"/PLEA-STREET/signIn\" component={SignInPage}/>\r\n            <Route exact path = \"/PLEA-STREET/postwrite\" component={PostWrite}/>\r\n            <Route exact path = \"/PLEA-STREET/posted\" component={PostedPage}/>\r\n            {/* 테스트페이지 */}\r\n            <Route exact path = \"/PLEA-STREET/cleanTest\" component={TestStartPage}/>\r\n            <Route exact path = \"/PLEA-STREET/options\" component={TestOptions}/>\r\n            <Route exact path = \"/PLEA-STREET/result/:countryName\" component={TestResult}/>\r\n          </Switch>\r\n      </BrowserRouter>\r\n    </HelmetProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const size = {\r\n  mobile: '360px',\r\n  tablet: '900px',\r\n  laptop: '1200px',\r\n  desktop: '1800px',\r\n}\r\n\r\nconst theme = {\r\n  mainColor: '#0a4297',\r\n  mobile: `(max-width: ${size.mobile})`,\r\n  tablet: `(max-width: ${size.tablet})`,\r\n  laptop: `(max-width: ${size.laptop})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n}\r\n\r\nexport default theme","import { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;  \r\n  }\r\n\r\n  body {\r\n    box-sizing: border-box;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter, BrowserRouter as Router } from \"react-router-dom\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { ThemeProvider } from 'styled-components'\r\nimport theme from './styles/theme'\r\nimport GlobalStyle from './styles/global'\r\n\r\n// <React.StrictMode>\r\n//  </React.StrictMode>,\r\nReactDOM.render(\r\n    \r\n      <ThemeProvider theme={theme}>\r\n        <App />\r\n        <GlobalStyle />\r\n      </ThemeProvider>\r\n, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}