{"version":3,"sources":["component/Img_container.js","component/B_GetCurrentNext.js","page/Landing.js","component/Map.js","component/Contanier.js","component/D_filter.js","component/Comment.js","component/Loading.js","component/EndMsg.js","component/B_list.js","page/ShowPage.js","page/TestPage.js","page/TestPage2.js","App.js","index.js"],"names":["Img","styled","div","ImgStyle1","img","ImgStyle2","ControlMap","MainImage","src","alt","Button","button","Wrap","ImgCon","Header","span","Landing","props","history","useHistory","useState","Clatitude","setCLatitude","Clongitude","setCLongitude","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","log","onClick","push","pathname","state","alert","showMap","Container","D_filter","setting","gu","setGu","currentValue","Dropdown","basic","color","options","text","value","key","placeholder","selection","fluid","onChange","e","name","target","textContent","Comment","item","id","email","body","List","animated","verticalAlign","Item","Image","avatar","Content","Description","Loading","Loader","active","inline","EndMsg","style","textAlign","B_list","prevGu","items","setItems","hasMore","setHasMore","page","setPage","a","fetch","res","json","data","getComments","fetchComments","fetchData","commentsFormServer","length","dataLength","next","loader","endMessage","map","Menu_wrapper","Div_area","ShowPage","kakao","window","getLocation","useLocation","location","setLocation","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","Map","place","bounds","LatLngBounds","current","i","Marker","parseFloat","위도","경도","extend","undefined","services","Geocoder","addressSearch","result","status","Status","OK","y","x","marker","InfoWindow","content","open","setCenter","TestPage2","App","exact","path","component","LandingPage","TestPage","ReactDOM","render"],"mappings":"2MAIMA,EAAMC,IAAOC,IAAV,2IAQHC,EAAYF,IAAOG,IAAV,8HASTC,EAAYJ,IAAOG,IAAV,kJAUTE,EAAaL,IAAOC,IAAV,2PAONG,EAGAF,GAmBKI,I,QAAAA,EAbf,WAEI,OACQ,cAACP,EAAD,UACI,eAACM,EAAD,WACI,cAACH,EAAD,CAAWK,IAAM,YAAYC,IAAK,cAClC,cAACJ,EAAD,CAAWG,IAAM,YAAYC,IAAK,mBCxCvCC,EAVAT,IAAOU,OAAV,uHCKNC,EAAOX,IAAOC,IAAV,2FAMJW,EAASZ,IAAOC,IAAV,wFAMNY,EAASb,IAAOc,KAAV,kGAiDGC,I,IAAAA,EAzCf,SAAiBC,GACb,IAAMC,EAAUC,cADI,EAEcC,qBAFd,mBAEbC,EAFa,KAEFC,EAFE,OAGgBF,qBAHhB,mBAGbG,EAHa,KAGDC,EAHC,KA6BpB,OAjBAC,qBAAU,WANNC,UAAUC,YAAYC,oBAAmB,SAACC,GACtCP,EAAaO,EAASC,OAAOC,UAC7BP,EAAcK,EAASC,OAAOE,gBAIX,CAACT,IAC5BU,QAAQC,IAAIb,EAAWE,GAiBnB,eAACX,EAAD,WACE,cAACE,EAAD,8GACE,cAACD,EAAD,UACI,cAAC,EAAD,CAAKsB,QAlBG,SAAClB,GACbM,GAAa,GAAKF,GAAY,EAC9BH,EAAQkB,KAAK,CACTC,SAAU,mBACVC,MAAO,CACHP,SAAUV,EACVW,UAAYT,KAIpBgB,MAAM,2KAQF,SACI,cAAC,EAAD,YCrDLC,EAPCvC,IAAOC,IAAV,kHCMEuC,EANGxC,IAAOC,IAAV,kG,SCoDAwC,MAnDf,YAA8B,IAAXC,EAAU,EAAVA,QAAU,EACTvB,mBAAS,IADA,mBACtBwB,EADsB,KAClBC,EADkB,KAmCzBZ,QAAQC,IAAI,YAAYU,GAnCC,IAqClBE,EAAgBF,EAAhBE,aAEP,OACI,cAACC,EAAA,EAAD,CAAUC,OAAK,EAACC,MAAM,OACtBC,QAvCI,CACR,CAACC,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,GAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,GAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,GAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,GAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,GAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,GAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,GAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,GAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,GAClC,CAACF,KAAM,2BAAQC,MAAO,2BAAQC,IAAM,IACpC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,IAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,IAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,IAClC,CAACF,KAAM,2BAAQC,MAAO,2BAAQC,IAAM,IACpC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,IAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,IAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,IAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,IAClC,CAACF,KAAM,2BAAQC,MAAO,2BAAQC,IAAM,IACpC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,IAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,IAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,IAClC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,IAClC,CAACF,KAAM,eAAMC,MAAO,eAAMC,IAAM,IAChC,CAACF,KAAM,qBAAOC,MAAO,qBAAOC,IAAM,KAe9BC,YAAY,YACZC,WAAS,EACTC,OAAK,EACLJ,MAAON,EACPW,SAhBiB,SAACC,EAAD,GAAgB,EAAXN,MAAY,IAC9BO,EAAOD,EAAEE,OAAOC,YACpBhB,EAAMc,GACNhB,EAAQgB,O,8DCdDG,MAnBf,YAA+C,IAAD,IAA5BC,KAAQC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,KACnC,OACE,cAACC,EAAA,EAAD,CAAMC,UAAQ,EAACC,cAAc,SAA7B,SACE,eAACF,EAAA,EAAKG,KAAN,WACA,cAACC,EAAA,EAAD,CAAOC,QAAM,EAAChE,IAAI,6BAChB,eAAC2D,EAAA,EAAKM,QAAN,WACE,eAACN,EAAA,EAAKrD,OAAN,mBAAmBkD,KACnB,eAACG,EAAA,EAAKO,YAAN,sBACWT,KAEX,eAACE,EAAA,EAAKO,YAAN,qBACUR,c,SCNLS,MANf,WACE,OACE,cAACC,EAAA,EAAD,CAAQC,QAAM,EAACC,OAAO,WAAtB,sBCIWC,MARf,WACE,OACE,mBAAGC,MAAO,CAAEC,UAAW,UAAvB,SACE,+GCiESC,I,ICpCXC,EDoCWD,EA7Df,WAAmB,IAAD,EAEU9D,mBAAS,IAFnB,mBAETgE,EAFS,KAEFC,EAFE,OAIcjE,oBAAS,GAJvB,mBAITkE,EAJS,KAIAC,EAJA,OAMQnE,mBAAS,GANjB,mBAMToE,EANS,KAMHC,EANG,KAQhBhE,qBAAU,YACS,uCAAG,8BAAAiE,EAAA,sEAEAC,MAEhB,mEAJgB,cAEZC,EAFY,gBAMCA,EAAIC,OANL,OAMZC,EANY,OAOlBT,EAASS,GAPS,2CAAH,qDAUjBC,KACC,IAEH9D,QAAQC,IAAIkD,GAEZ,IAAMY,EAAa,uCAAG,8BAAAN,EAAA,sEACFC,MAAK,8DAEkCH,EAFlC,eADH,cACdI,EADc,gBAKDA,EAAIC,OALH,cAKdC,EALc,yBAMbA,GANa,2CAAH,qDASbG,EAAS,uCAAG,4BAAAP,EAAA,sEACiBM,IADjB,OACVE,EADU,OAGhBb,EAAS,GAAD,mBAAKD,GAAL,YAAec,MAEW,IAA9BA,EAAmBC,QAAgBD,EAAmBC,OAAS,KACjEZ,GAAW,GAGbE,EAAQD,EAAO,GATC,2CAAH,qDAaf,OACE,cAAC,IAAD,CACEY,WAAYhB,EAAMe,OAClBE,KAAMJ,EACNX,QAASA,EACTgB,OAAQ,cAAC,EAAD,IACRC,WAAY,cAAC,EAAD,IALd,SAOCnB,EAAMoB,KAAI,SAACzC,GACV,OAAO,cAAC,EAAD,CAAuBA,KAAMA,GAAfA,EAAKC,U,iBC9C1ByC,GAAexG,IAAOC,IAAV,+LASZwG,GAAWzG,IAAOC,IAAV,2IAyKCyG,I,SAAAA,GAhKf,WAAqB,IAEZC,EAASC,OAATD,MACCE,EAAcC,cAHJ,EAIc3F,mBAAS,CACnCW,SAAW,EACXC,UAAY,IANA,mBAIXgF,EAJW,KAIDC,EAJC,OAUG7F,mBAAS,IAVZ,mBAUVwB,EAVU,KAUNC,EAVM,KAsIhB,OA3HAZ,QAAQC,IAAI,qBAAOU,GAIvBnB,qBAAU,WACNwF,EAAYH,EAAYxE,OAGxB,IAAI4E,EAAeC,SAASC,eAAe,OAC3CC,EAAY,CACRC,OAAQ,IAAIV,EAAMW,KAAKC,OAAOR,EAASjF,SAAUiF,EAAShF,WAC1DyF,MAAO,GAGPjB,EAAM,IAAII,EAAMW,KAAKG,IAAIR,EAAcG,GAG3Cb,EAAM,IAAII,EAAMW,KAAKG,IAAIR,EAAcG,GAuBvC,IArBA,IAIuBM,EAJnBC,EAAS,IAAIhB,EAAMW,KAAKM,aActBC,EAAU,IAAIlB,EAAMW,KAAKC,OAAOV,EAAYxE,MAAMP,SAAU+E,EAAYxE,MAAMN,WAO5E+F,GANY,IAAInB,EAAMW,KAAKS,OAAO,CACtCxB,IAAKA,EACL3E,SAAUiG,IAIF,GAAGC,EAAIjC,EAAKK,OAAQ4B,IAjBTJ,EAkBL7B,EAAKiC,GAjBN,IAAInB,EAAMW,KAAKS,OAAO,CAC3BxB,IAAKA,EACL3E,SAAU,IAAI+E,EAAMW,KAAKC,OAAOS,WAAWN,EAAMO,cAAKD,WAAWN,EAAMQ,iBAgB/EP,EAAOQ,OAAO,IAAIxB,EAAMW,KAAKC,OAAO1B,EAAKiC,GAAGG,aAAIpC,EAAKiC,GAAGI,eAKxDhD,IAAWvC,QAAiByF,IAAXlD,IAEN,IAAIyB,EAAMW,KAAKe,SAASC,UAE9BC,cAAT,UAA0B5F,IAAM,SAAS6F,EAAQC,GAE7C,GAAIA,IAAW9B,EAAMW,KAAKe,SAASK,OAAOC,GAAI,CAC1C,IAAI9G,EAAS,IAAI8E,EAAMW,KAAKC,OAAOiB,EAAO,GAAGI,EAAGJ,EAAO,GAAGK,GAEtDC,EAAS,IAAInC,EAAMW,KAAKS,OAAO,CAC/BxB,IAAKA,EACL3E,SAAUC,IAGG,IAAI8E,EAAMW,KAAKyB,WAAW,CACvCC,QAAQ,6DAAD,OAA+DrG,EAA/D,YAEAsG,KAAK1C,EAAKuC,GACrBvC,EAAI2C,UAAUrH,OAItBqD,EAASvC,IAEX,CAACoE,EAAUpE,IAqDL,eAAC,EAAD,WACI,eAAC6D,GAAD,WACI,cAACC,GAAD,UACI,cAAC,IAAD,CAAQ1D,OAAK,EAACC,MAAM,OAAOd,QAzBxB,WACdT,UAAUC,YAAYC,oBAAmB,SAACC,GACvCoF,EAAYpF,EAASC,OAAOC,SAAUF,EAASC,OAAOE,cAE1DC,QAAQC,IAAI,YAqBA,SACA,4EAIJ,cAACwE,GAAD,UACI,cAAC,EAAD,CAAW/D,QArBV,SAACmD,GACVlD,IAAOkD,GACPjD,EAAMiD,GAEV7D,QAAQC,IAAI,WAAW4D,QAoBnB,cAACY,GAAD,IAEI,cAACA,GAAD,UACI,cAAC,EAAD,SAIR,cAAC,EAAD,CAAc1C,GAAK,YCpLzBpD,GAAOX,IAAOC,IAAV,6FAMJW,GAASZ,IAAOC,IAAV,0FAMNY,GAASb,IAAOc,KAAV,oGAiDGC,OAzCf,SAAiBC,GACb,IAAMC,EAAUC,cADI,EAEcC,qBAFd,mBAEbC,EAFa,KAEFC,EAFE,OAGgBF,qBAHhB,mBAGbG,EAHa,KAGDC,EAHC,KA6BpB,OAjBAC,qBAAU,WANNC,UAAUC,YAAYC,oBAAmB,SAACC,GACtCP,EAAaO,EAASC,OAAOC,UAC7BP,EAAcK,EAASC,OAAOE,gBAIX,CAACT,IAC5BU,QAAQC,IAAIb,EAAWE,GAiBnB,eAAC,GAAD,WACE,cAAC,GAAD,8GACE,cAAC,GAAD,UACI,cAAC,EAAD,CAAKY,QAlBG,SAAClB,GACbM,GAAa,GAAKF,GAAY,EAC9BH,EAAQkB,KAAK,CACTC,SAAU,mBACVC,MAAO,CACHP,SAAUV,EACVW,UAAYT,KAIpBgB,MAAM,2KAQF,SACI,cAAC,EAAD,YCnDL6G,OATf,WACE,OACE,2FAEE,cAAC,EAAD,QCsBSC,OAjBf,WAGE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACI,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,gBAAgBC,UAAWC,IAC/C,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAO,mBAAmBC,UAAW7C,KAClD,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAO,oBAAoBC,UAAWE,KACnD,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAO,qBAAqBC,UAAWJ,a,OCbhEO,IAASC,OAEF,cAAC,GAAD,IAELzC,SAASC,eAAe,U","file":"static/js/main.c77f4bc5.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\n\nconst Img = styled.div`\n    width : 100%;\n    height : 70%;\n    padding-top:10vh;\n    text-align: center;\n    position: relative;\n`\n\nconst ImgStyle1 = styled.img`\n    width : 30vh;\n    height : 40vh;\n\n    position : absolute;\n    top: 0px;\n    left: 0px;\n`\n\nconst ImgStyle2 = styled.img`\n    width : 30vh;\n    height : 40vh;\n    position : absolute;\n    display: none;\n\n    top: 0px;\n    left: 0px;\n`\n\nconst ControlMap = styled.div`\n    width : 10%;\n    height : 100%;\n\n    position: relative;\n    margin-left : 50vh;\n    &:hover  {\n        ${ImgStyle2} {\n            display : block;\n        }\n        ${ImgStyle1} {\n            display : none;\n        }\n    }\n`\n\nfunction MainImage() {\n  \n    return (\n            <Img>\n                <ControlMap>\n                    <ImgStyle1 src = 'img/2.png' alt =\"can_close\"/>\n                    <ImgStyle2 src = 'img/1.png' alt =\"can_open\"/> \n                </ControlMap>\n            </Img>\n          \n    )\n}\n\nexport default MainImage\n","import styled from \"styled-components\";\n\n\nconst Button = styled.button`\n    backGround: white;\n    border : none;\n    &:hover {\n      cursor : pointer;\n    }\n`\n\n\n\nexport default Button\n\n","import React, {useState,useEffect} from 'react'\nimport MainImage from '../component/Img_container'\nimport Btn from \"../component/B_GetCurrentNext\"\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router'\n\n\n\nconst Wrap = styled.div`\n    width : 100%;\n    height : 100%;\n    margin-top : 10vh;\n`\n\nconst ImgCon = styled.div`\n    width: 100%;\n    height : 100%;\n    text-align:left;\n`\n\nconst Header = styled.span`\n    margin-left: 35vh;\n    text-align: right;\n    font-size: 50px;\n`\n\n\n\nfunction Landing(props) {\n    const history = useHistory();\n    const [Clatitude, setCLatitude] = useState()\n    const [Clongitude, setCLongitude] = useState()\n\n    const getCheck = () => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            setCLatitude(position.coords.latitude);\n            setCLongitude(position.coords.longitude);\n        })\n    }\n\n    useEffect(()=>{getCheck()},[Clongitude])\n    console.log(Clatitude, Clongitude)\n  \n    const getLocation = (props) => {\n        if (Clongitude >=1 && Clatitude >=1) {\n            history.push({\n                pathname: \"/PLEA-STREET/map\",\n                state: {\n                    latitude: Clatitude,\n                    longitude : Clongitude\n                }\n            })\n        }else{\n            alert(\"페이지 새로 고침 후 사용자 정보 위치 제공권한에 동의 해주세요!\")\n        }        \n    }\n\n    return (\n        <Wrap>\n          <Header> 가장 가까운 쓰레기통은 어디일까요?</Header>\n            <ImgCon>\n                <Btn onClick = {getLocation}>\n                    <MainImage/>\n                </Btn>\n            </ImgCon>\n        </Wrap>\n    )\n}\n\nexport default Landing\n","import styled from \"styled-components\"\n\nconst showMap = styled.div`\n    width : 100%;\n    height : 90vh;\n    border : 1px solid blue;\n    z-index: 3;\n`\n\nexport default showMap","import styled from \"styled-components\"\n\nconst Container = styled.div`\n    width : 100%;\n    height : 90vh;\n    border : 1px solid black;\n`\n\nexport default Container","import React, { useState} from 'react'\nimport { Dropdown } from 'semantic-ui-react'\n\nfunction D_filter({setting}) {\nconst [gu, setGu] = useState(\"\")\nconst gus = [\n    {text: \"강동구\", value: \"강동구\", key : 1}, \n    {text: \"강남구\", value: \"강남구\", key : 2},\n    {text: \"강서구\", value: \"강서구\", key : 3},\n    {text: \"강북구\", value: \"강북구\", key : 4},\n    {text: \"관악구\", value: \"관악구\", key : 5},\n    {text: \"광진구\", value: \"광진구\", key : 6},\n    {text: \"구로구\", value: \"구로구\", key : 7},\n    {text: \"금천구\", value: \"금천구\", key : 8},\n    {text: \"노원구\", value: \"노원구\", key : 9},\n    {text: \"동대문구\", value: \"동대문구\", key : 10},\n    {text: \"도봉구\", value: \"도봉구\", key : 11},\n    {text: \"동작구\", value: \"동작구\", key : 12},\n    {text: \"마포구\", value: \"마포구\", key : 13},\n    {text: \"서대문구\", value: \"서대문구\", key : 14},\n    {text: \"성동구\", value: \"성동구\", key : 15},\n    {text: \"성북구\", value: \"성북구\", key : 16},\n    {text: \"서초구\", value: \"서초구\", key : 17},\n    {text: \"송파구\", value: \"송파구\", key : 18},\n    {text: \"영등포구\", value: \"영등포구\", key : 19},\n    {text: \"용산구\", value: \"용산구\", key : 20},\n    {text: \"양천구\", value: \"양천구\", key : 21},\n    {text: \"은평구\", value: \"은평구\", key : 22},\n    {text: \"종로구\", value: \"종로구\", key : 23},\n    {text: \"종구\", value: \"중구\", key : 24},\n    {text: \"중랑구\", value: \"중랑구\", key : 25}\n    ]\n\n    const handleChange = (e, {value}) => {\n        let name = e.target.textContent;\n        setGu(name)\n        setting(name)\n    }\n    console.log(\"indfilter\",gu)\n\n    const {currentValue} = gu\n\n    return (\n        <Dropdown basic color='blue'\n        options={gus}\n        placeholder='Choose Gu'\n        selection\n        fluid\n        value={currentValue}\n        onChange={handleChange}\n      />\n    )\n}\n\nexport default D_filter\n","import React from 'react'\nimport { Image, List } from 'semantic-ui-react'\n\nfunction Comment({item: { id, email, body }}) {\n  return (\n    <List animated verticalAlign='middle'>\n      <List.Item>\n      <Image avatar src='../images/trash_icon.png' />\n        <List.Content>\n          <List.Header>ID : {id}</List.Header>\n          <List.Description>\n            EMAIL : {email}\n          </List.Description>\n          <List.Description>\n            body : {body}\n          </List.Description>\n        </List.Content>\n      </List.Item>\n    </List>\n  )\n}\n\nexport default Comment\n","import { Loader } from 'semantic-ui-react'\n\nfunction Loading() {\n  return (\n    <Loader active inline='centered'>Loading</Loader>\n  )\n}\n\nexport default Loading\n","function EndMsg() {\n  return (\n    <p style={{ textAlign: 'center' }}>\n      <b>모든 정보가 출력되었습니다!</b>\n    </p>\n  )\n}\n\nexport default EndMsg\n","import React, { useEffect, useState } from 'react'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport Comment from './Comment'\nimport Loading from './Loading'\nimport EndMsg from './EndMsg'\n\n\nfunction B_list() {\n\n  const [items, setItems] = useState([])\n\n  const [hasMore, setHasMore] = useState(true)\n\n  const [page, setPage] = useState(2)\n\n  useEffect(() => {\n    const getComments = async () => {\n\n      const res = await fetch(\n        // 'http://localhost:3004/comments?_page=1&_limit=20'\n        'https://jsonplaceholder.typicode.com/comments?_page=1&_limit=20'\n      )\n      const data = await res.json()\n      setItems(data)\n    }\n\n    getComments()\n  }, [])\n\n  console.log(items)\n\n  const fetchComments = async () => {\n    const res = await fetch(\n      // `http://localhost:3004/comments?_page=${page}&_limit=20`\n      `https://jsonplaceholder.typicode.com/comments?_page=${page}&_limit=20`\n    )\n    const data = await res.json()\n    return data\n  }\n\n  const fetchData = async () => {\n    const commentsFormServer = await fetchComments()\n\n    setItems([...items, ...commentsFormServer])\n\n    if (commentsFormServer.length === 0 || commentsFormServer.length < 20) {\n      setHasMore(false)\n    }\n\n    setPage(page + 1)\n\n  }\n\n  return (\n    <InfiniteScroll\n      dataLength={items.length} //This is important field to render the next data\n      next={fetchData}\n      hasMore={hasMore}\n      loader={<Loading />}\n      endMessage={<EndMsg />}\n    >\n    {items.map((item) => {\n      return <Comment key={item.id} item={item} />\n           })}\n  </InfiniteScroll>\n  )\n}\n\nexport default B_list\n","import React,{ useEffect, useState} from 'react'\nimport ContainerMap from \"../component/Map.js\"\nimport Container from '../component/Contanier.js';\nimport styled from \"styled-components\"\nimport {useLocation} from \"react-router-dom\"\n\n\n//버튼 차례데로 현재 로케, 필터링 구, 목록\nimport FilterBtn from \"../component/D_filter.js\"\nimport ListBtn from \"../component/B_list.js\"\n\n//local data\nimport data from \"../util/loca\"\nimport { Button } from 'semantic-ui-react'\n\n\nconst Menu_wrapper = styled.div`\n    width : 100%;\n    height : 8vh;\n    border : 1px solid red;\n    display: grid;\n    grid-template-columns: 0.4fr 0.5fr 1fr 0.6fr;\n    text-align: center;\n`\n\nconst Div_area = styled.div`\n    padding-top : 1.3vh;\n    border: 2px solid black;\n    height : 8vh;\n    width : 100%;\n    z-index: 4;\n`\nlet prevGu;\nlet map;\nfunction ShowPage() {\n\n    let {kakao} = window\n    const getLocation = useLocation()\n    let [location, setLocation] = useState({\n        latitude : 0,\n        longitude : 0   \n})\n\n\n    const[gu, setGu] = useState(\"\")\n    console.log(\"바뀐구\", gu)\n\n\n//최초 로딩시 현재 위치 및, 전체 휴지통 위치 마커 표시\nuseEffect(()=> {\n    setLocation(getLocation.state)\n\n\n    let mapContainer = document.getElementById('map'), // 지도를 표시할 div \n    mapOption = {\n        center: new kakao.maps.LatLng(location.latitude, location.longitude), // 지도의 중심좌표\n        level: 5 // 지도의 확대 레벨\n    }; \n\n    let map = new kakao.maps.Map(mapContainer, mapOption); \n\n\n    map = new kakao.maps.Map(mapContainer, mapOption); \n\n    let bounds = new kakao.maps.LatLngBounds();\n\n\n\n    const displayMarker = (place) => {\n        let marker = new kakao.maps.Marker({\n                map: map,\n                position: new kakao.maps.LatLng(parseFloat(place.위도), parseFloat(place.경도)) \n        });\n    }\n\n\n\n    //현재 위치 마커 표시\n    const current = new kakao.maps.LatLng(getLocation.state.latitude, getLocation.state.longitude);\n    let currentMarker = new kakao.maps.Marker({\n        map: map,\n        position: current\n    })\n\n    //전체 데이커 마커 표시\n    for(let i = 0; i < data.length; i++){\n        displayMarker(data[i]);\n        bounds.extend(new kakao.maps.LatLng(data[i].위도, data[i].경도))\n    }\n    \n\n\n    if (prevGu !== gu && prevGu !== undefined) { \n    // 주소-좌표 변환 객체 || 구(드롭다운메뉴 내에서)가 바뀔 때마다 위치 변경.\n    var geocoder = new kakao.maps.services.Geocoder();\n    // 주소로 좌표를 검색합니다\n    geocoder.addressSearch(`${gu}`, function(result, status) {\n        // 정상적으로 검색이 완료됐으면 \n        if (status === kakao.maps.services.Status.OK) {\n            var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n            // 결과값으로 받은 위치를 마커로 표시합니다\n            var marker = new kakao.maps.Marker({\n                map: map,\n                position: coords\n            });\n            // 인포윈도우로 장소에 대한 설명을 표시합니다\n            var infowindow = new kakao.maps.InfoWindow({\n                content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${gu}</div>`\n            });\n            infowindow.open(map, marker);\n            map.setCenter(coords);\n        }\n    });\n    }\n    prevGu = gu; \n\n},[location, gu])\n\n// useEffect(() => {\n//        //let prevGu = gu;\n//     if (setGu !== gu) { \n//     // 주소-좌표 변환 객체 || 구(드롭다운메뉴 내에서)가 바뀔 때마다 위치 변경.\n//     var geocoder = new kakao.maps.services.Geocoder();\n//     // 주소로 좌표를 검색합니다\n//     geocoder.addressSearch(`${gu}`, function(result, status) {\n//         // 정상적으로 검색이 완료됐으면 \n//         if (status === kakao.maps.services.Status.OK) {\n//             var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n//             // 결과값으로 받은 위치를 마커로 표시합니다\n//             var marker = new kakao.maps.Marker({\n//                 map: map,\n//                 position: coords\n//             });\n//             // 인포윈도우로 장소에 대한 설명을 표시합니다\n//             var infowindow = new kakao.maps.InfoWindow({\n//                 content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${gu}</div>`\n//             });\n//             infowindow.open(map, marker);\n//             map.setCenter(coords);\n//         }\n//     });    \n//     }\n//     console.log(\"dddd\")\n// },[gu])\n\n     \n    //현재 위치 조회 버튼\n    const setCurrent = () => {\n         navigator.geolocation.getCurrentPosition((position) => {\n            setLocation(position.coords.latitude, position.coords.longitude)\n        })\n        console.log(\"onclick\")\n    }\n\n    \n\n    //구 변경값을 state로 전달 \n    const handleGu = (data) => {\n        if (gu !== data){\n            setGu(data)\n        }\n        console.log(\"showpage\",data)\n    }\n\n\n\n\n\n    return (\n        <Container>\n            <Menu_wrapper>\n                <Div_area>\n                    <Button basic color='blue' onClick = {setCurrent}>\n                    <span>현재위치조회</span>\n                    </Button>\n                </Div_area>\n\n                <Div_area>\n                    <FilterBtn setting = {handleGu}/>\n                </Div_area>\n\n            <Div_area/>\n\n                <Div_area>\n                    <ListBtn/>\n                </Div_area>\n        </Menu_wrapper>\n        {/* {location.longitude >=1 ? <ContainerMap id = 'map'/> : null} */}\n            <ContainerMap id = 'map'/>\n        </Container>\n\n    )\n}\n\nexport default ShowPage;\n","import React, {useState,useEffect} from 'react'\nimport MainImage from '../component/Img_container'\nimport Btn from \"../component/B_GetCurrentNext\"\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router'\n\n\n\nconst Wrap = styled.div`\n    width : 100%;\n    height : 100%;\n    margin-top : 10vh;\n`\n\nconst ImgCon = styled.div`\n    width: 100%;\n    height : 100%;\n    text-align:left;\n`\n\nconst Header = styled.span`\n    margin-left: 35vh;\n    text-align: right;\n    font-size: 50px;\n`\n\n\n\nfunction Landing(props) {\n    const history = useHistory();\n    const [Clatitude, setCLatitude] = useState()\n    const [Clongitude, setCLongitude] = useState()\n\n    const getCheck = () => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            setCLatitude(position.coords.latitude);\n            setCLongitude(position.coords.longitude);\n        })\n    }\n\n    useEffect(()=>{getCheck()},[Clongitude])\n    console.log(Clatitude, Clongitude)\n  \n    const getLocation = (props) => {\n        if (Clongitude >=1 && Clatitude >=1) {\n            history.push({\n                pathname: \"/PLEA-STREET/map\",\n                state: {\n                    latitude: Clatitude,\n                    longitude : Clongitude\n                }\n            })\n        }else{\n            alert(\"페이지 새로 고침 후 사용자 정보 위치 제공권한에 동의 해주세요!\")\n        }        \n    }\n\n    return (\n        <Wrap>\n          <Header> 가장 가까운 쓰레기통은 어디일까요?</Header>\n            <ImgCon>\n                <Btn onClick = {getLocation}>\n                    <MainImage/>\n                </Btn>\n            </ImgCon>\n        </Wrap>\n    )\n}\n\nexport default Landing\n","import Blist from \"../component/B_list\"\n\nfunction TestPage2() {\n  return (\n    <div>\n      테스트2페이지입니다.\n      <Blist />\n    </div>\n  )\n}\n\nexport default TestPage2","import React from 'react'\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport LandingPage from \"./page/Landing.js\"\nimport ShowPage from \"./page/ShowPage.js\"\n\n//test\nimport TestPage from \"./page/TestPage.js\"\nimport TestPage2 from \"./page/TestPage2.js\"\n\nfunction App() {\n\n\n  return (\n    <HelmetProvider>\n      <BrowserRouter>\n          <Switch>\n            <Route exact path = \"/PLEA-STREET/\" component={LandingPage}/>\n            <Route exact path = \"/PLEA-STREET/map\" component={ShowPage}/>\n            <Route exact path = \"/PLEA-STREET/test\" component={TestPage}/>\n            <Route exact path = \"/PLEA-STREET/test2\" component={TestPage2}/>\n          </Switch>\n      </BrowserRouter>\n    </HelmetProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, BrowserRouter as Router } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\n\n// <React.StrictMode>\n//  </React.StrictMode>,\nReactDOM.render(\n \n       <App />\n, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}