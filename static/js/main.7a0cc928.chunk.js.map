{"version":3,"sources":["component/Img_container.js","component/B_GetCurrentNext.js","component/Map.js","component/Contanier.js","component/D_filter.js","component/Comment.js","component/Loading.js","component/EndMsg.js","component/B_list.js","page/ShowPage.js","page/Landing.js","page/TestPage.js","page/TestPage2.js","App.js","index.js"],"names":["Img","styled","div","MainImage","alt","src","GetLocation","button","showMap","Container","D_filter","setting","useState","gu","setGu","console","log","currentValue","Dropdown","options","text","value","key","placeholder","selection","fluid","onChange","e","name","target","textContent","Comment","item","id","email","body","List","animated","verticalAlign","Item","Image","avatar","Content","Header","Description","Loading","Loader","active","inline","EndMsg","style","textAlign","B_list","map","items","setItems","hasMore","setHasMore","page","setPage","useEffect","a","fetch","res","json","data","getComments","fetchComments","fetchData","commentsFormServer","length","dataLength","next","loader","endMessage","Menu_wrapper","Div_area","ShowPage","kakao","window","getLocation","useLocation","latitude","longitude","location","setLocation","state","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","Map","place","bounds","LatLngBounds","current","i","Marker","position","parseFloat","위도","경도","extend","services","Geocoder","addressSearch","result","status","Status","OK","coords","y","x","marker","InfoWindow","content","open","setCenter","Button","basic","color","onClick","navigator","geolocation","getCurrentPosition","ImgCon","Landing","props","history","useHistory","Clatitude","setCLatitude","Clongitude","setCLongitude","push","pathname","alert","TestPage","TestPage2","App","exact","path","component","LandingPage","ReactDOM","render"],"mappings":"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","file":"static/js/main.7a0cc928.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Img = styled.div`\r\n    width : 100%;\r\n    height : 100px;\r\n`\r\n\r\nfunction MainImage() {\r\n    return (\r\n            <Img>\r\n              <img alt =\"trash_can\" src=\"images/trash_lion.jpeg\"/>\r\n            </Img>\r\n          \r\n    )\r\n}\r\n\r\nexport default MainImage\r\n","import styled from \"styled-components\";\r\n\r\nconst GetLocation = styled.button`\r\n    width : 400px;\r\n    height : 400px;\r\n    border : 1px solid black\r\n`\r\n\r\nexport default GetLocation;","import styled from \"styled-components\"\r\n\r\nconst showMap = styled.div`\r\n    width : 100%;\r\n    height : 90vh;\r\n    border : 1px solid blue;\r\n    z-index: 3;\r\n`\r\n\r\nexport default showMap","import styled from \"styled-components\"\r\n\r\nconst Container = styled.div`\r\n    width : 100%;\r\n    height : 90vh;\r\n    border : 1px solid black;\r\n`\r\n\r\nexport default Container","import React, { useState} from 'react'\r\nimport { Dropdown } from 'semantic-ui-react'\r\n\r\nfunction D_filter({setting}) {\r\n\r\nconst [gu, setGu] = useState(\"\")\r\n\r\nconst gus = [\r\n    {text: \"강동구\", value: \"강동구\", key : 1}, \r\n    {text: \"강남구\", value: \"강남구\", key : 2},\r\n    {text: \"강서구\", value: \"강서구\", key : 3},\r\n    {text: \"강북구\", value: \"강북구\", key : 4},\r\n    {text: \"관악구\", value: \"관악구\", key : 5},\r\n    {text: \"광진구\", value: \"광진구\", key : 6},\r\n    {text: \"구로구\", value: \"구로구\", key : 7},\r\n    {text: \"금천구\", value: \"금천구\", key : 8},\r\n    {text: \"노원구\", value: \"노원구\", key : 9},\r\n    {text: \"동대문구\", value: \"동대문구\", key : 10},\r\n    {text: \"도봉구\", value: \"도봉구\", key : 11},\r\n    {text: \"동작구\", value: \"동작구\", key : 12},\r\n    {text: \"마포구\", value: \"마포구\", key : 13},\r\n    {text: \"서대문구\", value: \"서대문구\", key : 14},\r\n    {text: \"성동구\", value: \"성동구\", key : 15},\r\n    {text: \"성북구\", value: \"성북구\", key : 16},\r\n    {text: \"서초구\", value: \"서초구\", key : 17},\r\n    {text: \"송파구\", value: \"송파구\", key : 18},\r\n    {text: \"영등포구\", value: \"영등포구\", key : 19},\r\n    {text: \"용산구\", value: \"용산구\", key : 20},\r\n    {text: \"양천구\", value: \"양천구\", key : 21},\r\n    {text: \"은평구\", value: \"은평구\", key : 22},\r\n    {text: \"종로구\", value: \"종로구\", key : 23},\r\n    {text: \"종구\", value: \"중구\", key : 24},\r\n    {text: \"중랑구\", value: \"중랑구\", key : 25}\r\n    ]\r\n\r\n    const handleChange = (e, {value}) => {\r\n        let name = e.target.textContent;\r\n        setGu(name)\r\n        setting(name)\r\n    }\r\n    console.log(\"indfilter\",gu)\r\n\r\n    const {currentValue} = gu\r\n\r\n    return (\r\n        <Dropdown\r\n        options={gus}\r\n        placeholder='Choose Gu'\r\n        selection\r\n        fluid\r\n        value={currentValue}\r\n        onChange={handleChange}\r\n      />\r\n    )\r\n}\r\n\r\nexport default D_filter\r\n","import React from 'react'\r\nimport { Image, List } from 'semantic-ui-react'\r\n\r\nfunction Comment({item: { id, email, body }}) {\r\n  return (\r\n    <List animated verticalAlign='middle'>\r\n      <List.Item>\r\n      <Image avatar src='../images/trash_icon.png' />\r\n        <List.Content>\r\n          <List.Header>ID : {id}</List.Header>\r\n          <List.Description>\r\n            EMAIL : {email}\r\n          </List.Description>\r\n          <List.Description>\r\n            body : {body}\r\n          </List.Description>\r\n        </List.Content>\r\n      </List.Item>\r\n    </List>\r\n  )\r\n}\r\n\r\nexport default Comment\r\n","import { Loader } from 'semantic-ui-react'\r\n\r\nfunction Loading() {\r\n  return (\r\n    <Loader active inline='centered'>Loading</Loader>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","function EndMsg() {\r\n  return (\r\n    <p style={{ textAlign: 'center' }}>\r\n      <b>모든 정보가 출력되었습니다!</b>\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default EndMsg\r\n","import React, { useEffect, useState } from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport Comment from './Comment'\r\nimport Loading from './Loading'\r\nimport EndMsg from './EndMsg'\r\n\r\nfunction B_list() {\r\n\r\n  const [items, setItems] = useState([])\r\n\r\n  const [hasMore, setHasMore] = useState(true)\r\n\r\n  const [page, setPage] = useState(2)\r\n\r\n  useEffect(() => {\r\n    const getComments = async () => {\r\n\r\n      const res = await fetch(\r\n        // 'http://localhost:3004/comments?_page=1&_limit=20'\r\n        'https://jsonplaceholder.typicode.com/comments?_page=1&_limit=20'\r\n      )\r\n      const data = await res.json()\r\n      setItems(data)\r\n    }\r\n\r\n    getComments()\r\n  }, [])\r\n\r\n  console.log(items)\r\n\r\n  const fetchComments = async () => {\r\n    const res = await fetch(\r\n      // `http://localhost:3004/comments?_page=${page}&_limit=20`\r\n      `https://jsonplaceholder.typicode.com/comments?_page=${page}&_limit=20`\r\n    )\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    const commentsFormServer = await fetchComments()\r\n\r\n    setItems([...items, ...commentsFormServer])\r\n\r\n    if (commentsFormServer.length === 0 || commentsFormServer.length < 20) {\r\n      setHasMore(false)\r\n    }\r\n\r\n    setPage(page + 1)\r\n\r\n  }\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={items.length} //This is important field to render the next data\r\n      next={fetchData}\r\n      hasMore={hasMore}\r\n      loader={<Loading />}\r\n      endMessage={<EndMsg />}\r\n    >\r\n    {items.map((item) => {\r\n      return <Comment key={item.id} item={item} />\r\n           })}\r\n  </InfiniteScroll>\r\n  )\r\n}\r\n\r\nexport default B_list\r\n","import React,{ useEffect, useState} from 'react'\r\nimport ContainerMap from \"../component/Map.js\"\r\nimport Container from '../component/Contanier.js';\r\nimport styled from \"styled-components\"\r\nimport {useLocation} from \"react-router-dom\"\r\n\r\n\r\n//버튼 차례데로 현재 로케, 필터링 구, 목록\r\nimport FilterBtn from \"../component/D_filter.js\"\r\nimport ListBtn from \"../component/B_list.js\"\r\n\r\n//local data\r\nimport data from \"../util/loca\"\r\nimport { Button } from 'semantic-ui-react'\r\n\r\n\r\n\r\nconst Menu_wrapper = styled.div`\r\n    width : 100%;\r\n    height : 8vh;\r\n    border : 1px solid red;\r\n    display: grid;\r\n    grid-template-columns: 0.4fr 0.5fr 1fr 0.6fr;\r\n    text-align: center;\r\n`\r\n\r\nconst Div_area = styled.div`\r\n    padding-top : 1.3vh;\r\n    border: 2px solid black;\r\n    height : 8vh;\r\n    width : 100%;\r\n    z-index: 4;\r\n`\r\nlet prevGu;\r\nlet map;\r\nfunction ShowPage() {\r\n\r\n    let {kakao} = window\r\n    const getLocation = useLocation()\r\n    let [location, setLocation] = useState({\r\n        latitude : 0,\r\n        longitude : 0   \r\n})\r\n\r\n\r\n    const[gu, setGu] = useState(\"\")\r\n    console.log(\"바뀐구\", gu)\r\n\r\n\r\n\r\n\r\n\r\n\r\n//최초 로딩시 현재 위치 및, 전체 휴지통 위치 마커 표시\r\nuseEffect(()=> {\r\n    setLocation(getLocation.state)\r\n    let mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n    mapOption = {\r\n        center: new kakao.maps.LatLng(location.latitude, location.longitude), // 지도의 중심좌표\r\n        level: 7 // 지도의 확대 레벨\r\n    }; \r\n\r\n    map = new kakao.maps.Map(mapContainer, mapOption); \r\n    let bounds = new kakao.maps.LatLngBounds();\r\n\r\n \r\n    const displayMarker = (place) => {\r\n        let marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: new kakao.maps.LatLng(parseFloat(place.위도), parseFloat(place.경도)) \r\n        });\r\n    }\r\n\r\n    //현재 위치 마커 표시\r\n    const current = new kakao.maps.LatLng(getLocation.state.latitude, getLocation.state.longitude);\r\n    let currentMarker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: current\r\n    })\r\n\r\n    //전체 데이커 마커 표시\r\n    for(let i = 0; i < data.length; i++){\r\n        displayMarker(data[i]);\r\n        bounds.extend(new kakao.maps.LatLng(data[i].위도, data[i].경도))\r\n    }\r\n    \r\n\r\n\r\n    // if (prevGu !== gu && prevGu !== undefined) { \r\n    // // 주소-좌표 변환 객체 || 구(드롭다운메뉴 내에서)가 바뀔 때마다 위치 변경.\r\n    // var geocoder = new kakao.maps.services.Geocoder();\r\n    // // 주소로 좌표를 검색합니다\r\n    // geocoder.addressSearch(`${gu}`, function(result, status) {\r\n    //     // 정상적으로 검색이 완료됐으면 \r\n    //     if (status === kakao.maps.services.Status.OK) {\r\n    //         var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n    //         // 결과값으로 받은 위치를 마커로 표시합니다\r\n    //         var marker = new kakao.maps.Marker({\r\n    //             map: map,\r\n    //             position: coords\r\n    //         });\r\n    //         // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n    //         var infowindow = new kakao.maps.InfoWindow({\r\n    //             content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${gu}</div>`\r\n    //         });\r\n    //         infowindow.open(map, marker);\r\n    //         map.setCenter(coords);\r\n    //     }\r\n    // });\r\n    // }\r\n    // prevGu = gu; \r\n\r\n},[location])\r\n\r\nuseEffect(() => {\r\n    //let prevGu = gu;\r\n    if (setGu !== gu) { \r\n    // 주소-좌표 변환 객체 || 구(드롭다운메뉴 내에서)가 바뀔 때마다 위치 변경.\r\n    var geocoder = new kakao.maps.services.Geocoder();\r\n    // 주소로 좌표를 검색합니다\r\n    geocoder.addressSearch(`${gu}`, function(result, status) {\r\n        // 정상적으로 검색이 완료됐으면 \r\n        if (status === kakao.maps.services.Status.OK) {\r\n            var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n            // 결과값으로 받은 위치를 마커로 표시합니다\r\n            var marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: coords\r\n            });\r\n            // 인포윈도우로 장소에 대한 설명을 표시합니다\r\n            var infowindow = new kakao.maps.InfoWindow({\r\n                content: `<div style=\"width:150px;text-align:center;padding:6px 0;\">${gu}</div>`\r\n            });\r\n            infowindow.open(map, marker);\r\n            map.setCenter(coords);\r\n        }\r\n    });    \r\n    }\r\n\r\n},[gu])\r\n\r\n     \r\n    //현재 위치 조회 버튼\r\n    const setCurrent = () => {\r\n         navigator.geolocation.getCurrentPosition((position) => {\r\n            setLocation(position.coords.latitude, position.coords.longitude)\r\n        })\r\n        console.log(\"onclick\")\r\n    }\r\n\r\n    const handleGu = (data) => {\r\n        setGu(data);\r\n        console.log(\"showpage\",data)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Menu_wrapper>\r\n                <Div_area>\r\n                    <Button basic color='grey' onClick = {setCurrent}>\r\n                    <span>현재위치조회</span>\r\n                    </Button>\r\n                </Div_area>\r\n\r\n                <Div_area>\r\n                    <FilterBtn setting = {handleGu}/>\r\n                </Div_area>\r\n\r\n            <Div_area/>\r\n\r\n                <Div_area>\r\n                    <ListBtn/>\r\n                </Div_area>\r\n        </Menu_wrapper>\r\n        {/* {location.longitude >=1 ? <ContainerMap id = 'map'/> : null} */}\r\n            <ContainerMap id = 'map'/>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default ShowPage;\r\n","import React, {useState,useEffect} from 'react'\r\nimport MainImage from '../component/Img_container'\r\nimport Btn from \"../component/B_GetCurrentNext\"\r\nimport styled from 'styled-components'\r\nimport ShowPage from './ShowPage'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst ImgCon = styled.div`\r\n    width: 100%;\r\n    height : 20px;\r\n    text-align:center;\r\n`\r\n\r\nfunction Landing(props) {\r\n    const history = useHistory();\r\n    const [Clatitude, setCLatitude] = useState()\r\n    const [Clongitude, setCLongitude] = useState()\r\n\r\n    const getCheck = () => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            setCLatitude(position.coords.latitude);\r\n            setCLongitude(position.coords.longitude);\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{getCheck()},[Clongitude])\r\n    console.log(Clatitude, Clongitude)\r\n  \r\n    const getLocation = (props) => {\r\n        if (Clongitude >=1 && Clatitude >=1) {\r\n            history.push({\r\n                pathname: \"/PLEA-STREET/map\",\r\n                state: {\r\n                    latitude: Clatitude,\r\n                    longitude : Clongitude\r\n                }\r\n            })\r\n        }else{\r\n            alert(\"페이지 새로 고침 후 사용자 정보 위치 제공권한에 동의 해주세요!\")\r\n        }        \r\n    }\r\n\r\n    return (\r\n        <ImgCon>\r\n            <p>쓰레기는 쓰레기통에</p>\r\n            <MainImage/>\r\n            <Btn onClick = {getLocation}/>\r\n        </ImgCon>\r\n    )\r\n}\r\n\r\nexport default Landing\r\n","import React, { useState,useEffect } from 'react'\r\nimport { Dropdown } from 'semantic-ui-react'\r\n\r\nfunction TestPage() {\r\n\r\nconst [gu, setGu] = useState(\"\")\r\n\r\nconst gus = [\r\n    {text: \"강동구\", value: \"강동구\", key : 1}, \r\n    {text: \"강남구\", value: \"강남구\", key : 2},\r\n    {text: \"강서구\", value: \"강서구\", key : 3},\r\n    {text: \"강북구\", value: \"강북구\", key : 4},\r\n    {text: \"관악구\", value: \"관악구\", key : 5},\r\n    {text: \"광진구\", value: \"광진구\", key : 6},\r\n    {text: \"구로구\", value: \"구로구\", key : 7},\r\n    {text: \"금천구\", value: \"금천구\", key : 8},\r\n    {text: \"노원구\", value: \"노원구\", key : 9},\r\n    {text: \"동대문구\", value: \"동대문구\", key : 10},\r\n    {text: \"도봉구\", value: \"도봉구\", key : 11},\r\n    {text: \"동작구\", value: \"동작구\", key : 12},\r\n    {text: \"마포구\", value: \"마포구\", key : 13},\r\n    {text: \"서대문구\", value: \"서대문구\", key : 14},\r\n    {text: \"성동구\", value: \"성동구\", key : 15},\r\n    {text: \"성북구\", value: \"성북구\", key : 16},\r\n    {text: \"서초구\", value: \"서초구\", key : 17},\r\n    {text: \"송파구\", value: \"송파구\", key : 18},\r\n    {text: \"영등포구\", value: \"영등포구\", key : 19},\r\n    {text: \"용산구\", value: \"용산구\", key : 20},\r\n    {text: \"양천구\", value: \"양천구\", key : 21},\r\n    {text: \"은평구\", value: \"은평구\", key : 22},\r\n    {text: \"종로구\", value: \"종로구\", key : 23},\r\n    {text: \"종구\", value: \"중구\", key : 24},\r\n    {text: \"중랑구\", value: \"중랑구\", key : 25}\r\n    ]\r\n\r\n    const handleChange = (e, {value}) => {\r\n        console.log(value);\r\n        let name = e.target.textContent;\r\n        console.log(name)\r\n    }\r\n\r\n    const {currentValue} = gu\r\n\r\n    return (\r\n        <Dropdown\r\n        options={gus}\r\n        placeholder='Choose Gu'\r\n        selection\r\n        value={currentValue}\r\n        onChange={handleChange}\r\n      />\r\n    )\r\n}\r\n\r\nexport default TestPage\r\n","import Blist from \"../component/B_list\"\r\n\r\nfunction TestPage2() {\r\n  return (\r\n    <div>\r\n      테스트2페이지입니다.\r\n      <Blist />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TestPage2","import React from 'react'\r\nimport { HelmetProvider } from \"react-helmet-async\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport LandingPage from \"./page/Landing.js\"\r\nimport ShowPage from \"./page/ShowPage.js\"\r\n\r\n//test\r\nimport TestPage from \"./page/TestPage.js\"\r\nimport TestPage2 from \"./page/TestPage2.js\"\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <HelmetProvider>\r\n      <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path = \"/PLEA-STREET/\" component={LandingPage}/>\r\n            <Route exact path = \"/PLEA-STREET/map\" component={ShowPage}/>\r\n            <Route exact path = \"/PLEA-STREET/test\" component={TestPage}/>\r\n            <Route exact path = \"/PLEA-STREET/test2\" component={TestPage2}/>\r\n          </Switch>\r\n      </BrowserRouter>\r\n    </HelmetProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter, BrowserRouter as Router } from \"react-router-dom\";\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n// <React.StrictMode>\r\n//  </React.StrictMode>,\r\nReactDOM.render(\r\n \r\n       <App />\r\n, \r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}